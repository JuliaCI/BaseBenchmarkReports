cset: moving following pidspec: 28939
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.550864945 seconds)
loading group "string"... done (took 0.526890211 seconds)
loading group "linalg"... done (took 8.659748113 seconds)
loading group "parallel"... done (took 0.177332984 seconds)
loading group "find"... done (took 1.397388263 seconds)
loading group "tuple"... done (took 2.03928799 seconds)
loading group "dates"... done (took 1.337412637 seconds)
loading group "micro"... done (took 0.208693156 seconds)
loading group "io"... done (took 0.590453633 seconds)
loading group "scalar"... done (took 42.091314611 seconds)
loading group "sparse"... done (took 12.93259423 seconds)
loading group "broadcast"... done (took 1.045512834 seconds)
loading group "union"... done (took 14.278058809 seconds)
loading group "simd"... done (took 4.944033715 seconds)
loading group "random"... done (took 9.89214033 seconds)
loading group "problem"... done (took 2.116137364 seconds)
loading group "array"... done (took 24.422374744 seconds)
loading group "misc"... done (took 1.148832314 seconds)
loading group "sort"... done (took 3.599384222 seconds)
loading group "collection"... done (took 21.197544592 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.603897474 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136628978 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146523256 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.17558259 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20769225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138083886 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155780417 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.553850818 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.042172479 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20760892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143081121 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550740364 seconds)
done (took 5.802749892 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.386379748 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.076535253 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128300792 seconds)
  done (took 0.896458502 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075727622 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17532314 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093986121 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109558421 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110371447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107842012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093573961 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109360623 seconds)
  done (took 1.490354384 seconds)
done (took 3.547476162 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.81465764 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.815906752 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.492749861 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128448133 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154691439 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129918719 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.314132731 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160087441 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104802888 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.117639335 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172645492 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.352727306 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.425352054 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941929774 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092989656 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128185632 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080413776 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695563097 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081035974 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128666562 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513562406 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.110446434 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116749125 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12446457 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206117443 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130723291 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181393495 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103956751 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691123779 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101323744 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183946925 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098310973 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159051168 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.218505737 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079782776 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107512758 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678172728 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188668502 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111346452 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095639483 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6758729 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08023157 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187859846 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106561578 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109794489 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186566648 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117134288 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078267117 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103831524 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102017823 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157837983 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477564093 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106246675 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.143373301 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113427726 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683812053 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093866378 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15579518 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125541881 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107916318 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097469275 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115993401 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155392989 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122406549 seconds)
  done (took 19.672747379 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117038024 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138791127 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093378146 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140087616 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13856901 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09591257 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082687873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093368248 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107719946 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182440497 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135664833 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141844935 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074476747 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.096610125 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116950368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229870087 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119345255 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118543088 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081297959 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105706426 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123474529 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112691868 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107411847 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092624036 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168558287 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205494547 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119981781 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122380479 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092762143 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098670081 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142006884 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160803326 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07644724 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09428682 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179801938 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121673039 seconds)
  done (took 5.135140635 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199177339 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114971931 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189639561 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17758671 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.160175691 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149596438 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167148056 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117449353 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263942751 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.171366444 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163972129 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128743305 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110956341 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078262145 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095420254 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077636763 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.74962623 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182668758 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149568298 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104296708 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104146229 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096949078 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371333692 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083578753 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096462201 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084094541 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087983346 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174228051 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082674958 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224291964 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116517541 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088309584 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132030086 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207824391 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109990719 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097787767 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083872613 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138603631 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096763423 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212310017 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106385242 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077777044 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120538673 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115948992 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129111108 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099215921 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10908002 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225395064 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099093002 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099077555 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.076016517 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195958668 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094102535 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095706687 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331651088 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114573297 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084808398 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097558015 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.30730106 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131191682 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080806728 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076247543 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102187349 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075894705 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405375266 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087972358 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098399223 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0785379 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155579418 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.0485359 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085013538 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103253087 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100420073 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084856358 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116344527 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079421775 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076734729 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097719669 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077018584 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100655751 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113344144 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083659211 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095246649 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145503455 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096807895 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09661285 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116460209 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122768242 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083117849 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094686341 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1123077 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096051178 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081340972 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141855351 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103569231 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11333804 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082710965 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141656747 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094813109 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181074927 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096598531 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121237651 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083363631 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127786535 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117909051 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07827346 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101293827 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075878913 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097740842 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146274664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094328756 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078596953 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099399501 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091597097 seconds)
  done (took 23.521952866 seconds)
done (took 49.018859377 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416560239 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111747787 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108816738 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109009146 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108373709 seconds)
  done (took 1.620842493 seconds)
done (took 2.361989595 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320718523 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196439865 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098652652 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190127362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086291258 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195453063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163142775 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098190371 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206538387 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080921756 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185198506 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081853302 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103241503 seconds)
  done (took 2.775036037 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092993407 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115620423 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079953537 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105987284 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075227547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08961419 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106145088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127583607 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089809965 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083615084 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091400624 seconds)
  done (took 1.792718001 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092420678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114239219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079555443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089014613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091560021 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089329545 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106521616 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099494505 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106851843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084007784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091318076 seconds)
  done (took 1.780839562 seconds)
done (took 7.07625357 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.120342347 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.849034928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122295043 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173139582 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333742537 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.219575788 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.647870127 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134412342 seconds)
  done (took 16.514378928 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109327228 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.11346333 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078773126 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096406618 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081016035 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09659825 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080878794 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094245573 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080864867 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096450259 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077726149 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096223676 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081095495 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095247623 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077975182 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097041234 seconds)
  done (took 2.256526119 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114830065 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112745301 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101432049 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088184421 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100073075 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099468814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085781654 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100842134 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080995306 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098883571 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088078544 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103313856 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101525688 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081115762 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100722572 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089739751 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097487667 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084869693 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101988384 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085201633 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104154517 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099384366 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086289733 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10425701 seconds)
  done (took 3.157642979 seconds)
done (took 22.666023988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166578507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08272464 seconds)
  done (took 0.991213904 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103047235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11938799 seconds)
  done (took 0.97056384 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107072183 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095686599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133949253 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113512228 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080154185 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080156529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128758125 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096947025 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080305503 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09721804 seconds)
  done (took 1.762417903 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08593556 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100895883 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088850357 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117575687 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108204898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08257892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101637807 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083579865 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102201268 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078478468 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103254973 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098133473 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102934601 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11683882 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08421429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.222164382 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106659271 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08330277 seconds)
  done (took 2.61511289 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081742024 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08360064 seconds)
  done (took 0.918572935 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083701668 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095803095 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081800698 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097851224 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078288556 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095264431 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077674407 seconds)
  done (took 1.360911739 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476068569 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.24696118 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30515202 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112650934 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130427469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.353284698 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132093895 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.093723697 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111463265 seconds)
  done (took 2.769090852 seconds)
done (took 12.135317922 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091105277 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131251754 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.471278439 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11510909 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076765975 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155999198 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.260282294 seconds)
done (took 2.053080335 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342091692 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120818302 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089123978 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077845418 seconds)
  done (took 1.379616671 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080376553 seconds)
    (2/2) benchmarking "read"...
    done (took 0.086358229 seconds)
  done (took 0.922054202 seconds)
done (took 3.055967266 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080011342 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078491607 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.093785968 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077066431 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091563862 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074813529 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128716827 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076736079 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095335144 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076897107 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095739421 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.076679609 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07665804 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092682538 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075193872 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092405203 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077078203 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09122763 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075434091 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07444719 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091872459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076885323 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092330334 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075514031 seconds)
  done (took 2.826582401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107099845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098401902 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084064013 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100509164 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081427464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10087086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100719006 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078064384 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100569608 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08019839 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098508287 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081951435 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097745741 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081189052 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097347048 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082015905 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100455543 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07854521 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097609377 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08226549 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099134456 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079151566 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.1003265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101363962 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081937731 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099356557 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079600315 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095726163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082606551 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099551157 seconds)
  done (took 3.507751932 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087336253 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074532709 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092920621 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086233087 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092379026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078688413 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092258487 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078559506 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096768184 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075549492 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079886666 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091774947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077833541 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096273073 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080547778 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099397653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092830533 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095348216 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078365628 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098644862 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081061877 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095228242 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07807367 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074883642 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092703438 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075118982 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093486851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075342838 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09501928 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075133052 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097234585 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082683124 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075176042 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104959123 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082127436 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091592273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083635272 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093074434 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080669492 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092697877 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075329518 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093073069 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078431389 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087199583 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095313937 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076399872 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096585048 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080485914 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09733411 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082541566 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093237441 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078691459 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098842208 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080563108 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081425717 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093246064 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076700404 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092703834 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079882271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093661372 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075447906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07589011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099915978 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077373006 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11624795 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103772828 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079185084 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08174247 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096544464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084367236 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099733491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094653447 seconds)
  done (took 7.045459298 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082803267 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104296529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077483104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095150531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074287867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075845253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100426564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075861362 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095049137 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094467378 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092917655 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077525466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094807334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080419406 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094076011 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07815506 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103338852 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074859349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094046526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080228514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093676297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08351336 seconds)
  done (took 2.69095094 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22168518 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102897614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140470803 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112467611 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096527745 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111616882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083349135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102677756 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100622335 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087025934 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103840094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083529176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113474845 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104062729 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086527865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105946334 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083725916 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104861991 seconds)
  done (took 2.713010913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092171022 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097642794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103445186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097255533 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078759067 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099754625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08591418 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11600206 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082024668 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097377502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106905972 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081250519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09961646 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079500853 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099349721 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079274572 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098762937 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079494806 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107212007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085739419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103638859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089366931 seconds)
  done (took 2.831743058 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096824915 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098154171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100346708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101264691 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077149815 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098061205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087826851 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096259204 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088102924 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098836047 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080111475 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097403305 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085885581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096689416 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105489988 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079973545 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098361421 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079431893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097233866 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077575958 seconds)
  done (took 2.61182406 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123221595 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11241724 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093570171 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121910411 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11169429 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094399755 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123037544 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094334912 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11165952 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125091545 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093952221 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111084397 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122424034 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101317766 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112126881 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104894323 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122094042 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123090728 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093798873 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110700328 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124107363 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094173408 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122461096 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094343537 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111118326 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111550377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094345548 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120182506 seconds)
  done (took 3.851989713 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081228253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081171089 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09810261 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078424601 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097535005 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078629211 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078291509 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097222601 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07947794 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094136496 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078048453 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096532512 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079125463 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077801651 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096250524 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077950656 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096067551 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076060543 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093681324 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076936621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078470287 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096069324 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07902817 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094295125 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075518313 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09565527 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076568509 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07635576 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095914915 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076242085 seconds)
  done (took 3.329054516 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090797592 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109678766 seconds)
  done (took 0.97646713 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078568484 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113235981 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076135187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100159779 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084842968 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097907422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089036813 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102748619 seconds)
  done (took 1.516717336 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106005541 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118474431 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08510211 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109229899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098730372 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115280121 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162371948 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085864591 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104988688 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080319066 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116518777 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07944712 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107575901 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08552526 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105592976 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111662264 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080028036 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089757895 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105416 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08237001 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104459556 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112609339 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089664611 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10585682 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081131259 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109053403 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093562439 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108882599 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085396894 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109102111 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086620616 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091751601 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085089987 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102669189 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081145867 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11541087 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115237777 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084483575 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106304375 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086440857 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107244717 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07836803 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108102562 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086502029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109722269 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085371073 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104940162 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078655256 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097961033 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086331106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096128178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084062771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091579524 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089720729 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106439648 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098037292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100330053 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084549506 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102703312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083121103 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105217427 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083834352 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108825832 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083355751 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107500458 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089131884 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105226325 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0784314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091232425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081358169 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107219298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103935203 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110428926 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103437681 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086471341 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099167361 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085995057 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10463339 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088434182 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108762816 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084593138 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105341674 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090604709 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100988423 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083519786 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105224433 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08183993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10125248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080851033 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118368628 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082286716 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098583153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080430255 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108627727 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084079464 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101656709 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081249788 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108411716 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074137352 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103857844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086205636 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105718039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093684605 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104327646 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086609639 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107171611 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091204578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103728381 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083400831 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095150709 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086224709 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100429907 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089420078 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093167307 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085814441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101886778 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086515514 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109568317 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082062207 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103460044 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091558421 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110343708 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100501273 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076757431 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084227618 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104085203 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108244873 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092050293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100872899 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07891589 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078909361 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107312832 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102393288 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087331649 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103536059 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085930019 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074426183 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099106239 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08503618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109426552 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100980718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086619435 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108409123 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086901976 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102518542 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090110616 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10174972 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080518451 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108417018 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084596421 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097331174 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090873727 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103166986 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083230142 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104877257 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090879554 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102929981 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086019454 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100738746 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08681014 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105229887 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080131778 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104077614 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083399081 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111198432 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084660155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097201426 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077946771 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106495537 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081076169 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102748929 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080534173 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102830405 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086059519 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100427234 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083522434 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102111861 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096807654 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12045915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086694367 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105794029 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091240251 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103161298 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086580879 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10240874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087177861 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104436892 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089118346 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106322735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086127766 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103310149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077757554 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105467139 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090221063 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099152241 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08259617 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099413702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085538581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110571819 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08597086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104529462 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083453091 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105553123 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091207592 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104025318 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08460728 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098867388 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085101657 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108172957 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087265926 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10531815 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092377646 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104871841 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080066846 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108874738 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083057425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108000608 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078753453 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099420984 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0818655 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105515447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084135856 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102878061 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074986175 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108309841 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09172176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104189842 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080861544 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104418183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095063403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102455523 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091550485 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103066022 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08869643 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117629347 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081594601 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103673157 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093823232 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104677278 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075260429 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107180685 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083036475 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098848288 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084317275 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102216042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087510989 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107065671 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087062128 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093684389 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085589786 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.1019586 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082470027 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098116255 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091448143 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105448447 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085773587 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113496677 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087658854 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105097498 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0875129 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107363244 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087507071 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105981536 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086574586 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105771313 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083922819 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0994676 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085887076 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099621471 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082471571 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102882022 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086380097 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104650011 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088335786 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103358235 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090236129 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103982829 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086968458 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12106265 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101509186 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081273349 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105673472 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088282425 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103738288 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085068685 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098135818 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091359733 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104420957 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092276318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103475413 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077556797 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104515289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084626062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106282198 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087593221 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105453227 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083804851 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104162382 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085366409 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113912827 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082870001 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111159628 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087978015 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106334752 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085674527 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104372834 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084081659 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100178013 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085557391 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106237776 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087023273 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.1042722 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088194227 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105762474 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084771981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103268619 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087801289 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106086816 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088843146 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09482582 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081346319 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.1010263 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087170084 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109195566 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087605929 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103293382 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084544366 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10734765 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084953881 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096633813 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091365236 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107722527 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087187458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113990676 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08200122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104429698 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0963923 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094099697 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084451346 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100715461 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082650987 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110286605 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087305434 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109798991 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086854416 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100145855 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078481229 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106325673 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084023899 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07585506 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101516893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08880288 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102381987 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084431247 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105356244 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088914125 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107253569 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090877497 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105210311 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085886106 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106224112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079164648 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101573388 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082086437 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105441875 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088112266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101051526 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079091412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105217383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08622149 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105028572 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085328327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103010233 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091789093 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105252431 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086815681 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110635119 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076467886 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104919904 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086732323 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104579257 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081452802 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105567319 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088259993 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107388612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09071573 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104599458 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088800467 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105709907 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083166147 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104889787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086215682 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105682491 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081927039 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10638613 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092906001 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10205529 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0865463 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106201021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083474 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106976815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087947109 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105033395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090638472 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105502034 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086007935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108911252 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086823139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106436145 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088330929 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103281315 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090501333 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100279337 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093363887 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106919316 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088127571 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10445924 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083142508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105290217 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086340624 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104094205 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091748844 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106789458 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083006397 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100336199 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0841853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105008241 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092619089 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111651389 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08653055 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106088773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080277323 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098039186 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089181031 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102232879 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085852472 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108101609 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090795437 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10601988 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083941028 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10398447 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091768335 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109620455 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088173146 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101744429 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089414121 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106626929 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085946126 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103382643 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085906326 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106558222 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088574309 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10513439 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083032371 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114684373 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090714135 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109242263 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085558558 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108728846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085370799 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100061129 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088306389 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106291511 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108178097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087865515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086771725 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117104817 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100315766 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086617914 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112048174 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086712225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111077422 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081603149 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105992263 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089229256 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108235517 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081496663 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101190088 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083393265 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106810001 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082350207 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080027316 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116862712 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110668158 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086937016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104253345 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084674175 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100138228 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080728631 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081730192 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108528393 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085481403 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113928866 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100892459 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082463509 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080362244 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104986579 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087249968 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107991211 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079260934 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099993128 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082854381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106316929 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092853145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10529013 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086965621 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107701405 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086686998 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102341037 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092706908 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098127569 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087874436 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117746954 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087960186 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108495367 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.1086666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093740421 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107140728 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081413493 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107542342 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087282087 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107094936 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089641943 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107644366 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10216496 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107648152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08284234 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104895111 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086226314 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101609191 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094208193 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108546339 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087736681 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108387358 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084972163 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108275716 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093154235 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108378213 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090430104 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10706828 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08478075 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105717177 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084618889 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104161592 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089076875 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108268962 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086624942 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108883725 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082922077 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116274956 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1123739 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089462856 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078974275 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10267401 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082823637 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10142624 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08939154 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100560469 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085639284 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104460883 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08575515 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108735514 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089587586 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106322318 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089336141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105949864 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077042809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109934275 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087909364 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108520059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079458937 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106598188 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090633892 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110995095 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093386671 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104476196 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08820061 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105361229 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089441095 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100520715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09133758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105317878 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08598606 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101963143 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087401937 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107732448 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08912565 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108013817 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090881616 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106224673 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09201033 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109898987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081205239 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098954958 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090562651 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103158041 seconds)
  done (took 57.951252493 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15211488 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089169186 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078764909 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098605655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125671672 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08304235 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09727958 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082527273 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10157427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092041502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09810499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078612794 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119887523 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127326366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123150473 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093025236 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097791138 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08266332 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097509579 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082414749 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118550599 seconds)
  done (took 2.942557498 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107825393 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116612487 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114752039 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09996611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109281004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116249041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094723098 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116108355 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118971157 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09089525 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11914684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116127196 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090098445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110924726 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110142363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093960485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120209625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108336551 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09816829 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114582285 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113121299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095319705 seconds)
  done (took 3.196784086 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095516388 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085409179 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110375906 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080820271 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105705219 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080473022 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111332881 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084871912 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112492276 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086670089 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.103157394 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086314452 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111338388 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080895639 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.104016129 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082903808 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11125448 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086678571 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107518432 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080855104 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.125848971 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080979144 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101280112 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084476903 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115292921 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087737373 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105940066 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086826612 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.1033675 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087197648 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102307833 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088802177 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109804867 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084598891 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103483212 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08764292 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106089583 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081802689 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08346334 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110349736 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.081855997 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.1078859 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093903509 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103941898 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.084016498 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108902771 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08865674 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100886949 seconds)
  done (took 5.442790489 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123082237 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156196738 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086416067 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146364938 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122679008 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097049602 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.108411078 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145811764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.081177135 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10681295 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12499402 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.100498275 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10946276 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112536122 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087469575 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106318448 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089556371 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102416255 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092031345 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105488987 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112305412 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090932433 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121055898 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117872166 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09220931 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10509145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084083987 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11231793 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117261025 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093961536 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113042573 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094902918 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122874039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109180528 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0859099 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110231864 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124349787 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088378582 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110309329 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08187527 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109199342 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092968876 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111525872 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124782995 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088320999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108328764 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086723237 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100551832 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121104982 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090722315 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117115698 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120670348 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092616332 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107618707 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093157123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122997334 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107260888 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086594632 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110847878 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098668458 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102864043 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092187451 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1213318 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109059214 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096884963 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121163498 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108850095 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091965877 seconds)
  done (took 8.198024726 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121172546 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113050812 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12446695 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105164026 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113465162 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092801469 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113537802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111970707 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093694053 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119330322 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093088017 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160779483 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109887165 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118905529 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093868644 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112510233 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092838414 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112890885 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112014523 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093438962 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112398662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104159774 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114232884 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124611389 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12514373 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090194584 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112514701 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09334007 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12503726 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111916497 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106763622 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113233754 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112910521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105061407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126456403 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112567727 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087442609 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112802831 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093197016 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11295311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089057134 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124898473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112903107 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089742524 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113151085 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11299627 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104968411 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125711215 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119327693 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100516759 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114129038 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124370878 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092893359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113697055 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125105765 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133477481 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105448445 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126010315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112710867 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123755143 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105709039 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133355636 seconds)
  done (took 7.746044388 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088832526 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083754247 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102749687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082259401 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105263957 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082285808 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083407119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105230138 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083932024 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104826472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084432819 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102176433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082408313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083703987 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101793494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081893877 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102357205 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082037436 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10351076 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082305097 seconds)
  done (took 2.66770773 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098326901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125321693 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085922643 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112161488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087116947 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111806541 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086533911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108290211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086775009 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107894142 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117152934 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09763884 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104890236 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092228017 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117888043 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111706504 seconds)
  done (took 2.491444202 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108533562 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126597176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129516297 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090390707 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102754529 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093097163 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107252621 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080901565 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100441136 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094130874 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110508176 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090931529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107463996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083175928 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085018553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1124132 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08041899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109253629 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08696565 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131278637 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109446328 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088114855 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108817279 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086979949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107849942 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089960188 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11215263 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082355269 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103363869 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088323264 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108993572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092388334 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102527496 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088974027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104511683 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082045057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108199944 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088067426 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111693094 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086995215 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10291982 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087801713 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108810668 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090786309 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101059026 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088672162 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100582356 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091767474 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.1073008 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087865397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107454187 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093142419 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112781741 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096979005 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115800431 seconds)
  done (took 6.317031044 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104960124 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109140462 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090623026 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102853095 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088652993 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113680267 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090124048 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10747937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087883574 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102268358 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088749726 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108977259 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087861597 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108915595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087738619 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109279697 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080808562 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106918288 seconds)
  done (took 2.623057052 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093717245 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084409728 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113592504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084483939 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10607855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086582617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102162761 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082867299 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103959696 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084785194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105541118 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087543434 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103660697 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087390244 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104863531 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085760383 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106466734 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08438377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085344132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101958027 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087004768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103456008 seconds)
  done (took 2.930575863 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106297848 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136687648 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.09926716 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.148131686 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109995904 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089511084 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11942566 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089358015 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128101107 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088527845 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109092212 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088278487 seconds)
  done (took 2.158275449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115124374 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143334918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08600917 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109839613 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1200163 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091828648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110039428 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090559636 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12514017 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12379149 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090655033 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125338349 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123956274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12210322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099485058 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119475662 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110400644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090744331 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106656817 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133694907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091223923 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124906417 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09054758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111401658 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110791923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102664136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125452588 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124975862 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090405389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125370902 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119379873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09095787 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12535932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124412967 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086956888 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125211116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110912591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133955206 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099699442 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123690022 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107633039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099911338 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125290772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11846613 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104986143 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112610178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118582841 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090924199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111408366 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139768878 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118949017 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102822332 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119840646 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125170241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125666756 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139793946 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10489808 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122757881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119720718 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124205399 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102814146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120562298 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122799177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124582678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100303609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122054529 seconds)
  done (took 8.355018165 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131203303 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108416102 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090313174 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125889403 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123618883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111396482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091352328 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111499432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091887409 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107695974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.405842997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090832976 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123838956 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123442941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090369922 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11185599 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110926412 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102994228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108286419 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140503154 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090392264 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123029528 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122059146 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122794612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124231788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09940996 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111037962 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09072529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111943279 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110498675 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098657006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111165434 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122897855 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087598771 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122039999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09022236 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112242308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118828096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092078405 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11939727 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122009265 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134119245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091145509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11140136 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124193935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09109074 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110790272 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086983382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112033663 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087536316 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124758177 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124418198 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124560382 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103356143 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112037401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110533061 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092282537 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110960234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091299142 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120719979 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12280572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091194367 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139961364 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110793794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091282538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123785939 seconds)
  done (took 8.402660922 seconds)
done (took 156.084309895 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106972335 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141964293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099655729 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169659737 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085222747 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142199535 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118741838 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121467543 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084719868 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107030213 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08527432 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108697735 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153548249 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105046105 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085829239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108658245 seconds)
  done (took 2.67577809 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182540795 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284942327 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105706233 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112366502 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091965292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108817319 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090802111 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113505529 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086755652 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120179969 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086499832 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109793905 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118998621 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089016792 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106672641 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088368281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118592995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088000032 seconds)
  done (took 2.961236394 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120538034 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165240442 seconds)
  done (took 1.147892027 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122821831 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183074461 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301815698 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138157625 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136912619 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129240519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161726419 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.105401184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.213888761 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.109260602 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130081913 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113727016 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115157842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11948534 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116144577 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092238381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139451524 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094500738 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115080152 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.0933091 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137283187 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115601506 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098652831 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114875337 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184038154 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127775509 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093547634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114089961 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095001827 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114285195 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.098881143 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128121723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128257028 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171050192 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119509961 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.16711078 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121321973 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091781721 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11504289 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091835253 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118596001 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1168603 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108092617 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113807406 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094002551 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122374915 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093426141 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114291965 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121116189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101890547 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122044497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118646247 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165762832 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122071625 seconds)
  done (took 7.649526593 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797118577 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155496785 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091684279 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.899821135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145155472 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106489127 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801846594 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136318115 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243921299 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.812751863 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107284779 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127641069 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23610811 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259877018 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.147585342 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343853826 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677232634 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104990263 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144802182 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157391866 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12121639 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1218035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133292983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428032802 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114154252 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092160556 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119169823 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104910287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191415908 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092654731 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116448352 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18907352 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270966944 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21091822 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091440113 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114138069 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089842657 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196614216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253166905 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225346746 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178342343 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108399648 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091159229 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126443023 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111296706 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110159692 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170465063 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.201771629 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181466641 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095106146 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128639014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12302959 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103422211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192220554 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.089191073 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34379352 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349778963 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091225388 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122294512 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132425522 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251241532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11391488 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232566982 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119066541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221973746 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112019892 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776693157 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173448942 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113858845 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122697682 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099598626 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119272507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10231287 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172317755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388587746 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129968844 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119032751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091294615 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233498201 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092138233 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112329603 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173463869 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092645452 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122134146 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129827332 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104668477 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200299985 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257148712 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128317069 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100887706 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119812986 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125269985 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093491168 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218393395 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226607602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166154063 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.242228387 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105665787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193800437 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174272263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12603296 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17958559 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098826194 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133697667 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126717732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221867854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148909555 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092537912 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117893392 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09919081 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151439359 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116237723 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100419307 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175507044 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480000186 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17396268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109463149 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096327328 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121582627 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170648948 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121518346 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249539027 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122796717 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176531429 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122874889 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088599997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122120286 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173005819 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128564246 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101097181 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127601884 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122233526 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260138582 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229228909 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107891512 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246356037 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182891074 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124119696 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184528127 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122122108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177601719 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101256349 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125867501 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115114467 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767625413 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127310791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122755185 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097284995 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195623385 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112989444 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093133905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112843037 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08956436 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811665637 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095226267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11063193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093937097 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124213545 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09994981 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120625658 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097179669 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193196869 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24122074 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105667297 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121023229 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091072005 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190886399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094120531 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113832778 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091856483 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091174535 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124839212 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118880569 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094207444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179807851 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188346922 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.207301648 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552549 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11369031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092350777 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24035107 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091904378 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314815175 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122229394 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211998841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197633408 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088679209 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345417797 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176579624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193367839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117063486 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178692038 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11003281 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099188026 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169722988 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113281765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09854267 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.188777319 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108036529 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128728079 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160485153 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091059789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25749764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088962387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176571051 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115473908 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127111858 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293397466 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11415462 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134651211 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17056537 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095623613 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115043186 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.663051622 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114422263 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102595159 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125512268 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232653692 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174204565 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122712303 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100468483 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128330631 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169965742 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.244212288 seconds)
  done (took 44.933938239 seconds)
done (took 60.227551133 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311412428 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269134175 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.301431275 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.200657996 seconds)
  done (took 2.038365722 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181865392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155705609 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127044341 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111730316 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157238792 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089403639 seconds)
  done (took 1.711690118 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487723949 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38385375 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352369115 seconds)
  done (took 2.113107652 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259326681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.285833308 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326077213 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.437467726 seconds)
  done (took 2.308102091 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21162923 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13009099 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101803726 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14242777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.17567604 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.181459325 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147214536 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157061048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132848463 seconds)
  done (took 2.314141761 seconds)
done (took 11.377829414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.266118824 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.162395754 seconds)
    (3/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.179100335 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108396353 seconds)
    (5/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.127634818 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.26083429 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.240150984 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128218621 seconds)
    (9/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.277650728 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121519804 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.241329501 seconds)
    (12/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103133227 seconds)
    (13/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.260963811 seconds)
    (14/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10695894 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.106074631 seconds)
    (16/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.130221094 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.241867808 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.206108007 seconds)
    (19/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118492802 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109675756 seconds)
    (21/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15900024 seconds)
    (22/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098095131 seconds)
    (23/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.218414187 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.256657527 seconds)
    (25/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.237219358 seconds)
    (26/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.22574685 seconds)
    (27/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118213829 seconds)
    (28/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077996983 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.223478201 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125437215 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.221176995 seconds)
    (32/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.12996456 seconds)
    (33/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121030522 seconds)
    (34/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.175037811 seconds)
    (35/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115598859 seconds)
    (36/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.152364448 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.173032983 seconds)
    (38/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.13533523 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077462326 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121614183 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.1030635 seconds)
    (42/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.217136722 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.12027261 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123889801 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.191587853 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127670897 seconds)
    (47/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20166616 seconds)
    (48/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.182183687 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144659921 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117832761 seconds)
    (51/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.212527324 seconds)
    (52/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.086304854 seconds)
    (53/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.213204054 seconds)
    (54/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168246812 seconds)
    (55/286) benchmarking ("sort", Float64, true)...
    done (took 0.232197894 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214776559 seconds)
    (57/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211817532 seconds)
    (58/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077889828 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.18123256 seconds)
    (60/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07880045 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103425244 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.104554697 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.121011744 seconds)
    (64/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.107403372 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.138463375 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183400945 seconds)
    (67/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.183624541 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078493037 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12614643 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089559321 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094624158 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.113777377 seconds)
    (73/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128727135 seconds)
    (74/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090476445 seconds)
    (75/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090040772 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.107097863 seconds)
    (77/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183826668 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.116646724 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117317946 seconds)
    (80/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.183653622 seconds)
    (81/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.106042507 seconds)
    (82/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100246787 seconds)
    (83/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.100401746 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.110801414 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09796607 seconds)
    (86/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120068329 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09601129 seconds)
    (88/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127089825 seconds)
    (89/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.1786404 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232736261 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.129162082 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105020672 seconds)
    (93/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.184600562 seconds)
    (94/286) benchmarking ("sort", Int8, false)...
    done (took 0.197946466 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119747458 seconds)
    (96/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.17361489 seconds)
    (97/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.203072872 seconds)
    (98/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.179022048 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.141933486 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176981906 seconds)
    (101/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.161792001 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200537428 seconds)
    (103/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124065808 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119101432 seconds)
    (105/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123106755 seconds)
    (106/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078011049 seconds)
    (107/286) benchmarking ("sort", BigInt, true)...
    done (took 0.251304852 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190774421 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128482435 seconds)
    (110/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.077515708 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112828619 seconds)
    (112/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078287448 seconds)
    (113/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077757443 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100981019 seconds)
    (115/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087088908 seconds)
    (116/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185326524 seconds)
    (117/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118181838 seconds)
    (118/286) benchmarking ("sort", Float64, false)...
    done (took 0.151457951 seconds)
    (119/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.160079025 seconds)
    (120/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.144146573 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094217523 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.187306088 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125665146 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098074184 seconds)
    (125/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.107133338 seconds)
    (126/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084122213 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143343871 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118760308 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121434426 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118406394 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101691589 seconds)
    (132/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.108362672 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.138532625 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.171404002 seconds)
    (135/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119445271 seconds)
    (136/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102068935 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121492638 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101797247 seconds)
    (139/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192531971 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104040654 seconds)
    (141/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103946645 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.103149346 seconds)
    (143/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09601594 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.104751632 seconds)
    (145/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.248925318 seconds)
    (146/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092006278 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113629313 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098610206 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121275125 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122289364 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.151140175 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126908946 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081194872 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138765189 seconds)
    (155/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201252235 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104892692 seconds)
    (157/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.117508722 seconds)
    (158/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.095447913 seconds)
    (159/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.193266255 seconds)
    (160/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171752461 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096524127 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.104563658 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095075964 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120580743 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098689091 seconds)
    (166/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114185413 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.185446649 seconds)
    (168/286) benchmarking ("sort", Float32, false)...
    done (took 0.154752037 seconds)
    (169/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18670966 seconds)
    (170/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110216038 seconds)
    (171/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098834396 seconds)
    (172/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10400363 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10555106 seconds)
    (174/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108229964 seconds)
    (175/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093413904 seconds)
    (176/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081487389 seconds)
    (177/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102425985 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.180128598 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078786413 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134537843 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080256109 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121359512 seconds)
    (183/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.127875169 seconds)
    (184/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.155463109 seconds)
    (185/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.085408151 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127438014 seconds)
    (187/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122028201 seconds)
    (188/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078922515 seconds)
    (189/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081279194 seconds)
    (190/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12010452 seconds)
    (191/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079339923 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.102543901 seconds)
    (193/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11637314 seconds)
    (194/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143965474 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.223468132 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117148851 seconds)
    (197/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083157434 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120880809 seconds)
    (199/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095835081 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.124636023 seconds)
    (201/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.164363609 seconds)
    (202/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.129537674 seconds)
    (203/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.142325876 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105367667 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126842423 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.105821909 seconds)
    (207/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114160347 seconds)
    (208/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081867539 seconds)
    (209/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117300432 seconds)
    (210/286) benchmarking ("sort", Int8, true)...
    done (took 0.223240072 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101336708 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121249622 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096930154 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118028809 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094656072 seconds)
    (216/286) benchmarking ("sort", Float32, true)...
    done (took 0.231557204 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.103073175 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140201042 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094010807 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114236185 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113968306 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121168409 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113526497 seconds)
    (224/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.12089678 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096941387 seconds)
    (226/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185924505 seconds)
    (227/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110956989 seconds)
    (228/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096906745 seconds)
    (229/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.13074353 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097746999 seconds)
    (231/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.130841622 seconds)
    (232/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.134345865 seconds)
    (233/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119713095 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.0841421 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.103802639 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096974416 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122380097 seconds)
    (238/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078828344 seconds)
    (239/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.160683916 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090359867 seconds)
    (241/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10338127 seconds)
    (242/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094863984 seconds)
    (243/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.103074991 seconds)
    (244/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095170158 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103225568 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105351773 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121811803 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080596454 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109757547 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104499589 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120390072 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083257616 seconds)
    (253/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12001288 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.1038398 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121630001 seconds)
    (256/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09518488 seconds)
    (257/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.101665717 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09757694 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116487638 seconds)
    (260/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.096817573 seconds)
    (261/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.102179032 seconds)
    (262/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083289889 seconds)
    (263/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.100793069 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100149437 seconds)
    (265/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119510649 seconds)
    (266/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079394771 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114777536 seconds)
    (268/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079352159 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092362212 seconds)
    (270/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117838586 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127638512 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114558373 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.103014146 seconds)
    (274/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081363337 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080324056 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18718648 seconds)
    (277/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121944097 seconds)
    (278/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090742058 seconds)
    (279/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103261562 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09470882 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12153208 seconds)
    (282/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096625809 seconds)
    (283/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117152498 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092852468 seconds)
    (285/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192195329 seconds)
    (286/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113470352 seconds)
  done (took 38.587030881 seconds)
done (took 39.482233122 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.108454581 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155679575 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101137334 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144895545 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127132575 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106868967 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123901481 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104311175 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129277194 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106518178 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.1280893 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.085302027 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125490569 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125070943 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103504314 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144731464 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104640452 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120611724 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093915534 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.119618964 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09280515 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118114016 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095232038 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.108978473 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101823683 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124196401 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097548666 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125546281 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094170041 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118416573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092703265 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122137636 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091699316 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128657213 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096464682 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117368994 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101923633 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124603136 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095996808 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.118431559 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098634699 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119527071 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096920943 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123053961 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095071776 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116906943 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093839708 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130443857 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14575165 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095181816 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098405197 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.126100624 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126960839 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099225648 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117131426 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093963988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119310869 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121277003 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117191151 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094838723 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.140136119 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098943469 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116574165 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094159291 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117825648 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100868377 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125499206 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093305732 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124179256 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.097297774 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.11301812 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094642748 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116629024 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091545144 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124058348 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100906512 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112699997 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094848383 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122041659 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096155743 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118112297 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092731478 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11969375 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095331619 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091880256 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10947265 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092586459 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120502337 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094524272 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117030954 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096583041 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.12032814 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096707495 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125113612 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094437957 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119935574 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.1184719 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094660354 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120517976 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092818208 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112995273 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093256898 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099211077 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115009855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095404878 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127173208 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092771883 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120224201 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093520528 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117243649 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.132665949 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101305382 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118567193 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095198036 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090776114 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122539765 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11593078 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092488258 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115687715 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095346003 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119191496 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094643607 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09258694 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120987251 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128915054 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09038924 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116363295 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092928757 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094348613 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.121612069 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094961396 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.115957714 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094211498 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112809807 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09303637 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116236114 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098493057 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116697857 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094115343 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11880765 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094499419 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120344382 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09562624 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120225137 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092264758 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111579406 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095540431 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116390332 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096717091 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.118493627 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095076185 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.114597588 seconds)
done (took 17.553796749 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104590261 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187465047 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150728111 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15331655 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.125849634 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13599685 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128674967 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.148504947 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102546606 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146775851 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149926875 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116477713 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155127324 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126665757 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111249095 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125476363 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.099461766 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134727536 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15836781 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14442504 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127437066 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126750369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147831149 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144181331 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100401451 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154861145 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104191471 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125730049 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128623582 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108556241 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143497812 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10399734 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127197081 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136794984 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108140953 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123243394 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110575871 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121356207 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101076627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.124469587 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138128622 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112490653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122233466 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131872933 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.10126538 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128981943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.100202376 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124000521 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102023366 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120095553 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105677204 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145875857 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123518119 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103215584 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126603631 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125948775 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103627873 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129406937 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.102985029 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128957863 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125218142 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104340573 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130561466 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142347624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100111126 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127678401 seconds)
  done (took 9.224343507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118709118 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152995487 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132034288 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109205529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128928924 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091023375 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115297718 seconds)
  done (took 1.801087022 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094671219 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145921329 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124088972 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148367166 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.14103854 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128141538 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133542081 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09292377 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140212804 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126882831 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120701282 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17146904 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117740128 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10384792 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.150575849 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09259872 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151672718 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091702732 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12544925 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149143181 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097682934 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139901341 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105165466 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118899029 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138278714 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094421447 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183192782 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104316751 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11647515 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099422376 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121734088 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188147069 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140035301 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103702297 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118109826 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121018816 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140948116 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123827459 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117147434 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121643689 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.114185391 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.12435796 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099665747 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1229897 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099450033 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.13192886 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128583231 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101535661 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123182409 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.121265599 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128143793 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114423333 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118707523 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097627311 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127594508 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099304638 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131739134 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122291125 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121086594 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124831812 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118123768 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143143866 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139520265 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118773681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135445569 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139809629 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.113979922 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122661664 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100678677 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126394315 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119453979 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121944727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103015074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13287903 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126710325 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119961292 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144507871 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097272598 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130752437 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.097391427 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120570448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093129731 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13400603 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096576015 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120421573 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1104573 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129243216 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122231407 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096810557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140705578 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09684082 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129931314 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.104028001 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1216506 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13323254 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121487003 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12838174 seconds)
  done (took 12.808249693 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096203715 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095025457 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124432555 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.096064775 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120579147 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09487278 seconds)
  done (took 1.595832733 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128393118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122218668 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109454287 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125179096 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161200189 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117515449 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144402309 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103104703 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13856082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133903835 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117390748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144386828 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149441546 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100899713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143712535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101596184 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142898683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097379109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134213982 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097905415 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135226966 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126351437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097583079 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.14070391 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102025033 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127208433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100214811 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134921968 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108097489 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12949054 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126122593 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102009861 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126295346 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103929922 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143332672 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.126000246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097354122 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12786007 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10176907 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126997744 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.12027247 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122715202 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107520072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128737841 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10291905 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127215812 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128715855 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100668508 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14244216 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103141989 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128947253 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101207002 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127032406 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.104070537 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126776015 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103604923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129447338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143071842 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101713828 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126360317 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098382543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127698947 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104674678 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127823224 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101906511 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129019089 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.1264215 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098552335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09848931 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125613838 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128833929 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099066522 seconds)
  done (took 9.615637777 seconds)
done (took 35.993598186 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683428455 seconds)
  done (took 1.646401964 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.862497187 seconds)
  done (took 1.827073577 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.13200435 seconds)
  done (took 19.127792599 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509090143 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.60518289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002789032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169359645 seconds)
  done (took 3.25137281 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.980512742 seconds)
  done (took 1.969630481 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314799693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274619706 seconds)
  done (took 1.560952775 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.810573186 seconds)
  done (took 1.786149206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.547737568 seconds)
  done (took 2.523666372 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363807941 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205489619 seconds)
  done (took 1.558480872 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.579373763 seconds)
  done (took 1.561263151 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.848511357 seconds)
  done (took 15.834300546 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249967635 seconds)
  done (took 1.24575461 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306582519 seconds)
  done (took 1.289805366 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.734113976 seconds)
  done (took 4.715149541 seconds)
done (took 60.87463945 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107750475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132422472 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106749424 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128542342 seconds)
  done (took 1.452993767 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111361569 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127823411 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105369771 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127490412 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109651552 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128138719 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100783943 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184053233 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126522295 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103148933 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127900064 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101005175 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129653156 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100082719 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124939197 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104167141 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130973325 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101234949 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129740572 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128299975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100777737 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128618398 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104732992 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127885897 seconds)
  done (took 3.849741824 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108158766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098248232 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.1265182 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097272412 seconds)
  done (took 1.420707636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.1115919 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140581379 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113932415 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13304489 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114660315 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139548009 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123210453 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09728292 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125241925 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107861272 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124444742 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119514905 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139513777 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092969386 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.134998197 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094556407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120247056 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139525232 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.107461024 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134554038 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097208732 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132396983 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105785905 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138475874 seconds)
  done (took 3.885354272 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.184456787 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.138167499 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148135611 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.10505392 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174605151 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150907044 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.097201375 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.149666667 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.09749609 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147073013 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12793677 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.150415074 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.141483705 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126894897 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098730715 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130893908 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.139387789 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.117907015 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.125889168 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.109984472 seconds)
  done (took 3.652221834 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107352933 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122573857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093469162 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097015976 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130068527 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098959716 seconds)
  done (took 1.647059656 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096439587 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091636276 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119248527 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091474507 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123235619 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091933256 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116501306 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092602695 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091989803 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117844099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091328592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117025067 seconds)
  done (took 2.240658555 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.387742687 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122180655 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12233118 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096876456 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129390042 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09637193 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135640861 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095559072 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152277108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096400163 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.121585443 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09981518 seconds)
  done (took 2.652704742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218580445 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101536466 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2717278 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.427528448 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161771963 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171950582 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.333515353 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169342621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.215863482 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117552109 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201139326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163188554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160848827 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185520409 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14630066 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183564194 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183442928 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20863312 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155575192 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214327564 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171547749 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174469032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187379396 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15853884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14267681 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16381897 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099303605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133804937 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181475832 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177777011 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182178254 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155598019 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14407564 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210376998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221899987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213288919 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.367178026 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13867196 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198689455 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188732122 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26165173 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120380672 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227902641 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163118425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109939234 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188991707 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163082496 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187531185 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137225818 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147203808 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191443144 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183988251 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185292281 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143169722 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37522025 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128992197 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152555574 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196268462 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219885011 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197796566 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175655078 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102420419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252579628 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188694706 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186513864 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152654245 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173978083 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102838221 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211249622 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198947827 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184197488 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176111995 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190577898 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139202419 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170360065 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175996592 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161250607 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185591804 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167834278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100229233 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157655375 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144063241 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106761586 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192418173 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128730673 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210300299 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114329094 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.299067198 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220990744 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164316883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168651282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173780661 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174712476 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153975468 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098282814 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153801135 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.16777602 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167105942 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110593277 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164438929 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153662766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13353915 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133502984 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129397581 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167390916 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112729371 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17471513 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171621669 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134075692 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17220771 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15650213 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164936895 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179283863 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194588634 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111017849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139405389 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200132607 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166067421 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143591034 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181809319 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19326487 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.171187464 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116166366 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203698496 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203140408 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120820601 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221955944 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120462638 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13975812 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158087892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167046193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163908976 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134597626 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136599433 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16157224 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201699024 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133810096 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11503707 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182467765 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132634848 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134364759 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125170958 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14311729 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14893011 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129126897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146115733 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164229724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168392793 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16145685 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167678206 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147666981 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202782151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139503742 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139876785 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154867186 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125160911 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18876183 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192848075 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107024418 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222810002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177867218 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242084051 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169742253 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138778564 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188624895 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135911583 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098662226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174536992 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167755127 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17063567 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190066417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269783249 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176235381 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160158633 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157284503 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17517983 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181026704 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165228948 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.123897408 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169169012 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174756144 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129500463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102520053 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133730855 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150168372 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109584595 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139448771 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189607792 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172414976 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26126322 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168434051 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14866727 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188300704 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105273008 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172251296 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18041577 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146220744 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19173185 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189957323 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175259975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149743731 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18329238 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098318372 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131984059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14004406 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172268703 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111352433 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141428307 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149155486 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18907722 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18378894 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156737296 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245259063 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17375411 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225388902 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101198799 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169868443 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178831045 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165855278 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168698287 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1372675 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169155553 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185010432 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150333979 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200560467 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170520494 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177209288 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206624297 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165192788 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137421227 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12765948 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176932019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148682565 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168796779 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152951497 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114183667 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161134448 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143191833 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133276779 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191631804 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150991661 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188038776 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163640837 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18100858 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132121367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122895159 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168251148 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154213638 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095359924 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178386966 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225066316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150866196 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165582099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182337087 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108975898 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.361375093 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223433792 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195028971 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144225858 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121385116 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169535944 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167179062 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173735341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189222017 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152302361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188055032 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166603313 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150130291 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113423183 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154876844 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158244785 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158411972 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111145196 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160454293 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152672438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194898777 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152758321 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166970765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172973867 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125209053 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162648083 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150605333 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208562407 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167466875 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187308779 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164286022 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175464937 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197592123 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101654806 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136226846 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104714451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189692923 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139296068 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167708323 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.255429726 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252554708 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165360655 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178039418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146019723 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.10136962 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168509589 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15789338 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272624869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148113887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114654589 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229330972 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129296134 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138043184 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171815031 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344973119 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149774526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182244488 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.128250596 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32402663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13216345 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110333477 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167763367 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178092288 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145693658 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189771885 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146376597 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152790101 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168530017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145562435 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233061525 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252742045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180025127 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185327024 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150633951 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16593315 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172647121 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185754452 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120898292 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152526048 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170507205 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192471142 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190643118 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140201965 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173195634 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173117955 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167653817 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182097338 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112117711 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196598314 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140504763 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174316617 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148976697 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102000152 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168568372 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.256551684 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138471018 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184741379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166282149 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111100025 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133476923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15901042 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139178837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150758088 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137346909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189497985 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105328296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171353097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188281739 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138574143 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162907739 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124917598 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144649262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151385125 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153322044 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113079383 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179514439 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189630775 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139011312 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186498702 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18744778 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174690939 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169321142 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151104794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639252112 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135563693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191197129 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154706955 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196603081 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127288725 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175639304 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170004047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158871103 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177757997 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158914604 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226770771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174616784 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16706317 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109514777 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15327662 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154000073 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.10879482 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160094638 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171659921 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148678123 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143938476 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.136784502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153583773 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152695015 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145315886 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192465601 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127243708 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220946352 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191160398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116845216 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175992988 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18205327 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138346311 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169186772 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181402774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149254418 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158048601 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109013787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142398197 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189137631 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102029375 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170091127 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169749815 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17299029 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172108014 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141509199 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139381771 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151082098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169714696 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13850793 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160963566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136104834 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137905932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134060171 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133711819 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168204034 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166615352 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134151542 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152825184 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186469569 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132651557 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111323444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367499333 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168040421 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201345719 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160945239 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141889288 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122477365 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164009975 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161795538 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169196821 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106503681 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140199594 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138808845 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187842038 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132696879 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165781374 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20274302 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170134025 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19703126 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143262367 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272262652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117642346 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163756625 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138310772 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107756254 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151690921 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142148643 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151919655 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233733478 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187302695 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160969062 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152032033 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104808282 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13512382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111179998 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168899442 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163494729 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168361926 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151540874 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095531972 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152658298 seconds)
  done (took 81.263650971 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159333752 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152428392 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155524485 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202058765 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173560509 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249827638 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211415701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233464648 seconds)
  done (took 2.619931048 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109742773 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164872243 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146015613 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131800365 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.097581616 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.336107455 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144328137 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129530014 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154358795 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139885196 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.098025145 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572200595 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10040821 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131021047 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120530617 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096040595 seconds)
  done (took 3.749572125 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.306343087 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553976899 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.1500436 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255393466 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236477239 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.159546136 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.77225639 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192339983 seconds)
  done (took 12.71168152 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132373434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146996326 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.14426409 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.171952114 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.128445917 seconds)
  done (took 1.816049861 seconds)
done (took 123.943073866 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104527512 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13236492 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10308566 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133671516 seconds)
  done (took 1.548870367 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.116870624 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086856674 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119076852 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085717512 seconds)
  done (took 1.492062335 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433851663 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117218628 seconds)
  done (took 1.675177551 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.124946173 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140644381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112516884 seconds)
  done (took 1.467540017 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112094985 seconds)
  done (took 1.204974212 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106375379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105451808 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148630536 seconds)
  done (took 1.452626438 seconds)
done (took 9.931520848 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122616047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439797803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391346748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145001918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729026147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385139625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032955071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165304403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145933641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12521256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114200285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706138166 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018103868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348794936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.003009593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.443804268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681101387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129255839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130304164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098889474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011306757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09635025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097619781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128320924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679337713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430111466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096802128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.488872254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12435367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101383108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414810527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097522682 seconds)
  done (took 17.198272301 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105083143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187243495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104839196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128371482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101050064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127959599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106413017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140593568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18988112 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097689045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144605501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095809266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13131543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096622224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147200772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096320809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129408026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098573572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133145613 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098609064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146393189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095820949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128636443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099045936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126755688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109867156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126107672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110592258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127147133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101689104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13123341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096784069 seconds)
  done (took 4.957419969 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152101562 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195567793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134500692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132230915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178180792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127903267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.182301486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16674376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192436593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126277156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115046701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126449792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133630606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127068431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118136768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126318888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099333778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128527594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104081093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128819865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145368348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096874004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098877416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128868556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096643451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140790931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097196729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140023242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125858183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102501149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131199359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09776971 seconds)
  done (took 5.298583917 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108423893 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135192681 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114914481 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14288665 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100488602 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134234909 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106060782 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128926195 seconds)
  done (took 2.071289917 seconds)
done (took 30.617591803 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118864603 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.103489579 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141143245 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.110214168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13774021 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.120882392 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125320913 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108396757 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139533469 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105415807 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.143781996 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096894531 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127426596 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096602539 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139379326 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103555085 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141215685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107254902 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.146375566 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112921886 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.1273951 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110262058 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106978507 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.148178328 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147000096 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.117392492 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142985421 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10384568 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128352065 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098240143 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13980511 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119592916 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129220713 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113937757 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132572834 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102015484 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127660331 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099723938 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141968217 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109492442 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132767559 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109436133 seconds)
  done (took 6.200828238 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.128469293 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.171138579 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.098114166 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128660957 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.099943037 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.165945823 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162192371 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.09891764 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.12765442 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123245022 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153439382 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098517735 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.128656585 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098584552 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126871418 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099699085 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.150509533 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122883283 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.157998211 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.128331622 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.171681467 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.158906179 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.131950706 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.151361877 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.170056659 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.161824592 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119192405 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.163446039 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124352876 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.12772668 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.157701636 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129592354 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.126555063 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098857139 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168168933 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.132639027 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155857153 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.167342717 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.157787064 seconds)
  done (took 6.453270142 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108407856 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141717145 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120744414 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19593829 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137322122 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142987348 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108167043 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147047936 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114928497 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12839918 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.108385865 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159244355 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14415338 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.11536903 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135320104 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114108448 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148169617 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100703676 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132274052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117930912 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146719785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110688311 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141316869 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109372242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.127606751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10665406 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131171065 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113997216 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133425979 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105473937 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131629979 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10291179 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.135523605 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10985796 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131629451 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.105984571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150618159 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107269072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137916974 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131523378 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140210681 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102766786 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151473032 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167815482 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098606022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135042742 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10483214 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136315262 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097374242 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146043732 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108487298 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098263435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144221137 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127357176 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097946994 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14224052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099075323 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101760846 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.137254837 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105167171 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147267123 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132083403 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114180331 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099444685 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133344277 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097937051 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127592871 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103060856 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149694182 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101346657 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167640869 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128175859 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104438593 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135850941 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104709087 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136706795 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098972345 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111390567 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140263086 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10303969 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138198264 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10156414 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132414804 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116198259 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144288874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135077698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.105488444 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133844432 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102750031 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129066475 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113247941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130722412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102849009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116522603 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128025158 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101619208 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13567947 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103922394 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127157632 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11086901 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132485943 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098290535 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138402501 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098992382 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133111916 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107536606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132080367 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098442364 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.133706518 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105213023 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.128379587 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.102121121 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.132032139 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101790603 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141661997 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.105655257 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130812526 seconds)
  done (took 15.515273626 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.249226699 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22786661 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201604754 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312416211 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151452445 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.126614308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223720637 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180575388 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129011395 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.139035115 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18413343 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197543544 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.184436434 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196537177 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187106779 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.131117272 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118620832 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.182362941 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.228437491 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.310556 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118717348 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.145359112 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172170396 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170900103 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.118204652 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145271619 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153204475 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.120741437 seconds)
  done (took 6.125205731 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11954618 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165715667 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106594114 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.156414674 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157162067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099868974 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.135056347 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100672012 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143254788 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113811688 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.131635305 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.10666896 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.136252733 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109755383 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.130226594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108280739 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.141010508 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108920479 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133503865 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103159304 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143964067 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117203069 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136503066 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101952698 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147923413 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132114416 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101278726 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152190953 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137280611 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12626198 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12751718 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10889403 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144867375 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09916525 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101703559 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.133634019 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101034466 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131612014 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100540048 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127457434 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09959578 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.120746989 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101720571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145464913 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106315958 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.127301698 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105109295 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134783314 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106553658 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126594418 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10171476 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101560894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.135358288 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111249021 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.134173528 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.614865909 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.135148345 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100969926 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.139549297 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.1023273 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127741552 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100915936 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138576669 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104068913 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138192821 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105607382 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131176913 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101881163 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.136295658 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107098778 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.133332576 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108130872 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12714744 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101249799 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.140134557 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10874438 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133496408 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101386438 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.133475732 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098971901 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087856035 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129860202 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087294268 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134190732 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09900133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131507304 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102685658 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135910715 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116438657 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139883076 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107165591 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.13115235 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102082314 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134749999 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.09774449 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134732025 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117053339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150518996 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09799063 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127671313 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115056108 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13236385 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097413467 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122335627 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109403846 seconds)
  done (took 14.285519001 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14266108 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.181298142 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131105179 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118888374 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.165682894 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.172240313 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108213694 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138814105 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100569663 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119832875 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134000932 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109590039 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134008566 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114656082 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171465583 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.141013411 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101188494 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144931085 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105358719 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.184069516 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150203944 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138981186 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170498086 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133901872 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105163655 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.168324681 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.175225862 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.114058103 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.143534635 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140914182 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.145143627 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.174652422 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172668854 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105602095 seconds)
  done (took 5.897089832 seconds)
done (took 55.570044834 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.239806857 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42051064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.194303883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.193075171 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.275115828 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.219753177 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193799811 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.391036151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.976029812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185227319 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.192979194 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.197427022 seconds)
done (took 27.801492623 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.302265333 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350414765 seconds)
    (2/2) benchmarking "String"...
    done (took 1.495910873 seconds)
  done (took 3.984638407 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.199820017 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.194110574 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442435597 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.213733512 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.197454383 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.198575941 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.211078598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.205082172 seconds)
  done (took 15.782638728 seconds)
done (took 25.390438018 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.28656048 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.4365386 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.45718439 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.214090306 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.214310589 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.199042418 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.2221277 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.251181252 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.211345746 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.197243337 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.198050508 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.482436824 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.213516089 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.577600246 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.207812851 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.197973283 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.218566757 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.525994225 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.199008165 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.204801513 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.20252269 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.186796703 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.211156208 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.222658356 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.211249195 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.20356099 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.256067392 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.203058248 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.464649739 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.21488625 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244480042 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.201919681 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.263449663 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.203307645 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.328747579 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.234553873 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.486507454 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.211715348 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.189465839 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.20933381 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.445454033 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615531296 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.21049978 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.20986714 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.21175313 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.209769666 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.1940911 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.9295211 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.208424146 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.204829611 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.269512476 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.611941123 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.206116285 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.228976931 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.200996662 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.530398262 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.208000854 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.265179445 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.23660494 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.222776545 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.207843686 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.199174101 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.217362848 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.204447599 seconds)
  done (took 144.035731699 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.20474217 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.20646356 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.206780911 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.225827008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.205065219 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.204779283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.205448161 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.204898404 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.205948708 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210288457 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.207168088 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.203371549 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.207206933 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182328016 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207878446 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.228339849 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.206998435 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.222692541 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.221081709 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.206778711 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.2118548 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.207006296 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.205958432 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.206938893 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.200120176 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.294677902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.237861211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.209712043 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.19910107 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.206503504 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.211279857 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.20862443 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.856797146 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055082257 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.22063694 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.236598326 seconds)
  done (took 80.268919607 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206083257 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205511329 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207952087 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23992744 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207148567 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207357391 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789019457 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789203286 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.978020029 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.356465326 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.626080761 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501234227 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204365 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304293297 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217665219 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204536994 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.223040968 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233100941 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208178252 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208416534 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792548228 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217260857 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.605552115 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386351371 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21899468 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242605918 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604128731 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205486155 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240417309 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.544534256 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254110844 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210054437 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586985862 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.599724662 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319785638 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205208372 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242025593 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204754793 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207428404 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495049909 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205308986 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.208833804 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.211843755 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881893149 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205932026 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794201602 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206127783 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180484762 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205587143 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209909723 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.64340518 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.882870602 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224027188 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.211642567 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212513587 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211048246 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209847558 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245620934 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.386788706 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328076643 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209278414 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.213297783 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243254254 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.209110083 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.27706693 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20747059 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212027467 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268210415 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312728707 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.709983974 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80007574 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208396002 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310809324 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330139237 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207398638 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213387987 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211912873 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212862405 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324803537 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208289855 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.657725179 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.389526031 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224407395 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.618734419 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208271758 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308505244 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207307421 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621557854 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209286945 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211446627 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.997511836 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305993753 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206324766 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211873168 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211316225 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.654387243 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797085362 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.472462554 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208407412 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.548009157 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214061222 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666439401 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792407719 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.893452557 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211024262 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329464927 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388481042 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226604219 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2141067 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.62381826 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208247178 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274095386 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212662419 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613800126 seconds)
  done (took 367.525926664 seconds)
done (took 592.949645033 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.965855243 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.908742539 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.045887615 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.939009468 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.905254124 seconds)
  done (took 10.893656141 seconds)
done (took 12.023914095 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413768721 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41572287 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277994766 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.419388956 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248248424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435238348 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396372095 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234416657 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.324150177 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302229439 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321908996 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272326133 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250660695 seconds)
  done (took 18.44134939 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.567802723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.210770187 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29007678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562828101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250810788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558450095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41717993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.227882168 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431093812 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224742284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226939535 seconds)
  done (took 18.103116849 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.586070053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.212120366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295093997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552140651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251564987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552628493 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426368348 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.229349987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422326995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225917067 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228239951 seconds)
  done (took 18.114475751 seconds)
done (took 55.790728569 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257687844 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.386747589 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243041741 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22924799 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224709371 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227609933 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228919107 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22654471 seconds)
  done (took 11.157624569 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222613517 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.222904054 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.221488816 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221161041 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.225800817 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22026111 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223460118 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22060741 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.22419426 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.225090543 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222030506 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224365407 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.224526104 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223348278 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221833198 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.226290744 seconds)
  done (took 20.705964833 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223712639 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221377551 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.222423782 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221876914 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.223159511 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223423374 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223946554 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222815079 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222174236 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221315157 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.224651975 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222989762 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221183721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221191951 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22170726 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222405282 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.224990389 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.22288334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.227637761 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.22472329 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.223448672 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223579212 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.223850173 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222560053 seconds)
  done (took 30.490996178 seconds)
done (took 63.487748215 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.220891653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.227870721 seconds)
  done (took 5.584029673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285173893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285645516 seconds)
  done (took 3.707785749 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229552969 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227622948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229628734 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228034376 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227840615 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.227394122 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.229049425 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226307686 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228728496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227306827 seconds)
  done (took 13.417966678 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225243434 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22803648 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223870924 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22534129 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226972559 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223783313 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.226535531 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228125596 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.229271166 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225261205 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228901239 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224241014 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22932392 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224664295 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228530156 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225786295 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221675284 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225061179 seconds)
  done (took 23.206884416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.241029596 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.249494412 seconds)
  done (took 3.629192863 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.355212078 seconds)
    (2/7) benchmarking "second"...
    done (took 1.266449533 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336545827 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323624613 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.26693338 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247522909 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.266623206 seconds)
  done (took 10.20029912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226600658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.441853316 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.55574586 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811237644 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230209267 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232582752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.129529131 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230097381 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232417412 seconds)
  done (took 14.228006749 seconds)
done (took 75.111204321 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.22062836 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.237355693 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.245124742 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234129649 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.521448291 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.251094882 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.217984908 seconds)
done (took 16.067358945 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.219028522 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.209132853 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.210697848 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.235037816 seconds)
  done (took 10.010490419 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.232882297 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541395609 seconds)
  done (took 4.912260713 seconds)
done (took 16.06086528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230502021 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230246978 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.227314779 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228649076 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.225940938 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227461477 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2282284 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.230712873 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230803394 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228268904 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.229696688 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.230526745 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231132067 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226739732 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22768116 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229025693 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229445539 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.226924548 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226896008 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226457594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227720854 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229290909 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226811265 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229185627 seconds)
  done (took 30.624772393 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231759386 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22920635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.231272648 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231699306 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229786355 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23315265 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230613284 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23009252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231010414 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.23023033 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229563406 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227663924 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232616931 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228649942 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230842736 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229827658 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232127687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227790624 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231705739 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229859202 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233697737 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229302231 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228773473 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231694588 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230486246 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23059431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232104893 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229347257 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232582456 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.232424543 seconds)
  done (took 38.06161711 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237714218 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240236669 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.231624539 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231712603 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230882564 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.234300939 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23221113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232791713 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232510277 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23427686 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23281652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.233725608 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.234257677 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233937829 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233880716 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233328879 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234710778 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.233344143 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.235291713 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.234071185 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.233199512 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233797019 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23294524 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234837344 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.235456659 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234243344 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.234430261 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234125314 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234620009 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.235000149 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235990756 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.234039726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23486737 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233963221 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232376648 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.234409771 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239960441 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242878597 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23579043 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233339628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232609537 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.236036904 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232319493 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.235625072 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235741907 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233572223 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.235813906 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.235558611 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23576206 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236394497 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234245857 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235259807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234854522 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237538887 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.236467065 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.236305233 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233735167 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235929167 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236372299 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.237735117 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237977106 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236370402 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238069845 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.237185052 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237883275 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236546878 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.236421406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.237276709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235491597 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238413191 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236071932 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.237960753 seconds)
  done (took 90.075794059 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237490176 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234718193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.235635035 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235708869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234674478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239746348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237013138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239437233 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235732818 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239858144 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237931581 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237427758 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235529579 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240270592 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239900426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.237538204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238928979 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236446046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239853341 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241311403 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238623074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.237361456 seconds)
  done (took 28.377345868 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238337767 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239868329 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.237304673 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240351378 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238873246 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242032391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238404598 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23874923 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24067047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237523653 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238940616 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240800966 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240464336 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238168148 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239529245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240896984 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242285511 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241280228 seconds)
  done (took 23.463516945 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239886449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.239966806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.242420382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239925465 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.239151951 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242557627 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237667519 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242385544 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.241746173 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240639457 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.242807879 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24281343 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244561357 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240241685 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243643429 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239403671 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.243934017 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239726 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243983386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241686602 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240764185 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242528559 seconds)
  done (took 28.46527012 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242285361 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243048802 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.242744785 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242174014 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.241809903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242826206 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242796163 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.240298744 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245294124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.243491769 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242135191 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243655609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243512449 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24303231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.245027961 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242779102 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244969231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24070761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243289842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24267509 seconds)
  done (took 26.012746857 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245317762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247269486 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246820906 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246405637 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248094137 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248575414 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24794183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247599412 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246782066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247890957 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248257891 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247140642 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247061872 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248754953 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247777837 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246486995 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247624733 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248341372 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249145087 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249565612 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24900303 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248174464 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248243552 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248832614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248863817 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248021469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249834637 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2504004 seconds)
  done (took 36.099137379 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245663257 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246815769 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245461301 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.246994006 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.245148279 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.245547219 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.245651228 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.2436506 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248115365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245192528 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247522175 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.246271338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247893428 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24775824 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246044454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.249541904 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247803551 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245115158 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245548951 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24473971 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.247739205 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246627492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248899023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24711042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246694542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.248331437 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246607025 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246845914 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249360623 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245350656 seconds)
  done (took 38.557595191 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.291629801 seconds)
    (2/2) benchmarking "in"...
    done (took 1.291203731 seconds)
  done (took 3.739562065 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.246915396 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250922046 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.247732768 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247296401 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24677653 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247408689 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250423374 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245760735 seconds)
  done (took 11.141134652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250723505 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.251423772 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.248937005 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248654759 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250715257 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251361673 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257828823 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270584903 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251441234 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253938823 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.261978757 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.261191941 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253910237 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252154796 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252707985 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254738595 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251616226 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252157729 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251343811 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252235789 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253186816 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255776871 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256378749 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251388836 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254763929 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265296254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25709773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253239348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252788487 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257464474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253189305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.250564815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253640991 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253582263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252714948 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253137296 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263249256 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276932087 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259043412 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25389403 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253384856 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.249750233 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254389857 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255338771 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258290917 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254456848 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255105222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24967735 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254124589 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258615317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261138796 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25308489 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25162401 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257167708 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255479066 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26001489 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276209494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259126619 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266149045 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268011923 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268028748 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279885927 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257759833 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256367904 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268543932 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282391637 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264213391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273934855 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252305109 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254523604 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262073744 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270618932 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283680845 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256697552 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25701366 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255071121 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25760438 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257366165 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264116848 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279256493 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258003244 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256902898 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266991273 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283049671 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256574781 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.258055844 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256675091 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.256816336 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.260208672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26865124 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278225002 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256229018 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255952289 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.25692207 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25980355 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.257469023 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257038046 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258879041 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.253446942 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257188836 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258661898 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262313049 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269130684 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259581286 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258830192 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263786377 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256314157 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256268598 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264604184 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256097805 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259156555 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.260612857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264556678 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.255504094 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261298592 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269038141 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259231474 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.258692707 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259628989 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257544849 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269266229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286764082 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2583397 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256825755 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263835121 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272388622 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258199582 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.2624623 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.257864259 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256745123 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256439729 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260455751 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.258108903 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260076464 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261038235 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261515617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258092678 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257924476 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25943544 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260930407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261427872 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261101827 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261822957 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264231893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261838878 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262895953 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268478354 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260512076 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262221851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.26270855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.259390588 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260960107 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263203915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265262809 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262819099 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262549826 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265405226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.263111066 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26117962 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260126218 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260311762 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26262927 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265636235 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263288337 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265768978 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262882444 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.258619779 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259356848 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.260575719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.261418165 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261646662 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260973349 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266242045 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272295438 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.261904383 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.260854464 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26384955 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263386787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26244417 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262756054 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.26679697 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.273517514 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.262922296 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268915559 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.26304668 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263829821 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.26264916 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.261426889 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263603851 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264977253 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.268266629 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272617915 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277071694 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288814351 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266054618 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.266171321 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.26460153 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270223413 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267967238 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263528702 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262953236 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264857675 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264596438 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266247668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.264856225 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265269377 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263667356 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.264384364 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264105598 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265386207 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265883072 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265954188 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266328936 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263113256 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263350786 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264209416 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.262826935 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262559875 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265548296 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26426773 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.264628151 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.267547988 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272871654 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.261310424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266842915 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267773945 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267442714 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.265812641 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.265729386 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267750328 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267737476 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273994839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286505538 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268880281 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273460846 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.286815336 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266919289 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269821856 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266553536 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263976045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.2702902 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275390577 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264863137 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.268947758 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269192509 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267191614 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268476754 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.273642308 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263854312 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267054904 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.26563556 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26944916 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.263294462 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268516142 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268423913 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268272151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270313442 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267801556 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.267084698 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269280639 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270203416 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268381933 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269303172 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273257912 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278972665 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272385075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26733071 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270836198 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.271522178 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272519926 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.270167502 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.270732691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268824745 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283332837 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.294845488 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275068499 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290362818 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.270487894 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273753421 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.290924668 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27483963 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268286062 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273913016 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271520118 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.269698099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267647098 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271617933 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270340761 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27133344 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27080085 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.274294579 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268948723 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.269985032 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272486446 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271083634 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269568051 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269086934 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.269911492 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271680196 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27419074 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271939731 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270807709 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280241683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292765508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.273075602 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.272593953 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27327625 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270616318 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.27259914 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271560444 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275663425 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282201583 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.275256993 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283024745 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27565027 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284096679 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271304721 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278073964 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.283196471 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268956557 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27197738 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.2738588 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273391075 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279839102 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293458693 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.275688814 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277339418 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273119166 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.273893971 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274314516 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272845993 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273490041 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273121102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281623938 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298217908 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27894264 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275392409 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270451405 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.273308353 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.272740227 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.274673975 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276682007 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274633355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276309198 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274733436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274100306 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.272814192 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273201835 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273610478 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270375924 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273304526 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281038615 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29637349 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279989423 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.273386966 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.281624052 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273822969 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280422617 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.295232418 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275608067 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274837398 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.274693581 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.275551983 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274142894 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.275941656 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27482478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.275464348 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27842318 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.273495286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.279789621 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277053002 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275432618 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.278373402 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288050306 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301333609 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277773688 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280312884 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272360245 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.278604053 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280094187 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275420755 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.274892702 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281297 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288933418 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285993247 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.275888535 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277625168 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277339743 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278485274 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276188818 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277386831 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276457038 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27660196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278726649 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277019715 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280429754 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278483317 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279812115 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279077397 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279762295 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288506435 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279001082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27904063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281528454 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282240861 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281828536 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.283700495 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.284858116 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283089444 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280409087 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.2842499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291825818 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289996718 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283231608 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282532091 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281775995 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.279635938 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2810667 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28061044 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281801191 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281855685 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.281122642 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281314059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281376292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280081589 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280926149 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280820904 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280661974 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285449077 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291511434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282676522 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278450598 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.279769295 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281195796 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281611736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282317848 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.288848735 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284072368 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295511817 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293545014 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286286398 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283556167 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287231026 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292347717 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.281947679 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285543987 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283731585 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282782561 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.281443065 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.285243312 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28234616 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.288185702 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281919095 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28164146 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289654969 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30520908 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281814167 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.282381214 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286909167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.281077693 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.276888575 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.280947166 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.280815056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290372626 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305584479 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281562966 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284048665 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283794522 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285453404 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287280661 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283394823 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.283998123 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.277471126 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282628718 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284102149 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282752958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278653016 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283109112 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.281586011 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288642423 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.292942877 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279190833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284118043 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283884028 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284742801 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284470934 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281206287 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279270902 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279644235 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282222505 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284922817 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.285618382 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287931669 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284658076 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287015935 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285602078 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285675639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287765257 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297899212 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291411458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.280325535 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284262349 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285349401 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285130557 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285670514 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.28572952 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286351118 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.286645966 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285321224 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285684378 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28515411 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289283575 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305823933 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308253142 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285630429 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288563708 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289829258 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.286044785 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283269874 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.286165894 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288516579 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290251755 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295317582 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286956943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293061222 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309358961 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290683346 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291047295 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292523389 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298258668 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.290775995 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287253824 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287916133 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.295143507 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307442307 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28856305 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300401219 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.320868856 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310200528 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288378528 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288325306 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288549792 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287572477 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291114212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287550529 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28703169 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288179599 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28785962 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.290643513 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295186619 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289864167 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290893284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286823865 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.287546208 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288573801 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.282748383 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.289606647 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.287724177 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.28795213 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288918728 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288906276 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290400023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302158872 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.315877557 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.287498623 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28929 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286701795 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290826318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.293797885 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303241739 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.29768342 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289980396 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290146266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292584239 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291692284 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288952137 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.291222045 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.290638106 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291714507 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287436152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304317032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317436338 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297116861 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.291371042 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29211298 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.289588985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293240366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291605806 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292185375 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293323591 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296216312 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296322561 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291768454 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290234762 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296278242 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.299209035 seconds)
  done (took 760.575124045 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288337311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288905316 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287789393 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287862662 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28658002 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286929672 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288605249 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288450548 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288280494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287382453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286489027 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288097126 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288800235 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289208179 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287277681 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289659565 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289856261 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290855888 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287579086 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290413247 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290312484 seconds)
  done (took 28.251186536 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.291904792 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288148967 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289846132 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29289443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289923834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291043455 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289837111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291143673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292377664 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289267726 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29082078 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290180144 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289747156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289783951 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290008343 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291567825 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291376517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290449297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.292106414 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289681728 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292978083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29077885 seconds)
  done (took 29.591072518 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.294129147 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.295036813 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.293925591 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.290288134 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292409513 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.290165777 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29471616 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.292489256 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294234321 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297486468 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.29601121 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.298506176 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302934817 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.298632858 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.296114334 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.294487646 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.296827326 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297838866 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.295709654 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.291674334 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298481067 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.312546129 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.29103928 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.295725871 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.296017102 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295364967 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.294656611 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.295244855 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.297670562 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302031982 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.295672 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297500265 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299299702 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.297641354 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.297843918 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300764164 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.297591852 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.293829593 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.295164424 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.307720127 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.319842974 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.297096649 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.306207229 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.317511226 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.296581882 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301374432 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30600287 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.29473801 seconds)
  done (took 63.501894827 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.297505913 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295442312 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294667494 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295094898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296123659 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296040321 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.29417893 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296317519 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295309588 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294157541 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298147548 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296567831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294604004 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.295955307 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.297659921 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294604827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294616958 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295890489 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.29527879 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296586624 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294927543 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297557578 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.297718089 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.296820625 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298667661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296466412 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294912607 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.298885028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.297288529 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.296300246 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299823391 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298437184 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298489303 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.294765367 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29609554 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298772929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300161742 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296159732 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297916317 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.295452268 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298511208 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298196838 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298297552 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298578744 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295154528 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.295910344 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296644346 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296819958 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.297460148 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298332662 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.297964953 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298435017 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298110132 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296553431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298672974 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298387638 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298479293 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297260274 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299977933 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29826033 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.297301892 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298636611 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297396567 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.298968356 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.299813414 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29686227 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298505046 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299256917 seconds)
  done (took 89.405333163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302350091 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301195609 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301173759 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301301884 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303382352 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.3021019 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303091728 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303460828 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302320168 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303670392 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303137525 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301343384 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304715466 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302075189 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305034449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303004487 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304151455 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304120538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305182149 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304286932 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.303899593 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305393426 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304806994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30444658 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306152462 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304421409 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305837465 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303793244 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305797385 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305388619 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30488961 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.304532845 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305075526 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305978741 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.305913061 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305613891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306006613 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306592346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30622301 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304845572 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306331583 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306185507 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307138793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306346974 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305928764 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306242628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308330128 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306398153 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305112139 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306154247 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307718573 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305791258 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306002736 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304567261 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307181718 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.305578639 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305443879 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306721712 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306158974 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308287088 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308038051 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305724895 seconds)
  done (took 82.11343665 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305823404 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305273151 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.302530343 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301077057 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303396648 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302872291 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306392629 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306367947 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305246742 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.305389586 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304857902 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301300132 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304845837 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306472459 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303120088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303692957 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302277021 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303145297 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306073726 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304383135 seconds)
  done (took 27.291990724 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303391831 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306096716 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303759125 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303637205 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305646066 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303633717 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305924627 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305843343 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303161367 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306154947 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30692395 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306548928 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304256642 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302542507 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306965388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303003537 seconds)
  done (took 22.085014609 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303708108 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306476135 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307032489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310514653 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305453976 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303642199 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.308279481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306254883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.305002031 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308464021 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307437714 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308004367 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30645468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309069987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306409487 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306385703 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30628882 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304247738 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308596212 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308616909 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307677741 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.306215441 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.306447212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307308977 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305951623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306219537 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306125783 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305075268 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.304757448 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308161838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306386417 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305986524 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306255466 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306325186 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311445899 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306307654 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309950478 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309680848 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.308491835 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309657061 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.308655312 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307194161 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309634188 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30937221 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306501283 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309584881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306943579 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307497858 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307057872 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.305992479 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.30926943 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312679477 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308880287 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310910129 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310666162 seconds)
  done (took 73.12217925 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309683663 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310450463 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307213479 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311502281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311488591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.308018355 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309926484 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308215212 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309327592 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311284272 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310258429 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314058048 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309071564 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311908458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308859309 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31152217 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311097838 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30965601 seconds)
  done (took 24.795230908 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309692105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312058835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312565803 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309675198 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310332523 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31240191 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308954465 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311915102 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313008477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311145703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309764892 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.312080422 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313021543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311904878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310109606 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309530889 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312628614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312042121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311894862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310922016 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314320048 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311413234 seconds)
  done (took 30.06528011 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.314551598 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.312937115 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.313461783 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.331291765 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.334427803 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313873821 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315146177 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.316211687 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338334665 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.371285557 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.365087951 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335353399 seconds)
  done (took 17.176139873 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311414051 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313188538 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31202672 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313754168 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315288269 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312626679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312218825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310567824 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313947802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311402689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312516385 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314855001 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314686972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31268042 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31357932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315127687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312580904 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312800507 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311608898 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313962165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312103448 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315913931 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313037223 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312437652 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313140385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313042614 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315336057 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312513077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314572731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315565074 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31341324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313243935 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315705247 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312218479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315167626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31611101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314091818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316565206 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317629157 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311723412 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315614756 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316962373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316258975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31417623 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316825826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312238222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315367196 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315090376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313769085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316594469 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316989613 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314127604 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315660728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31655782 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319197679 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318883368 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317412652 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315110384 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318296477 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314988839 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316189657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318453946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314361284 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318205217 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319330983 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31618382 seconds)
  done (took 87.984068115 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316844408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316603291 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317266649 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318377505 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317293262 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318407216 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318489183 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318933837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319065418 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316714588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322495886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318583149 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317885854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318141218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318169886 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319333095 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318567069 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31784962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318761939 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324483299 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32091285 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320125476 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319978786 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320616831 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321208624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324851713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321178955 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320990058 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320696557 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32076868 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320716029 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322082039 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322642986 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320856829 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321186311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322869529 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32002095 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319567525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319921301 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321942328 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320330122 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323041655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318862995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320687075 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319036369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320089241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320247231 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319265264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319434302 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318014924 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320603207 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321167435 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320424748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322114298 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321012535 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321051115 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321317487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320195415 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32169286 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324001671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321302151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322419949 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325795707 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319043349 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3209838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322451515 seconds)
  done (took 88.362425575 seconds)
done (took 1780.076973187 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.496175537 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439908773 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.32536161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.356537032 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318528558 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.316681516 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.331988436 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.321492925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.325867052 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324850251 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324955193 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522435514 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.341325023 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321484777 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326217425 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419487266 seconds)
  done (took 27.03860582 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.357939025 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.331570559 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.458125993 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348627689 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354800398 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531737543 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386233073 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.330205174 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.523960293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373260803 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.32586906 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349729285 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327255706 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328058029 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344628986 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.531447281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.605309175 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.337575457 seconds)
  done (took 29.370271611 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.842090815 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.350673035 seconds)
  done (took 5.418052309 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.352678585 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.33170158 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.333580846 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.330011171 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.320332375 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.316939809 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.329866062 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3260344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.317530984 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.493145556 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332094828 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.340489872 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.351788859 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.332375858 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325959356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372137581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.535528585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328206305 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32359695 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.337437808 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.332329635 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.429653327 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.376027188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327249618 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471768109 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32179842 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.333384797 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.338029089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.469194488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32605379 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329960451 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.329302397 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333284509 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.299495328 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.870388809 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.322153882 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.354982876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.341051501 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328094095 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.508080001 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.332892338 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.339410491 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.324304356 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881805382 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.486996947 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460895971 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.344455371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.333798905 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.335382552 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.401956156 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333890396 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33395039 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.38026433 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.201702577 seconds)
  done (took 85.501567087 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.338487828 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.324013507 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512559293 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355049681 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334098147 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327752471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325831693 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.658968672 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337767667 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324713753 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.642759295 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926852611 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.354308135 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.369845301 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.180249199 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.378010093 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343682087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.320775978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326803496 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.325714051 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906468014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.336451558 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.320474713 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.442157312 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366662789 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.906611694 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.328998225 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327118976 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.332243077 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.323863984 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884672448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.351729372 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.38121574 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.324116806 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.627080558 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.76911869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.727904597 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.329937669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.37321753 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.32885999 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.323669585 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920275399 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74633512 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329718863 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.341892375 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.887683088 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.331164042 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.328421069 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.327241507 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582540915 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.32985963 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.331595383 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.343466657 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330090614 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.328942724 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.40068841 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395754256 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.890267735 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32476967 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3260967 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.377775287 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.325906943 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.324641387 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332227678 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.332989896 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.74021485 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.498947401 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.336994643 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.732769324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876383694 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.346959568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95961146 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.34737278 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.346374635 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.540559067 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335133175 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.324588792 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905454129 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328863932 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323742062 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715358404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325668109 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.63971762 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345473932 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327729281 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914998006 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.337331126 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.412900422 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325841132 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.328566777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324977519 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333508789 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.632223062 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.399348342 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.330078401 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.328852676 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.348556319 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327468032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325424208 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.331637974 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945293986 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.352884622 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.330577187 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333635724 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346891864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.332220416 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332309441 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331123496 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600028067 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331697977 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.335303471 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331280617 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.327319354 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.331269633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.436346623 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.33611402 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.682329507 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329365749 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350299104 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33578757 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332278697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.332962578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32776333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332646224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240752805 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.675130202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.355011393 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.328003636 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334245013 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331400035 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.345466575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344459687 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.3630415 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334130233 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122468163 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.36522595 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347382624 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332373211 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344078471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.349639954 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.329308814 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333014439 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642736185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.637555475 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497056079 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.330253397 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331634892 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.131114833 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.375498931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514049737 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3584767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330017054 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.628497808 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558731816 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335444742 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.329644836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.334175919 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595194785 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337096923 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652697007 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.919280725 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352917146 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337584737 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.129073055 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052572038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.338124332 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.339106411 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.646954956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350555709 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333776214 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.334160346 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.346222834 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.329311251 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.357297975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.340739593 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.334434958 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.338101027 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364247714 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.533008117 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.357411162 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.341356004 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889768163 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342370023 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330990224 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.36350673 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.332304247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333967765 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390159439 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.339563274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.373863407 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.338898202 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.333862553 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987160194 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331643743 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.339915485 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.532319674 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061433036 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.3555003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335729365 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.354081412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.225005012 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913739629 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358677824 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.700112561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.338360042 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380543182 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340044587 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380016736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92378248 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343319564 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337295706 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036868354 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.355003797 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.813456888 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.334673368 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337259887 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982756979 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.356473728 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.337039468 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.335419731 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.350879072 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.631848251 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.340083553 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.368735207 seconds)
  done (took 499.766617343 seconds)
done (took 648.317920665 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.338490704 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33981558 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.324699219 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.338661336 seconds)
  done (took 10.581802583 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.348658925 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.344172363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344062795 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.345157834 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.349897264 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.347042344 seconds)
  done (took 9.322330146 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.341523104 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.342032481 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.33923724 seconds)
  done (took 8.265304881 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.57862483 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.373443309 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.710409336 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.357397108 seconds)
  done (took 9.266678256 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.348644296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34653613 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.347103656 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.348216861 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.349346421 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.3491529 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347473551 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.347420075 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.349438857 seconds)
  done (took 13.374191915 seconds)
done (took 52.05175227 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.345118481 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.33865923 seconds)
    (3/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.344470662 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.607624993 seconds)
    (5/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.365534264 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.33382372 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.323443837 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.383046561 seconds)
    (9/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.229602434 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.385518712 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.327257615 seconds)
    (12/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460322696 seconds)
    (13/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.946972263 seconds)
    (14/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.32807203 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.462594997 seconds)
    (16/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.341255659 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.324761046 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.023987221 seconds)
    (19/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.400908817 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.193581008 seconds)
    (21/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.330369408 seconds)
    (22/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.41998427 seconds)
    (23/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.326257816 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.334780964 seconds)
    (25/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.235637481 seconds)
    (26/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.328624438 seconds)
    (27/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.347077225 seconds)
    (28/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.334018143 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 2.337115403 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.448701475 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.287014203 seconds)
    (32/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.52779189 seconds)
    (33/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370846267 seconds)
    (34/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.133160153 seconds)
    (35/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.236201888 seconds)
    (36/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.522142371 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.370218734 seconds)
    (38/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.318429872 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.324178241 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.364570203 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422290858 seconds)
    (42/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.336419782 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448523142 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602016584 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.441302297 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699941345 seconds)
    (47/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.363566027 seconds)
    (48/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.501351314 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.344496199 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.444049496 seconds)
    (51/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.339326324 seconds)
    (52/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.7260565 seconds)
    (53/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.330964603 seconds)
    (54/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.348439099 seconds)
    (55/286) benchmarking ("sort", Float64, true)...
    done (took 2.343157554 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.34459097 seconds)
    (57/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.332597967 seconds)
    (58/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.357571466 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.650845668 seconds)
    (60/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.932700515 seconds)
    (61/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.332821699 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447872586 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.367885483 seconds)
    (64/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.345627997 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.418838806 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.36395541 seconds)
    (67/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.343890378 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.331351075 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.370226706 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.277078204 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.890806358 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 2.340282431 seconds)
    (73/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.426763457 seconds)
    (74/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.953480691 seconds)
    (75/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.445918417 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.332273324 seconds)
    (77/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215687669 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.351641539 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.407461922 seconds)
    (80/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.330247301 seconds)
    (81/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.42431089 seconds)
    (82/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.654334217 seconds)
    (83/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428208247 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.333485488 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.362682301 seconds)
    (86/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370479473 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.355909512 seconds)
    (88/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.346084898 seconds)
    (89/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.335998505 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 2.345137835 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.428108401 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.349827929 seconds)
    (93/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.330841295 seconds)
    (94/286) benchmarking ("sort", Int8, false)...
    done (took 2.347276962 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.349806915 seconds)
    (96/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.44597966 seconds)
    (97/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.347250766 seconds)
    (98/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.380119842 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.380682126 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.338970528 seconds)
    (101/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.182005989 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329503775 seconds)
    (103/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.348640424 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.549549389 seconds)
    (105/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.371563045 seconds)
    (106/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.332458953 seconds)
    (107/286) benchmarking ("sort", BigInt, true)...
    done (took 2.402129766 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.344462551 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.349597883 seconds)
    (110/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.726911136 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.201082197 seconds)
    (112/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.232767914 seconds)
    (113/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.951263293 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.336918285 seconds)
    (115/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.333906039 seconds)
    (116/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.350787512 seconds)
    (117/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.349035049 seconds)
    (118/286) benchmarking ("sort", Float64, false)...
    done (took 2.3495215 seconds)
    (119/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334499845 seconds)
    (120/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.352708341 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.467447954 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.86966254 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.373846615 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.351038619 seconds)
    (125/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.722514452 seconds)
    (126/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.337631419 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.643802515 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364507227 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.773700399 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.220536015 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.609907092 seconds)
    (132/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.337866525 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.471401357 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.376115078 seconds)
    (135/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.392823719 seconds)
    (136/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.47293597 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.766839686 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.479056295 seconds)
    (139/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.340258004 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.33642371 seconds)
    (141/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.370782096 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.33669617 seconds)
    (143/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.473577257 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.336366431 seconds)
    (145/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.349337977 seconds)
    (146/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.334863661 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.205914443 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.372393897 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37510933 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.347966957 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.374589695 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.370673002 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.336562931 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.363078144 seconds)
    (155/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.351509018 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.354017225 seconds)
    (157/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.549922694 seconds)
    (158/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.350652476 seconds)
    (159/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.334041189 seconds)
    (160/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.336265983 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.768152164 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.358389942 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.364588825 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.26247692 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.377931526 seconds)
    (166/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.354543824 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.33520061 seconds)
    (168/286) benchmarking ("sort", Float32, false)...
    done (took 2.348796638 seconds)
    (169/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.332813408 seconds)
    (170/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345662124 seconds)
    (171/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.370193896 seconds)
    (172/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.338122441 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.354347923 seconds)
    (174/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.750478478 seconds)
    (175/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.454817412 seconds)
    (176/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.337921932 seconds)
    (177/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.340904243 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.336427848 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.33785592 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.354078402 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.334908525 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37285813 seconds)
    (183/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.513975421 seconds)
    (184/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.043393798 seconds)
    (185/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.344833549 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.390924401 seconds)
    (187/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.390213052 seconds)
    (188/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.337734746 seconds)
    (189/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.356834174 seconds)
    (190/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.450859025 seconds)
    (191/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.33918813 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.341532253 seconds)
    (193/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.216102272 seconds)
    (194/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.411320665 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 2.35456156 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.412437861 seconds)
    (197/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.337672033 seconds)
    (198/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462643729 seconds)
    (199/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.660990754 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.458332926 seconds)
    (201/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.340620293 seconds)
    (202/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.434807631 seconds)
    (203/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.362402129 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.343094578 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.567907133 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.349986302 seconds)
    (207/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.85542501 seconds)
    (208/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.352660203 seconds)
    (209/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.398602755 seconds)
    (210/286) benchmarking ("sort", Int8, true)...
    done (took 2.352224479 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452550532 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.350076088 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.710044452 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.396497129 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.417295365 seconds)
    (216/286) benchmarking ("sort", Float32, true)...
    done (took 2.353447127 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.341960227 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.367151025 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392695665 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.235352275 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.357819064 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.351656974 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.35549667 seconds)
    (224/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.376178059 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.781029452 seconds)
    (226/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.356981808 seconds)
    (227/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.364893366 seconds)
    (228/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.378068024 seconds)
    (229/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.377237409 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440153236 seconds)
    (231/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.369370322 seconds)
    (232/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.349987773 seconds)
    (233/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.375737232 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.741154507 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.429027066 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.308174445 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.362262486 seconds)
    (238/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.201551559 seconds)
    (239/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.346675946 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.587196671 seconds)
    (241/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.252084095 seconds)
    (242/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.411771874 seconds)
    (243/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.341164666 seconds)
    (244/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.338721989 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.359065692 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.028058987 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.376845497 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.343510775 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.367389288 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73140758 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.96549361 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.339437604 seconds)
    (253/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.365808507 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.139238881 seconds)
    (255/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.396377279 seconds)
    (256/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.420321242 seconds)
    (257/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.066686573 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.02480289 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.362196908 seconds)
    (260/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.356020614 seconds)
    (261/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.729220893 seconds)
    (262/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.340235128 seconds)
    (263/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.054625563 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.433895591 seconds)
    (265/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365122253 seconds)
    (266/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.213111986 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435754414 seconds)
    (268/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.351586962 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.467241094 seconds)
    (270/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.479488581 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.355240217 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.366074195 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.339802588 seconds)
    (274/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.357571638 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.381271967 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.478540165 seconds)
    (277/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.468825061 seconds)
    (278/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.600663109 seconds)
    (279/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.919221789 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.394165651 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.294876004 seconds)
    (282/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.403795414 seconds)
    (283/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.38156525 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.379072722 seconds)
    (285/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.495852479 seconds)
    (286/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.362427723 seconds)
  done (took 574.330284085 seconds)
done (took 575.572890632 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392525169 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413794047 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.370480531 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.391211087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.480488078 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.547892254 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.379622061 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.373250471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.417033474 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.418626318 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.375544329 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.54515052 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.371921454 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.369498981 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.370212859 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410705542 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.374103892 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.367228294 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.387067588 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.380734628 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.386903091 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.377174921 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.419738533 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.546649502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.375132117 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373409445 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373141598 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.390190964 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.484365231 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.374652573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374950689 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.384174993 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.372326671 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.366445362 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.366745981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.390968313 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.384113981 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.381782375 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.376269857 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.483409677 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.360915635 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375872777 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.373934025 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.372704115 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.374011963 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377882221 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.373245143 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379975109 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414649299 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415855208 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.377441944 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.383848693 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.381553716 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.375789994 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386698828 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.375616562 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.37679762 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419957013 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.39265982 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419243285 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.367702938 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.374128432 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.377126718 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390826427 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.380947745 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377110794 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36581964 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.378272091 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.363313594 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.376075974 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.379251403 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377785152 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.376394653 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.390278073 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.406917054 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.379444579 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.365149215 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.375027632 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.382757996 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.374086965 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.385866601 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.418700199 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382285351 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375499467 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.417775646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.553004387 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.386049408 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.377092579 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.383694518 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.395286903 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.383242364 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.387217431 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.379000197 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.370787674 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.386375158 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.380394921 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.383825186 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.385177725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379776064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386185346 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.365615493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417849468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.372246079 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.371941233 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.37582578 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.49747506 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364195812 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.37251725 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.398364833 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.424452178 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.378674792 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.372153451 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.383254404 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420883439 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38512428 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.38299468 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.372575336 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.372996066 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.362805321 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.496603886 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379578786 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.383703695 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424779866 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.380185776 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.376105288 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.384305763 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.374718608 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420424227 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498635245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.388574401 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.490894834 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.374990985 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382589811 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.410795922 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425437821 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.413859231 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380937506 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425959031 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.395637511 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.37792849 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.391841702 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.392393445 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.382423476 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.386417657 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374998988 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.414709435 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.423904329 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422807142 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400914485 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.501992708 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.377423394 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.376615033 seconds)
done (took 229.379009641 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440531819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.374131461 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.479853263 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.375718749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.479957727 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.476882637 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370877044 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.373597496 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.37193563 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.757694791 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.372349387 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372942834 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.375869055 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.374639487 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.462028763 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.377174576 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373369945 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.720174964 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.377533096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.447818294 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.378196612 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.376421975 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.37437831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.763174728 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.374759917 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.372208454 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448722214 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.375806565 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.72466968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.371972972 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.373922913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.727453223 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.470106569 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.393703254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.387728995 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.386182275 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.488616584 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.393650817 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.462109294 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461484667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.48353597 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.418323692 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.374855154 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.380215966 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.378346586 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.380144089 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.37569734 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.404122162 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.378985881 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.377455311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.723275729 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.389335296 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.386321533 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376012329 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.377036176 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.400086346 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375765175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382141971 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474922385 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.381358933 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.445716091 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.763963371 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.761022254 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379288117 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.379636141 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.377836856 seconds)
  done (took 107.456212152 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.451029518 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.454753729 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.500627366 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398050715 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.431739189 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.507087295 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.397124683 seconds)
  done (took 11.413797536 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390021829 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381478176 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.431924216 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.430661339 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380208434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.595814479 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380520257 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.393500092 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.378043577 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.458378564 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383517495 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383091745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386475373 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.377684269 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433805848 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.394719259 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499078293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.383390352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.381187674 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536144514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378803435 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.387729157 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.455457524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39541003 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.38480869 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.388595743 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.338628494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383145661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378253351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.382422242 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380799469 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.494256781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380990426 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.381710063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381413428 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.54378652 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.385456553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381185685 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.383172394 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.385020213 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383206941 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.383417534 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.38368358 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381224438 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.385176527 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.408293539 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.382398656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.384530794 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383976091 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385986889 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.459643753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385088443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.384363016 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.382542214 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.464768944 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391189922 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385736312 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381127925 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383813497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382276918 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538991509 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43382132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38430498 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435038869 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385835347 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384700361 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.383313096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.385698106 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479260835 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.38282763 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435243686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383412315 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.609010131 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.410618137 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388293078 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.392332968 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.388844669 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386275488 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.38460833 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.394356375 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383467557 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389011905 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.394495803 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383390328 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384297496 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574041002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544122187 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.383875197 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.400140812 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.395181636 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.384191665 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.461055552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.38444057 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.381276005 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439565084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.503488285 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.465352806 seconds)
  done (took 143.110606593 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392851371 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.395934234 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.393499802 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.416194818 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.390837239 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.390517142 seconds)
  done (took 9.658936234 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.392226841 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.388473753 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.388225826 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38787463 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.388277389 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.39037236 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390005722 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392190158 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.393382151 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38971191 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.391350985 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.392452621 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.393372027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391596586 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.392033274 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388362553 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.391808801 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386390561 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.388995576 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389256226 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.391426126 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389392354 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390297558 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.391584769 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.397223959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3906512 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.397657309 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.389406815 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387122691 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.399089 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.409291746 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.390662209 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3930621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.399107005 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.396215958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.393280054 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393608598 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.393015453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387509801 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.392813223 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.394379125 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390887582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.389965644 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392939412 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.393960467 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.396761722 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.399269159 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401077398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.392181658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392533547 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39448582 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392639712 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.392098178 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.394900361 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397194309 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41375578 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.397578159 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.393421034 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.393101587 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.39511376 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39381817 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.393101543 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396330194 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398060227 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390604239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.394223644 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.396903383 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396150927 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393706537 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392249664 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394348705 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.390061122 seconds)
  done (took 102.599624634 seconds)
done (took 375.509629367 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.395499784 seconds)
  done (took 3.678961954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.644943523 seconds)
  done (took 3.932694552 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.986138601 seconds)
  done (took 25.282375475 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.409780098 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.441897538 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.39630416 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.393383171 seconds)
  done (took 10.929491791 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.753687651 seconds)
  done (took 4.038495207 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384826941 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.402667787 seconds)
  done (took 6.076882318 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.737145972 seconds)
  done (took 4.025130486 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.855371812 seconds)
  done (took 4.149317799 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.394680385 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.400613118 seconds)
  done (took 6.093497377 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.385396423 seconds)
  done (took 3.671627194 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.442843145 seconds)
  done (took 17.731009204 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.385025671 seconds)
  done (took 3.677281401 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.426793898 seconds)
  done (took 3.713908731 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.456704376 seconds)
  done (took 6.744167822 seconds)
done (took 105.029687958 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.387051777 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.389270193 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.388709966 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.389022084 seconds)
  done (took 10.837489763 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.427970465 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.426592842 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.428507137 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.436590671 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.429907881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427915494 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417941219 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417015477 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438026721 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429390531 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.446667021 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429598999 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.428029511 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.418964994 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428820253 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.428807831 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437419618 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427325946 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418971975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.430229853 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.393405506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.438524548 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.431397493 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.394866622 seconds)
  done (took 35.521257821 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.894031989 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.501521533 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.552446101 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.462261601 seconds)
  done (took 7.698955633 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.447145807 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450092529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.459569791 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498694212 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.525725818 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45765024 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421464875 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416037825 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.401380893 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.44910791 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524784145 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4642602 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531171252 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.396499705 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.577796571 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.395748431 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.396544921 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.448237703 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.498919764 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.524467677 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394818575 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.44630776 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452070592 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.465391401 seconds)
  done (took 36.331946971 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398007207 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.412782387 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.397242565 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.396531151 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.405221993 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39387587 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.395618946 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.39834028 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.395476063 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.952324312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.396463899 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.409056783 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.921916019 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.39757666 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.402283469 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.398402234 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.954368781 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.930164004 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.397854446 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40122797 seconds)
  done (took 31.443700451 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.392427747 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.393882178 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.745958449 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.650433375 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.391542902 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.389542412 seconds)
  done (took 14.254341307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.482607614 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.653393148 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396893486 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.816658939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.889025045 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.400021284 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.402294681 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.684301873 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.053513196 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.051971831 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.468917975 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.473847697 seconds)
  done (took 21.066093588 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.407847629 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.389578091 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.40784395 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.409227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.4635186 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.418396872 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.406348504 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.392238611 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.463662702 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.482798975 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416882894 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.464396097 seconds)
  done (took 22.414629912 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483336357 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391289347 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402144719 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506505591 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390620588 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242428977 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.529862005 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164608095 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.413484947 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669185558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39312028 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479639589 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65026292 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394670173 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391335849 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.385701172 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622040984 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975176325 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396571444 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406156534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421532143 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39366373 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402505595 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652758477 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397439632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393229877 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658329997 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393719555 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730325429 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411753075 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408555496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394015755 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669105386 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133440799 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512221371 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648403209 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407179909 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392320805 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.402506671 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.409163401 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405678996 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394976359 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408177557 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398393051 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398185145 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396504667 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181616739 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.417259387 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.395929577 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397208733 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705306217 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495337553 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.401020904 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396329682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549839242 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394161003 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.401574452 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417820853 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976095933 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399167717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416221131 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.397360699 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404539962 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412774971 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104556628 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402799965 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.404908956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404436024 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399741451 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410262949 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416190526 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398774044 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421204889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398135954 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232964267 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396947259 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395687393 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047743531 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40288246 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394864172 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627440361 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399466348 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398268353 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.396076403 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396978194 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245271265 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407409269 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.385504156 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412300202 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181235357 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672140084 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41987852 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421906006 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625719614 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.385051982 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400109048 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.39867506 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398407666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418638329 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186484594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415442917 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40227784 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658026555 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612390877 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410584057 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398890513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946284333 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425598803 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.416967056 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400806364 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652603895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07989463 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420418334 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417776719 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424327582 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399062805 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286709307 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410224375 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.498239663 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400396521 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706143892 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.345842817 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404628512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470114582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404400338 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403633129 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420700082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405514242 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403091396 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.650773289 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438118081 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.408984164 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.402199241 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401347536 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.401470334 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407418242 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.405768404 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628478533 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407492041 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674716953 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403042722 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40463674 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398750369 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.62368824 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396948924 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.736372015 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663425378 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415818416 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414018258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411662509 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425118347 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503943867 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427296961 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.402421601 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658166368 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405164351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.406811544 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403886437 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43063154 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411097476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.41291583 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406837075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081317728 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393549098 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409955546 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301624683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416384307 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472860126 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409941388 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66157608 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.405833288 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440035324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40505889 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.403096362 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632839121 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413481328 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.422366295 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488363741 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.944054527 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100360964 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422113445 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.406113044 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.404259329 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.40266005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406534638 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406573223 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406262097 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66304018 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425174658 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435753414 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081474538 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408403696 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404134729 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.433854797 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419195849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412837149 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408937521 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.416577416 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401546596 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421573712 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.415783096 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549333976 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.421633452 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406089458 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923555548 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413366548 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407908139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408021439 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442135021 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407500156 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313988711 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664929946 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410314389 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713470584 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4092004 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448285402 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.406409624 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413359855 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411296832 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.42125177 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415308121 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.419181142 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408857733 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431738578 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980723396 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231850542 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027315804 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408602393 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.433526077 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410032465 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215010148 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425697681 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408014624 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685403402 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207596688 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425742855 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949848968 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421280518 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303866044 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72398261 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641344265 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431356994 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.406283363 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718484148 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627210365 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441415717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411529157 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411457638 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.392562716 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042635513 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427983365 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507902009 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21872255 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427627141 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410543812 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.435927875 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410134175 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895099214 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432067382 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413036646 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412837319 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416498372 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303637163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415265662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412174381 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121334361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426400999 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.974376179 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427952715 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669648912 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.426791971 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.415519052 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.426850743 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.406706404 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.669763476 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719979056 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415259391 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427696319 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050638961 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.270197477 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418868005 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411286627 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305423639 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422348799 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750372828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.427894309 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.415879965 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417988067 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413306755 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414544874 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.410487683 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419062887 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399708872 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99789854 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.425617307 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422306083 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425294152 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267043815 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666967554 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.426676812 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097401441 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640759158 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431960941 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434015684 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.418469967 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424310123 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.39989287 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416325153 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417499633 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557919616 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635682339 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432931051 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.402384763 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.533369435 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624962969 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411629812 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423026462 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699904564 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.41552616 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.434368728 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224240222 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437307712 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416163865 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414629696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414685828 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414354583 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513172312 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675829962 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430800232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428142157 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905108463 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44254455 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415684115 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.433810393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510104574 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41599643 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.418146511 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.192588564 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109835265 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280493521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103052802 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733071583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41908331 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420101307 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418431458 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563184052 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41782901 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695149295 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41710368 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.453854219 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439434574 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418798862 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437339915 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634493205 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691757383 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417580409 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425947447 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420695187 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.418922293 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430607283 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.635684517 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011846616 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085215128 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422121372 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430458389 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210679478 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708859014 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417346719 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419015733 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42049927 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.439121315 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.435772373 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.42416658 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418863743 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563122404 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73405981 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165161072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448020434 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.445753034 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.19535515 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419894235 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673146348 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418378716 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.678891441 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098412188 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229550465 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682038098 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491334086 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682775641 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.421759976 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569171501 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.4303199 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421673627 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423995171 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276474884 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.416573256 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.434688042 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100903637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683294224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.424649415 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.432513776 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447145006 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.431526905 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647140086 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286501555 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651163146 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432251222 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427001154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423061645 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099453701 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733850715 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42184557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.423621296 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709918846 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422318853 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448575498 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.876830134 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.420726514 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088284558 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401329814 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44388622 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426152419 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237031602 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097879577 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.430576088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020808976 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427363089 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437048435 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693877766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.429627098 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426614613 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701282319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.428163088 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438537097 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688819761 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.09494778 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330328652 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.444989121 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42111963 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.422479206 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425284508 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428013006 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421360404 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430323006 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.934037991 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447584268 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42713614 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432448869 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423885074 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422862042 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.424258873 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427289508 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.430311031 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.434837412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.421836525 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434803166 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.427052414 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077302723 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44797558 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.093232102 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759681588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681872011 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427209282 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.410709633 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.431484548 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426222727 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426864529 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42240438 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442316626 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090686613 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.433901817 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.436069682 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432685159 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.645002312 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637559014 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43433419 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686974319 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432140457 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438900268 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.415642213 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428154707 seconds)
  done (took 1003.888832118 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.502020114 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.466776038 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.472181513 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.507920234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4411728 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.564123011 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.488948461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.543967585 seconds)
  done (took 21.311449524 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.443833839 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.437697319 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.44360935 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.438809858 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.431844372 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.9708465 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.45295183 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.437047204 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.442880527 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.436064601 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.441087223 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.197357451 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.456561933 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.448631547 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.427742228 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.437022796 seconds)
  done (took 33.678373308 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.7626105 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.718180128 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.136436994 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.438841289 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.461370502 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.439367523 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.843785304 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.46362867 seconds)
  done (took 28.589689569 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.443293315 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.443610247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.443447534 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.441837991 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.442752805 seconds)
  done (took 8.540965302 seconds)
done (took 1276.866589416 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.434272665 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.43766674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433252241 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437434291 seconds)
  done (took 7.066608127 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.418491798 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.419228284 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.420740357 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432150182 seconds)
  done (took 10.015590663 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.291735698 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.172246338 seconds)
  done (took 5.790117562 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.434910698 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197616786 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.169616229 seconds)
  done (took 8.128914809 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.746783213 seconds)
  done (took 3.073870189 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.862603711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.803628481 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.632816039 seconds)
  done (took 6.627808257 seconds)
done (took 42.02831069 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.445849989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.682598078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.590355211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.450533748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.589175744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.59012093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.173843236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.442154589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431008569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431513853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.43620036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.591062397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.154657018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.689539525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.154798621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.786463043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.594126215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433584482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430905146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.441563484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.170064112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.447437993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44346222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431633197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.590873246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.582001768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437684497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.783976845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.43488794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.444757484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.576428724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.448013924 seconds)
  done (took 84.658563147 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.441854317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.432279377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432670276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.459485198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431505529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433522849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.451684368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439705486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436386876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.433307248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.442461203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430835967 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.432913253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.433811035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.451673053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.435120046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.449675389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.469428254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.445668521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.431914078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.439849156 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.439309776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431898137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.450569061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.447739855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433204898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.451718256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.435275721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.457326399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.457854298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.433690869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.451658325 seconds)
  done (took 79.476190516 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443619986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.434377026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.443743173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.449309253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432975728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.442362491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.434285281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.446952559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.445068629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.444119899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.447756195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.434534434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.436747912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.434478368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.460709321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.446697416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.433155141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.446376748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.433420003 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.435867349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.435593239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436333562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43395661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.440614409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.434720157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.443196639 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.434325577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.433443313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.433247994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.435959119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.445229433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.451952923 seconds)
  done (took 79.418594563 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.643693134 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.445836442 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.446310901 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382102255 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.445580041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.445104015 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.438504662 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645109802 seconds)
  done (took 15.225858464 seconds)
done (took 260.10696487 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.446788559 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.432324816 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.675604616 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46332042 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.436389916 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.485718233 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.468270764 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.684750036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.45322315 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.688261594 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.455062223 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463735935 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.438016752 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.459255881 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745324658 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.595571117 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.400149299 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.436321507 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.816985951 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.456588016 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.728178282 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.435773448 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.749744745 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.444322917 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.439484557 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.440637922 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.437498727 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.387722177 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481013164 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.832318886 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.447872005 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.426331463 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538792432 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.560700734 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.676879476 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.623202684 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.441159186 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.541060199 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.685346213 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.438238404 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.454715264 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.260692744 seconds)
  done (took 86.324851505 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.451207949 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.57048732 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.449597004 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.449050994 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.449314459 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.574235294 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.54685539 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.44852856 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.447903136 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.449523451 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.44970874 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.447303992 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.449989091 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.448888044 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.449983886 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.449763368 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.451870998 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.454036081 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.455267968 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.500341289 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.59360396 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.477311184 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.4467595 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.451127914 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.552006852 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.630201335 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.453654203 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.443704894 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.49472507 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.451766364 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.453841484 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.50075681 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.451416565 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.452479219 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.572193816 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.554478735 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.477077999 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.451526501 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.569964296 seconds)
  done (took 59.211107468 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.453968467 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.721232111 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.920073341 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.457955181 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.454891474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.458237023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.548563257 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.449964892 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.460373385 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.459905329 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.621001475 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451348284 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.494247726 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.961761712 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454195206 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.452424567 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.451880194 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.456911236 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728148344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461824138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.567880733 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451686228 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.54913624 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.461600082 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.477562118 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455196312 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.460511162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.051788457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.456313386 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.62397692 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.401748911 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545731928 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.996535531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.935424923 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.404385693 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.457825303 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454445467 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.627509597 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.455416856 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.459509825 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.550455873 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.455024581 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.937793654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.140722269 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.473997569 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.454472991 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.07322015 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.626889075 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.753376622 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469941179 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.967277694 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.458812883 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457748208 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.460372918 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.758807269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.467587973 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.458748371 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.101053051 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.477280439 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.551734463 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.453331393 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.459366352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.740484939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.456665532 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.727301795 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.458361636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.469114823 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.47945384 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.937842105 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458775887 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.183504116 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476982968 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.458378566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.624012648 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.723307784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.104870993 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.460710182 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742749553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011689253 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.544790865 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.461029358 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.038379717 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551644083 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.461163519 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.461410834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.45925207 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.458054846 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.503735108 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.550791127 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.094534885 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.159790159 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.133546089 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.569323504 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.473124857 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.46109501 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.103764773 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.473672256 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.460110822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.937742325 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.170707307 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.477715103 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.470056838 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.182522085 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.479119211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.558960473 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464710779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.950082754 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.459220505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507604638 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.46095034 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.467956779 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.488224895 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.556741913 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.462391847 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458628844 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.144965803 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65136762 seconds)
  done (took 192.84933328 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.457017302 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.452312805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.455494401 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.451008958 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.456381412 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.465048227 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.455869436 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.457244256 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.462733913 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.45403057 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.455664983 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.455373535 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.456441764 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.460494855 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.46325258 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.462660952 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.455509673 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.456914041 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.457707975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.452812061 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.455639199 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.45976586 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.457219348 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.450869009 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.455310551 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.458437919 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.460102096 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.456106533 seconds)
  done (took 66.144066235 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.46364395 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.11963458 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.461637651 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.621430454 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482695204 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.462381421 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.621832932 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.535729841 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.462277501 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.460676879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.460886427 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.816623061 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.459768369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.067096807 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.686386171 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.635185975 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.06781187 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.478145192 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.461713929 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.460915368 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.620638205 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.476145826 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.840650384 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.167744633 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.46680344 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.166777335 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.457093162 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.46448242 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.464804338 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.167811114 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462991558 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.838953483 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.560353195 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.533826956 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.165756722 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.069225085 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.0791873 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.637452483 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.461987517 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458059704 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.460307715 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.452625766 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.166651755 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.465293627 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.465948319 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.161565592 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.481970817 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.463597656 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.468301446 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.460948734 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.535990465 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.535944499 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.83999577 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.174984517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.55735728 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476140262 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.627039439 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.892466011 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.463046255 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.086802372 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.466172669 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.169888301 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.485499145 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.456293015 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.464565853 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.469884621 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.647255883 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.624136538 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.068586892 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.482817601 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.071172314 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.660120804 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460048252 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.462751572 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.466153264 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.173316367 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076043141 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.657263097 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.624073082 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.698112803 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.459825506 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.466537025 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.457916902 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.558499798 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.459310519 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.172097118 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.088251112 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.480568595 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.465918323 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.465906586 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.46805962 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.682886765 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.193525975 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.563052402 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.06424254 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.862817061 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.849196117 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46869759 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.536908881 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.478154315 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.850653889 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.46962648 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.534200765 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.978619166 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.846655049 seconds)
  done (took 177.041318285 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.74655933 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.480674609 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.566788571 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.629301903 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.146814274 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.100146269 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.457064859 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.599353916 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.585256506 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.748967534 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.472211734 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.558260507 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.718843244 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.555250902 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.233175946 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547240013 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.563440635 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.624147461 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.620923002 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.463983555 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.271929278 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.794153392 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.679132101 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.498356766 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.587600488 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.326643064 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.089314832 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.024706821 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.670577705 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.47839471 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.036425038 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.474248655 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.471409497 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.248260981 seconds)
  done (took 68.42440062 seconds)
done (took 651.327177938 seconds)
SAVING RESULT...
DONE!
