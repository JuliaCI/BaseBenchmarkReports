cset: moving following pidspec: 25264
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.549901044 seconds)
loading group "string"... done (took 0.508349524 seconds)
loading group "linalg"... done (took 8.599156754 seconds)
loading group "parallel"... done (took 0.17449476 seconds)
loading group "find"... done (took 1.382422989 seconds)
loading group "tuple"... done (took 2.031992486 seconds)
loading group "dates"... done (took 1.354867856 seconds)
loading group "micro"... done (took 0.213747723 seconds)
loading group "io"... done (took 0.598769499 seconds)
loading group "scalar"... done (took 41.259288152 seconds)
loading group "sparse"... done (took 12.866191355 seconds)
loading group "broadcast"... done (took 1.044185885 seconds)
loading group "union"... done (took 14.224583123 seconds)
loading group "simd"... done (took 4.916865399 seconds)
loading group "random"... done (took 9.860144487 seconds)
loading group "problem"... done (took 2.223195871 seconds)
loading group "array"... done (took 24.290306378 seconds)
loading group "misc"... done (took 1.146694545 seconds)
loading group "sort"... done (took 3.588429215 seconds)
loading group "collection"... done (took 21.189229825 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.602133377 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135074768 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147715322 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175943918 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208437785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13900928 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157286695 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.553455157 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.068719926 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208788488 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144248079 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550959432 seconds)
done (took 5.820212335 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227693136 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07470164 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128808293 seconds)
  done (took 0.87894063 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075281704 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173907905 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093282211 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110452659 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111046184 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108382282 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093828366 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109921937 seconds)
  done (took 1.478680788 seconds)
done (took 3.344166636 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.816495367 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.807796583 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490524493 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126013027 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155218053 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129797849 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.314361031 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16356372 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108402752 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115193565 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172841162 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.35187794 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428514695 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.926622464 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09405495 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128672566 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080223583 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701488014 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081553991 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129804373 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.514585049 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111229525 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117642997 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124991542 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207021744 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13073758 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181538209 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102911127 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.689336634 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101413881 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183470966 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098646738 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161383489 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.216640751 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079949232 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10638821 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676208655 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188911968 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110268843 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095299817 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674483749 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079460699 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188795361 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107034459 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108884064 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186470245 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117065946 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078448099 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104352742 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103141545 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160550113 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456217097 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106467106 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14271484 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108759552 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692977104 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094703469 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156221594 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125636459 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108498481 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097407968 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116489345 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158548739 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.123020101 seconds)
  done (took 19.639524972 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115871624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139243743 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09349626 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13955631 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139072894 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096450455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083905733 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093216063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108320793 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181837826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136443011 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14250862 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073881394 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097407851 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117587175 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230466736 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119347093 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119213683 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081561331 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105971305 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123302816 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112633103 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108935294 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092759693 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168230763 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205819976 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122928347 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123035811 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092790871 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098143577 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142266138 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160438769 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074972695 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094606003 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180596262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120441113 seconds)
  done (took 5.130378248 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.112692069 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199599099 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098084004 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.208497592 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177927802 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149911845 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166856176 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117727398 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265359409 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.233594241 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164851413 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125944485 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126669968 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094641904 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09450043 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0804833 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076360044 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.755789201 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185983052 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150881363 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125414928 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102642157 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081684869 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372653298 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100507113 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080465417 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101834315 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072066221 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174123107 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102743629 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.325785419 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.101456533 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100434565 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106680407 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129742781 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111173505 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138912179 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100432991 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082306313 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210647933 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099008733 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107570503 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07824768 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119574305 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116138119 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130548838 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099287568 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110428893 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22693945 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098589649 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100204969 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.05475747 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199514979 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095125258 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096000371 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079764908 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.348691505 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098997939 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102510826 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080176237 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287371669 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13578605 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082920827 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078759873 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102576405 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076954875 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.413930568 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091678089 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.824208008 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097240717 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157013583 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098835169 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103767889 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085240912 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101047367 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100943272 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095830456 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078628219 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095643664 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078420948 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100082437 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097399707 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100053209 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077629178 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162407443 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114048105 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.0986685 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125032477 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082178902 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096278208 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127177098 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081343331 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09888935 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12416436 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103788607 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112879752 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098267631 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125412836 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095889668 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182706286 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082078245 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123639968 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097646316 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111625875 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116983056 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096640176 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083117554 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094360585 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080186099 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159136331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079554252 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078783487 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09981042 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110363886 seconds)
  done (took 23.390995615 seconds)
done (took 48.837465134 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.419424066 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112306482 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110887603 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109919754 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108748742 seconds)
  done (took 1.614879154 seconds)
done (took 2.343352659 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323483246 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197657454 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100272106 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189690116 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08697605 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196228721 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163723023 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099232543 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206401892 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081416827 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185009514 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08260607 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10375448 seconds)
  done (took 2.771752379 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092053447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116088145 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081270837 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10741747 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075918758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08997078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107772863 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127018465 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089588711 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083885323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091507199 seconds)
  done (took 1.787295759 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091684948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114759303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080224682 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09090972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093928551 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091518108 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109160737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102624739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110209754 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086372573 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094685799 seconds)
  done (took 1.796892088 seconds)
done (took 7.074879817 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.124975414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.875687188 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122430532 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173891482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.336188471 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.219143423 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.64943654 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135325823 seconds)
  done (took 16.540827214 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.126755898 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094979673 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08118101 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098013299 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078966733 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096408369 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081071104 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095843025 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079279085 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09784564 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078496668 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095762536 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08125812 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097536536 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083606149 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098870492 seconds)
  done (took 2.255675708 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114879418 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113929625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101153295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087579944 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100236212 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099195812 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085172303 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100031177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0812955 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098239966 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088042691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103638564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101865006 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081635839 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100787383 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089948115 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097441564 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085655393 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101200213 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085944484 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104677525 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098220045 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086686615 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103201668 seconds)
  done (took 3.143590144 seconds)
done (took 22.669308914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164405708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083147074 seconds)
  done (took 0.978847668 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100302319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117923681 seconds)
  done (took 0.957569103 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105752104 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09608784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134989179 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114373341 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080458054 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079516561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129488414 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097670726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079769752 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096923769 seconds)
  done (took 1.753934489 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08489839 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099725691 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08877031 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119581305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110228442 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084831487 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103232514 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086902371 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105124012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081012669 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107680592 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101424646 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106603241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120131208 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087543226 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.22713149 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109002464 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086934473 seconds)
  done (took 2.649073089 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080394767 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081347242 seconds)
  done (took 0.902600542 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083316379 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093770855 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082092774 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09908259 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079742506 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096571449 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080135231 seconds)
  done (took 1.35494353 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.474849259 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.246510992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304216776 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112427219 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.13074331 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350918465 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13274594 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092763284 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111456775 seconds)
  done (took 2.755536356 seconds)
done (took 12.088834524 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090891463 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131220573 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.473673171 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11541915 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077883198 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157110243 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.263607516 seconds)
done (took 2.052243279 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339671571 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121267777 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087511639 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080515917 seconds)
  done (took 1.369271349 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078120281 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083975583 seconds)
  done (took 0.908677505 seconds)
done (took 3.024808079 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07721542 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078185348 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091634238 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076398616 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091771788 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075516022 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09439058 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079375123 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127050947 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.076845328 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.094837319 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077085241 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074240355 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092073846 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07667642 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093000624 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075052364 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091094572 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076987877 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07482602 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092652083 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073998717 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091015585 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075164389 seconds)
  done (took 2.806384881 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103046281 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09573759 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084412319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103013911 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084122222 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102751103 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102648552 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081112076 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102788832 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082752511 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100924059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083676639 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100073873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084743381 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099786214 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08494364 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103600687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081113383 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099725598 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084840786 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103822166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080924652 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101847731 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10296121 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082633235 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101159267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082583005 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098854541 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085273044 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101361447 seconds)
  done (took 3.556271688 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086545685 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074352065 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093572801 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086455229 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092349941 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078995534 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092420962 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079230666 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095995777 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076058631 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080177368 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092297093 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078159535 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097440077 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081133983 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10058022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093954809 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095468317 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079094814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099274867 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083490743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09873979 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081014266 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077554339 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094866752 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076452311 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094384318 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07480858 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093919843 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07657238 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09866298 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084186826 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076970072 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107780242 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084244638 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094586886 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085675243 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095087869 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082151895 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094960832 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077295118 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094255122 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080326146 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08646652 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094967457 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076298675 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.095872742 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080753553 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096317236 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082445873 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091296989 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078295122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098522703 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08152119 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080740886 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092607005 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076645827 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092770279 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080404271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092787942 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076220004 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075260711 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099981418 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076539486 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115931167 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103700001 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078406816 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080465798 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096822141 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082797341 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097501782 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093217807 seconds)
  done (took 7.067060552 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080732529 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103854257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078279432 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095307854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074484332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075887205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100344403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076161851 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094524176 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093870055 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092898506 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077033799 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094262288 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080289655 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093869667 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078103383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10346269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073595469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093660561 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079521024 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094235413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082529031 seconds)
  done (took 2.674924087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220359207 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102252335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139415118 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111598018 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095492053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111468492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082697562 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102070035 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100769439 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086899782 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103710768 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083453448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113844562 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104371307 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086539587 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104704631 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083419608 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104298266 seconds)
  done (took 2.695949206 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093231666 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096324317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102682056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096973489 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078644373 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099380621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085758852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11777603 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082659515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099989866 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110735426 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083941404 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100946729 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079842467 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099385201 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07923358 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098351145 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079958978 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106160701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085211489 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103322429 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090183097 seconds)
  done (took 2.828958251 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095803483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099100586 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099996551 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100566859 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077891525 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097564389 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086777012 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096458625 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087749298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098093642 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079285107 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097011376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085896544 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096856597 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105033913 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079275923 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098051675 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079936261 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098039822 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078981375 seconds)
  done (took 2.600705128 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120959751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110990716 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092931981 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122789337 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111599974 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094233822 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122520027 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094356093 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111972123 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124792859 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093561177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111868312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122650366 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101854308 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111103838 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106385266 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122910127 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12242756 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093112123 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110640592 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124506914 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093646178 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122400904 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093332343 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111269597 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110607416 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094367913 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120688369 seconds)
  done (took 3.838250663 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078452229 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078152622 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094288825 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076371014 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093434645 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076284298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075777665 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094573743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07829905 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093773372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078442503 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095589234 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078986219 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078161504 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096095442 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078261943 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096120969 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075897594 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093455555 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077024033 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078536658 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096101115 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078115755 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094255388 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076737492 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097681836 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076656347 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07670389 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099923444 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078070889 seconds)
  done (took 3.303720937 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087026391 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108645025 seconds)
  done (took 0.96429279 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0780244 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114166494 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076684768 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101428476 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086722863 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099052952 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09137196 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104776076 seconds)
  done (took 1.517838819 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103853751 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117195761 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085820642 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109565306 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097973457 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116430304 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163748008 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085406711 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105673883 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080162946 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116573252 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079139354 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.1077786 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084406807 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105412475 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112127273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080849966 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089328832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105265122 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082042725 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104243629 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113256337 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090705289 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10549156 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083155312 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109500535 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093055012 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109056885 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085304992 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10942187 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086615221 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091727035 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084577439 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103816948 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080633629 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115727297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115388136 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084543071 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107246609 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085988402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107044881 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078584769 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108974421 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087715627 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110106286 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086602451 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104448171 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078664722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098340831 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083734016 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09603384 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083779501 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092000926 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089833218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107259569 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098958446 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101065501 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084619808 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103354031 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083580168 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105863019 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084150528 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108928792 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08360612 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108705166 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088705716 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106196362 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078712842 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091580773 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080732123 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10803183 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10404751 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109003509 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104051239 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087568846 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099322642 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085801542 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104650429 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088235991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109866434 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08545569 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106010997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090658943 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101929033 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084452487 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105112514 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081993025 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101426037 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080802287 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118898822 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083570906 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099872277 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080614098 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109600317 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084612554 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103326306 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081083611 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108606258 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074072926 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104491869 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086280147 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105236766 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092702307 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104508018 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08645935 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106641422 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090944418 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103728314 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083465228 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094771617 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086050811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100818117 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088790831 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092181902 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086181336 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103035265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085874748 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110695464 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08253852 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103745693 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091340848 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110124444 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101978055 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077834179 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084937431 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103885521 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109534197 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092245979 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101141124 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079456529 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079103665 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107780335 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103184058 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087453577 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105508244 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086360732 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074949618 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099931032 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086041653 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110079299 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102210937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087680756 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109196675 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087224328 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102990309 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09077575 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102452029 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080779732 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10846901 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085150514 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097877381 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091034276 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103293833 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08286577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103727976 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090835436 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103324806 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0864203 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101916203 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085983598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105944947 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080785965 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103700413 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083545893 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112118669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084473699 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097968421 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078362975 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105953193 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081681209 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103411968 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080877202 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103896672 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087292764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100127945 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084007545 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102022716 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09761318 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112210531 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096719391 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107303101 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091607981 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10346991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087044289 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103812446 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087214653 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104663736 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089634195 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10622773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087169847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103764238 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077278966 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106535801 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090869849 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099843325 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081222181 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099673618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086423173 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111171291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085725647 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106283222 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08291003 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106206497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091327344 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103871354 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084135519 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099450157 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085249804 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108228017 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086940493 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105597635 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092154322 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10563745 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079372681 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109205773 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08303605 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107575844 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079200522 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100022033 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081400447 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105933936 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084346042 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102746183 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075210329 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108697906 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091440066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104897386 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081773396 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104159079 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09481704 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102751715 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090380788 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104080882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088140335 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118542279 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081359443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104613979 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093187986 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105081767 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075357747 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107610852 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083311213 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098680047 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084192157 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102142398 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086007543 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107641363 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087279292 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093810569 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085036671 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102622907 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081288438 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09802963 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090575365 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104599712 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085294381 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113714548 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087287384 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10540389 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088372034 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104146193 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086950761 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106249468 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086807969 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106722055 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08377056 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099989682 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085542203 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100780678 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082232734 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103789285 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085855573 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106032854 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087277152 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103625875 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090893652 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104890097 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086904387 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121665966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101623679 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081729834 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105847529 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088546802 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104431319 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084811723 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099527043 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091042144 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10519559 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091339909 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103220594 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078623021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10526102 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085109962 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106134072 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08730643 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106026168 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084376213 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103608492 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08610352 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11391675 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081662015 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111875673 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087818564 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107097563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085569158 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105970866 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084161586 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099910125 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086238433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106733289 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086731035 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104431906 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088408437 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10570828 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084836392 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102978189 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088167947 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105984875 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088792892 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094259946 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08161186 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101662651 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086760165 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108847077 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087818557 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10226097 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084610005 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106883667 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084484092 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096175178 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090563242 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107134452 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088125345 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114313708 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08243617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105657184 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096615648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09532153 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083562073 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102317698 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082831403 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111630487 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087479573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111062406 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086836737 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101588828 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079513018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107218116 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08464179 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075589319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102732157 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089050823 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104050885 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084746692 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106464574 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088407969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107511217 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090366876 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104505566 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085605156 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106692547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078753115 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101958503 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081424135 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105528691 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088152485 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102083272 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079477398 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104735753 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085413257 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105915494 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085767571 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103725811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09155237 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10520541 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086490227 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111393744 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076315771 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105231244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085701029 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105351321 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082151695 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10721334 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08782207 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10732217 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090713693 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105203748 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088761119 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106277103 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083100019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105578683 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086732108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106541165 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081621823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107393345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092400155 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102708559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086949051 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105791207 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0839608 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107085205 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087820068 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105819425 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0899588 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106222371 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086381601 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109412063 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086925758 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106392727 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088961418 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104122189 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091121236 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101063592 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093476994 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106838456 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088999982 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104240502 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082522307 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106169749 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086182383 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104490648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091919522 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107361061 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08261049 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101740387 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08369424 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106006149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092218788 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112449931 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086376449 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107009405 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081053863 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097825359 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08897069 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101526986 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085058132 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109133131 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091087823 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106084611 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083953605 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104352536 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091453703 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10993371 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089440757 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103206146 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088990341 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107884186 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087045348 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104040631 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085454198 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108058848 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088278708 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104476462 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08281673 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115437689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092415814 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109380328 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084626845 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109129444 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085949824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099733705 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087791472 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10612118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109075301 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087456952 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086716346 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116550737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101279399 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085855402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111266737 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086250553 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111906432 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08081456 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10688098 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089582128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108842229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080863363 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101912443 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08304335 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105952678 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08259675 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081334977 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116733302 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111531941 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087712453 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105109831 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086227537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100584773 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081828037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082089405 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108628816 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08577496 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114782847 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102248176 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082561766 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080389004 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106683055 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087962238 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108677247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08014652 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101463887 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082809252 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107203316 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094169593 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10523575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086492731 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107930458 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08683727 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103169682 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093285889 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098430547 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087927828 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118265515 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088107565 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109201557 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108676739 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093608897 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108027168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081309108 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107856636 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088428874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107530162 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088536288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108521305 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101911087 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107709331 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082870814 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105012037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08718031 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103027285 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094661483 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108621642 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08881021 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108807801 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085744056 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108732199 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094040259 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108997311 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090447967 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10755283 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085343093 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106366055 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084654765 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105597408 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089524089 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108293865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08650703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109412712 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083506133 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116372373 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113000751 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089244578 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079256923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102769751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083749479 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101727897 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.0903245 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100504205 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0848984 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105183653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085259536 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109380123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090129345 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106944205 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088888614 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106867281 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076886814 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110151085 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088011162 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110163575 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079849021 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106966553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088449378 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111576942 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093083321 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105133167 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08777711 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105637236 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089712806 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101093791 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089920731 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105664109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086360978 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102550573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087668287 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108617274 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088518832 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10904783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090329265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106651351 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091928012 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110723767 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080705039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099744856 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090962162 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103656461 seconds)
  done (took 58.088580796 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148912609 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087729431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077973444 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098800041 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125237916 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083637689 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097917933 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083737648 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102213425 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092975387 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097990409 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078786208 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119965926 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126767522 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124213729 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093617257 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097883293 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082765004 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097719971 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083024516 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119968402 seconds)
  done (took 2.931520184 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104173662 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116598405 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114951048 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101671717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109651019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116390433 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095457998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117130817 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120517742 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090963425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121388473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115447987 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090413551 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111254106 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110937748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094188059 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12021355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108767981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098354333 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115154257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113747134 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095094769 seconds)
  done (took 3.19265754 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09207409 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085965587 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110849792 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080768525 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106384889 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080665167 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111333626 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083005305 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111439527 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087299534 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104003129 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087089743 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111476498 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081230246 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10422236 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082660179 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111356881 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086552078 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107815863 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080484642 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.125949517 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080359562 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101577541 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084074411 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116368595 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088814043 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106846016 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087096298 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103426804 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087910077 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102453216 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088934554 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109274065 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084325007 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103294932 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086920366 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10616398 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081742399 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083067641 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11058963 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082510625 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107297206 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093887187 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103779341 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083713009 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109259284 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087016375 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100533496 seconds)
  done (took 5.430036539 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11853363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155593962 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086082247 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145831744 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121752684 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096117261 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107966855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145024954 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080853075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106476578 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124569841 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.100877744 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10912039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112855905 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087822532 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106961566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088916464 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102256816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092466605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106291576 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112536663 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091073173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122156963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11903876 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092166986 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105893024 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083531277 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112468082 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119172589 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094024438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113044056 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.095452375 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122972728 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105022041 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085691129 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110202333 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123321264 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088276916 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109461435 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081094563 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109831839 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092501508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110087598 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124311426 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089056684 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108237698 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087662686 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100448057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118908921 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090675434 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116925359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121572366 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092017024 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107555512 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093152502 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123623948 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106801039 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086202212 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111493225 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098743413 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101151173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092211757 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121008202 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109611086 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096727214 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12098249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108582281 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091828977 seconds)
  done (took 8.173099917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116109061 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113303088 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125103995 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10472337 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11292406 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092211326 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113143875 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112210373 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093619746 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120462297 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092809773 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162540012 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110258031 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119738241 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092939822 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112947239 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092736973 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112880228 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112785884 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093092497 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11317568 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104661505 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113357553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12456815 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125361696 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090060795 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112455172 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092359278 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124136542 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113451916 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104857748 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112931148 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111138894 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104722784 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126123844 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112895862 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086888132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113129665 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093167257 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113244906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089423241 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124604876 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112224884 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089693144 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112679067 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112855818 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104780626 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126670688 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119158421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10063567 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112586595 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124701453 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09384837 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114150182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124732969 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134689687 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104570335 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125301358 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112371957 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12496795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105345097 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133879662 seconds)
  done (took 7.727567121 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08420475 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083168711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102381187 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081943214 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105186407 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081676086 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083140933 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104290422 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083656112 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103392011 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083902305 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101515518 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082300246 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083533712 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101417293 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081615296 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101439512 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081323136 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103171946 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081313506 seconds)
  done (took 2.63911117 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093298918 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125332918 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08503646 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112840907 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087869483 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113286359 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086269181 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107184036 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087196652 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108241901 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117066731 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097857948 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105222891 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091762353 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118503102 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111630625 seconds)
  done (took 2.476799705 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105490609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125595637 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130096461 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089696077 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103086851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092727041 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10782367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080159783 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100967066 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093099204 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111220325 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090412373 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108499302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083380508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085138168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112693669 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.080167704 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10909031 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086861222 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131540763 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110133525 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08814538 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109183192 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086574329 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107999985 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090113312 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111612791 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082140364 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103844594 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088103384 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10833671 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092250936 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102445587 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089238377 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104637444 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082078655 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108015426 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088300376 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111265447 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086788565 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102504447 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087105057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107244023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090410216 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101823297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088171689 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100815749 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090822277 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107271448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087347886 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107225831 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092978668 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112311561 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096791335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11573647 seconds)
  done (took 6.295470797 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100567201 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109276791 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08921213 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102414874 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08839921 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113513082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089766646 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107586434 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08758313 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102822709 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087997445 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108590317 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087389606 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109648665 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087947679 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109379115 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079509147 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106285252 seconds)
  done (took 2.601899643 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090619277 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083684669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113402862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084759237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105972415 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086265363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101990771 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082536532 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103520662 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084600043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104785293 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088104609 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103102993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087352324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104914665 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085275058 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107239506 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083457904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084668642 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101043234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08650156 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103616672 seconds)
  done (took 2.909559439 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102414956 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136938155 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098370291 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.147624519 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110029828 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088936534 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118810683 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088183131 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127935503 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088289866 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109028763 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.087757733 seconds)
  done (took 2.137521707 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109322899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143211791 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086324139 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108973574 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120499057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091069013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110585018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090761964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125344069 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124801479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090364756 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125240948 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124787842 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123706594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099521605 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119795978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111272805 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090876268 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106148512 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133850007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091186695 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12451167 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09038287 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111869427 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110335364 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102554321 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12442958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125375301 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090608846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124647159 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120145775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089896928 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124287524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124717201 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087704354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125371887 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110643327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134214382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099472435 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122739227 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108360588 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10006643 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124861434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118960684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104382499 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112269615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118280935 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091128181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111379759 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139616306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119919508 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102311294 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11945092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125201815 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123901287 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139660999 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10447981 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122868502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120097678 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124913849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102264422 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120397444 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124054782 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124914689 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099533886 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122664872 seconds)
  done (took 8.33734721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125888415 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109180136 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090926591 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125677638 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123324043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111833952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090873367 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11147379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090781283 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107930904 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.395292711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091315186 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123684229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122849363 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090866571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111889552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111870827 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103058098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108571883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142239086 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0910947 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123560884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123582156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123083398 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12569754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099961986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111171482 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091125007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111876509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111227919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098800414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111270509 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122453074 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088198749 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123165544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090616844 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112199638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118736721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09077803 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119685359 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124450827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134661303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091608132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112022671 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125042356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091764023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111188032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087771413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111432429 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087701188 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12526515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124898884 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125467174 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103154733 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112532335 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111702611 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091943279 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111887378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091141513 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119518413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123328516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091137138 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139435312 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111766269 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090687756 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124318353 seconds)
  done (took 8.395584531 seconds)
done (took 155.937806649 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103193416 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141509113 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09853121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169390658 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08569096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141152138 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11890154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121584779 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085064214 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106437321 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085618827 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109725996 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151070352 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106353816 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085488496 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109164492 seconds)
  done (took 2.661954628 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180993553 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284978435 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106261139 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112674815 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091443003 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109542161 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090890222 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112816104 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087144097 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120154119 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087909848 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109787383 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119300754 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087923117 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106878099 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087531444 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.120221413 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087599456 seconds)
  done (took 2.951924619 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118065653 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153928433 seconds)
  done (took 1.123397223 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121946409 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183496794 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301329491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13911192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136200917 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128665814 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162841977 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.105426248 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21563823 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.108592765 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129960893 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113694058 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115286796 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119182737 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11671732 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092047675 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140014927 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094650093 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115371725 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094477678 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136969371 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11679077 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098941164 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115769719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185046535 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12815437 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093545357 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114616902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094213731 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115336604 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099134901 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128792862 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129650334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170342061 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120213764 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.167125074 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122210385 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091837704 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115503613 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091737239 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117963074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117623856 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107760972 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113592032 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093548865 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121537613 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093587404 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114847407 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122541479 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102864625 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121654926 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119540264 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16613598 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1231899 seconds)
  done (took 7.654507574 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794340553 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155881317 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09169373 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.894501882 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145265114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105469316 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.80011774 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136798484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244521622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.809239523 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106758084 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133327237 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238053618 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260618615 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153424556 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342101932 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675622193 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105288236 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144621529 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157817394 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121173106 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120699345 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133746164 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432485151 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114918054 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092430832 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120228149 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12626832 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169346756 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092535617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118608441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189194292 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271548475 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212189014 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114051283 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090794137 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089864407 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199106495 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275315325 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204023005 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182173648 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109410387 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090934402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126376288 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133656939 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087961752 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170770877 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.2037453 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182217421 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095205393 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126898932 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123349387 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103767564 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192171538 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.089277444 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344393338 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349543852 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09113549 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122472445 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131727529 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249938001 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114342437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232846502 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11868752 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221596038 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112604973 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765660028 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19488616 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091785226 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123353594 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099662161 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119838831 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126312847 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17353826 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.365100342 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128558511 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117206423 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091204107 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233919676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092060672 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112668722 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17328777 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092735132 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123143383 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130330151 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105736651 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200637143 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258952425 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128446717 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100764133 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120115603 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12664253 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093144529 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219836254 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227531821 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166646081 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245610049 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105488734 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194349792 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175579076 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125913435 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.180167573 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098638915 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132994406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126619202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224417625 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148853362 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092983439 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120048371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099812162 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152272615 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117059701 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100130518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197465582 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462490506 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173976792 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110377701 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095882598 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122790625 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171888363 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121464347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246809938 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123782851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176108994 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121960611 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088314761 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122343024 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172323674 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128709127 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10096077 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12699521 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121737277 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259332848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229332418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10760281 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247821668 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186975856 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125325693 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181953133 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122421239 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178165214 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101753422 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126129268 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115912153 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759649459 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127862025 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122297146 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097681497 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195836132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113385145 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092777833 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112899814 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088548305 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784519888 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094514418 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111042736 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093020065 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124435283 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1002512 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120558712 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096719241 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192827253 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240556481 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105185159 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12196889 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091678417 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191634825 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093929522 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114025831 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091914573 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114302094 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101969588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119211133 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094424698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180029363 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188415085 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22842943 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560044174 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113796748 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091814082 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240189175 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091052373 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315127944 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122739726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232253524 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175683062 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089446042 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346105169 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176542571 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195046225 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117034903 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.181421189 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110342643 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098599923 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169342365 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114034542 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120722455 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166641386 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108508323 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12917137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150884073 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091025447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258992773 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088758417 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177023336 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115097718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126825039 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299571292 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113505437 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133435297 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171482644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096292501 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114774492 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720791872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115172397 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102147077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125416701 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231893041 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174307484 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122918151 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12316626 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105889581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170264593 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.245059527 seconds)
  done (took 45.012730248 seconds)
done (took 60.25492477 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.338352849 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278261588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.299588606 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.200976019 seconds)
  done (took 2.066615667 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17998555 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156093487 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127403719 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110525095 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156407386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088357703 seconds)
  done (took 1.695564798 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.483170855 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38150922 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.351469414 seconds)
  done (took 2.096238127 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259933526 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.287193403 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326083011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.436861885 seconds)
  done (took 2.293093597 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210577642 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130000277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101947652 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142383412 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175574073 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180460027 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146925476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157515427 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132764921 seconds)
  done (took 2.300382621 seconds)
done (took 11.330650999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.252070936 seconds)
    (2/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.175917167 seconds)
    (3/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.2609641 seconds)
    (4/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.297551743 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.179454637 seconds)
    (6/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.243402029 seconds)
    (7/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.163846127 seconds)
    (8/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.253144278 seconds)
    (9/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.215744809 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094466275 seconds)
    (11/286) benchmarking ("sort", Float64, true)...
    done (took 0.232587067 seconds)
    (12/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.234600725 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128047446 seconds)
    (14/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.107568636 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12229133 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.228098328 seconds)
    (17/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103958675 seconds)
    (18/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136043424 seconds)
    (19/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.173198063 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100013001 seconds)
    (21/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.225678089 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.191040468 seconds)
    (23/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201004975 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.128368852 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.192026407 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.183459879 seconds)
    (27/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.177635372 seconds)
    (28/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.246726598 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121564831 seconds)
    (30/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.1284428 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138630815 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.223652521 seconds)
    (33/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078055678 seconds)
    (34/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.188180691 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101240233 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.156570464 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103471424 seconds)
    (38/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.106328595 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.144652671 seconds)
    (40/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161505022 seconds)
    (41/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179789745 seconds)
    (42/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12739427 seconds)
    (43/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.076232605 seconds)
    (44/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.128312851 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118515402 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121926108 seconds)
    (47/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217208385 seconds)
    (48/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143827045 seconds)
    (49/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202125462 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.238077535 seconds)
    (51/286) benchmarking ("sort", Float32, true)...
    done (took 0.231723257 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17425761 seconds)
    (53/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.18952267 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076605958 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097398878 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126256103 seconds)
    (57/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.224689696 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.195979182 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.22870687 seconds)
    (60/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118478082 seconds)
    (61/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105869151 seconds)
    (62/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214404263 seconds)
    (63/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.150558847 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119237011 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.10254963 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093161554 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124318412 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096312551 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.195845123 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118884375 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153438346 seconds)
    (72/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.153140173 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121189632 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168537063 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.153301114 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104317245 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.0965869 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.147633548 seconds)
    (79/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.159210141 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096199958 seconds)
    (81/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195549593 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119472848 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.090024908 seconds)
    (84/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120865079 seconds)
    (85/286) benchmarking ("sort", Int8, false)...
    done (took 0.196563189 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.15080239 seconds)
    (87/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095870276 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194699374 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097947174 seconds)
    (90/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130095434 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.114713931 seconds)
    (92/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.1287893 seconds)
    (93/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.130052919 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105152697 seconds)
    (95/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.122802301 seconds)
    (96/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113497168 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.1474879 seconds)
    (98/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119401841 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.180098328 seconds)
    (100/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.127570474 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137480179 seconds)
    (102/286) benchmarking ("sort", BigInt, false)...
    done (took 0.231585241 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095626868 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129117119 seconds)
    (105/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197966407 seconds)
    (106/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079974711 seconds)
    (107/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.127919262 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079282472 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125405013 seconds)
    (110/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087615522 seconds)
    (111/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103936827 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179866206 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.165868662 seconds)
    (114/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.157218444 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126720957 seconds)
    (116/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207403864 seconds)
    (117/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093896625 seconds)
    (118/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.126305065 seconds)
    (119/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094674349 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.121912686 seconds)
    (121/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.129088246 seconds)
    (122/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191722585 seconds)
    (123/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.113464835 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096798854 seconds)
    (125/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.123882408 seconds)
    (126/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157825535 seconds)
    (127/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116709874 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104188698 seconds)
    (129/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101231377 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.187744231 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102020121 seconds)
    (132/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.10402016 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143537568 seconds)
    (134/286) benchmarking ("sort", Float32, false)...
    done (took 0.154055764 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122233931 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121132696 seconds)
    (137/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109468013 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129069817 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095448312 seconds)
    (140/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.116033062 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102554511 seconds)
    (142/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.129208339 seconds)
    (143/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.130005569 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120149882 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139866114 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08122325 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.129960713 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098156899 seconds)
    (149/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100641979 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102016968 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119680801 seconds)
    (152/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081518917 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118028622 seconds)
    (154/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095328826 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133645276 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090292961 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121013419 seconds)
    (158/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079488538 seconds)
    (159/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114977884 seconds)
    (160/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.08468753 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097629618 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124892231 seconds)
    (163/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079373001 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170981427 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121848007 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.174293153 seconds)
    (167/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091458538 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115471526 seconds)
    (169/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172770555 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127607543 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078634725 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121427592 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139257588 seconds)
    (174/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08279165 seconds)
    (175/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.130227519 seconds)
    (176/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.106469051 seconds)
    (177/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104618258 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081537681 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.13109919 seconds)
    (180/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093754061 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12145689 seconds)
    (182/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094812937 seconds)
    (183/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145857432 seconds)
    (184/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0981158 seconds)
    (185/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129585711 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185882294 seconds)
    (187/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09606501 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121446602 seconds)
    (189/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07774915 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121316767 seconds)
    (191/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077231546 seconds)
    (192/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11902843 seconds)
    (193/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078327714 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078710919 seconds)
    (195/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126921221 seconds)
    (196/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123557306 seconds)
    (197/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089969124 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119260999 seconds)
    (199/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097235713 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119775866 seconds)
    (201/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.085468808 seconds)
    (202/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121738163 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096875355 seconds)
    (204/286) benchmarking ("sort", Bool, true)...
    done (took 0.223048226 seconds)
    (205/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117945361 seconds)
    (206/286) benchmarking ("sort", Float64, false)...
    done (took 0.152169128 seconds)
    (207/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.108598261 seconds)
    (208/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096092331 seconds)
    (209/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.103326146 seconds)
    (210/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097478085 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129234599 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.103401392 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.105324894 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095898989 seconds)
    (215/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102626014 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097131835 seconds)
    (217/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.104312769 seconds)
    (218/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.085639618 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104084599 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0928475 seconds)
    (221/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102376215 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11363498 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120583169 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093782294 seconds)
    (225/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113548659 seconds)
    (226/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098131926 seconds)
    (227/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.109370271 seconds)
    (228/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093973406 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119267812 seconds)
    (230/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092830824 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080749149 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.176318129 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119047695 seconds)
    (234/286) benchmarking ("sort", Int8, true)...
    done (took 0.221955693 seconds)
    (235/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078799391 seconds)
    (236/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15818591 seconds)
    (237/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08850969 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117418149 seconds)
    (239/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090650769 seconds)
    (240/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118927595 seconds)
    (241/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096340215 seconds)
    (242/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120669943 seconds)
    (243/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.19579436 seconds)
    (244/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091154099 seconds)
    (245/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121902454 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090382817 seconds)
    (247/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10513856 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098897091 seconds)
    (249/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.104843921 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.10407412 seconds)
    (251/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108186273 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.161173528 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.188756835 seconds)
    (254/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11927881 seconds)
    (255/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079365646 seconds)
    (256/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.105839435 seconds)
    (257/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.250262591 seconds)
    (258/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.145002272 seconds)
    (259/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114662891 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097065681 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138210191 seconds)
    (262/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096414468 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103235332 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100690329 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11846553 seconds)
    (266/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.090162626 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116336152 seconds)
    (268/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079072616 seconds)
    (269/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10807082 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10427459 seconds)
    (271/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102706538 seconds)
    (272/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079248992 seconds)
    (273/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081532874 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118335849 seconds)
    (275/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19223731 seconds)
    (276/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.086191774 seconds)
    (277/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118779247 seconds)
    (278/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08168234 seconds)
    (279/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.103463375 seconds)
    (280/286) benchmarking ("sort", BigInt, true)...
    done (took 0.250799127 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093221175 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138575785 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080039562 seconds)
    (284/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118246897 seconds)
    (285/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079500646 seconds)
    (286/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.101423125 seconds)
  done (took 38.584011558 seconds)
done (took 39.466055825 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105244438 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154809589 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101970975 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145493617 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129627558 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10700068 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124343153 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104186709 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129674704 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107340275 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.12794343 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.08555223 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125692487 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124788446 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102894099 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144282709 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104162693 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121345618 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093159377 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11795493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093520646 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118325959 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.096139269 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109066135 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102525989 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123995068 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096688677 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126395365 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094021067 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118235896 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092950903 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121980291 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092116539 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128179473 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096391677 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117894085 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102124524 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124439396 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.097264045 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119353139 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099084025 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.117981825 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097831528 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.122997123 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096101619 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116904327 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.094378396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130405713 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145703717 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096261176 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098415928 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.126106327 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126260299 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098244699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116696683 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093373701 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.1194829 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122103214 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117691476 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099154462 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.130238158 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.1154285 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11743643 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093526183 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117752773 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101266541 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125838619 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093200566 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123887049 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096031583 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112790879 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094195206 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116222096 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09086846 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.12393458 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100644891 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113134374 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094792058 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120771292 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095984832 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117802765 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092319681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11953013 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095652443 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09245021 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109865983 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092501483 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.12023243 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09365975 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117478482 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096725101 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121111226 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096585839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126138936 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.09431798 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.11987624 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118234029 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09536091 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120358312 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092855207 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113815623 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093111753 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098953938 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115114909 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095604163 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128518699 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092401462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.12061671 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094045632 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117408704 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131209221 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101235241 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118357379 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095589813 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091017422 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122668541 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117202525 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092642443 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115266339 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094324613 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119123151 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095051032 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092560304 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121464376 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129695819 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090630776 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11638183 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092959922 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094963059 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122912218 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094910174 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116710883 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094044459 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112534532 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093168027 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115389032 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098423497 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117307665 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094761742 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119155259 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094286693 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119962722 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096159422 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120455583 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09313676 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111153854 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096095832 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116042434 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096656213 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119892072 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094984627 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113762963 seconds)
done (took 17.562183341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101179168 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187993482 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151462301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.153310112 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1257097 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136824384 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127654141 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149536307 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102848672 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147182977 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148709443 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116286187 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.154471365 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127444949 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111472363 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125750219 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100455014 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134710181 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.158007043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144610831 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127276614 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126877555 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147285464 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143762958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100716446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144873262 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104283265 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124805102 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127881201 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117219291 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142808576 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103188425 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127792093 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135847735 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107796082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123563379 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111565578 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121167181 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101033676 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12525726 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138501345 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111788627 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121600295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132698822 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100723465 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12871598 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.100064696 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12378397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101020673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119954483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105892192 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14621062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12365279 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102750781 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126504527 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125731042 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102896297 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12896902 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.103213171 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128641165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12467954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104606975 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130246553 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142747659 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100303586 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12930208 seconds)
  done (took 9.209117459 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115809879 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153297592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132075744 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10800011 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128491699 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090862464 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11471545 seconds)
  done (took 1.786515703 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092220373 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146236963 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123807935 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148613035 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141334774 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128597024 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134067202 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092344218 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139761873 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126425596 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120137581 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.170730844 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117685544 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103766179 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151080201 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092980198 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151514005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091951256 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124899893 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149084764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0983155 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1390149 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.106048811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118532529 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138077671 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093495298 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183552305 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128651542 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092527694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098555639 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121901821 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186654282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139193241 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102998617 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118067792 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120517776 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140254706 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123865121 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.11765975 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123116721 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.113802715 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123570638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099807873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122974718 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099813916 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131813811 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128749949 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101454818 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123641488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.121453382 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128301864 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114625112 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11877268 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097886338 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127055686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098852104 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131340889 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122823052 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120844237 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124630196 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118592967 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143175255 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139552531 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118268913 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134453327 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139602015 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.115203223 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12307076 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100440354 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124921246 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118713801 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121331036 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.102804225 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.133196629 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12605391 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11928938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144056096 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096967217 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129741238 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096788997 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120550682 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093164175 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13339193 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096702493 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120186932 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110037848 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128836479 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12296994 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096952713 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139022403 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097679707 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129367085 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103947095 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123077343 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132924809 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120621985 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128172022 seconds)
  done (took 12.780446735 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095173135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095177312 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124500583 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.095319605 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120430604 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094999728 seconds)
  done (took 1.578664477 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125182794 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121843899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110283072 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125149885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162230012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118117545 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145808667 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103302609 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138684418 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132885434 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.118159184 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143961707 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149710885 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100461482 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14203358 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101354155 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143348596 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098103773 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133200934 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098464453 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134767264 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126827955 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098208217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141587051 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1020834 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127965558 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100507114 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133920704 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108894185 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12967645 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125732286 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102577393 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125764852 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103753963 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.142196459 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125338246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096695029 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128591659 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102286825 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126934278 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119415233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122678439 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108669126 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129132448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103844559 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126549777 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128326977 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100109643 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143264099 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103205622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128186493 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101773065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126965203 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.103474945 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127421841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103856417 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129815621 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143797945 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101414285 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126654078 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098376943 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12800172 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103697439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127518007 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101535671 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128327031 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126313483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099195523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097548267 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125189275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129623744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098262305 seconds)
  done (took 9.599733455 seconds)
done (took 35.897585338 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.675427563 seconds)
  done (took 1.627309716 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.867269669 seconds)
  done (took 1.821887416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.791278401 seconds)
  done (took 18.775524788 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504214087 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.601963793 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99849999 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168567189 seconds)
  done (took 3.229392134 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.965673301 seconds)
  done (took 1.94431925 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.30960256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.275113353 seconds)
  done (took 1.546635355 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80340571 seconds)
  done (took 1.769534799 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.548855305 seconds)
  done (took 2.515750105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361498492 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205606992 seconds)
  done (took 1.546616181 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.576575535 seconds)
  done (took 1.54885141 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.759939164 seconds)
  done (took 15.73486491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246343568 seconds)
  done (took 1.230149709 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305857256 seconds)
  done (took 1.278353736 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.66362816 seconds)
  done (took 4.63454249 seconds)
done (took 60.168591494 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10373325 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131741864 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107135636 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128897293 seconds)
  done (took 1.439471123 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110126736 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128350381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105111469 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127140397 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109438712 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128642388 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10118925 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184197596 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126063633 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102742284 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128163107 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101858944 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128928862 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100935718 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124721884 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102922774 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.13201642 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10119827 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129201067 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.127429216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100290654 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127425515 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104814115 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126605989 seconds)
  done (took 3.832438424 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103601201 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097800227 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126256406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096933469 seconds)
  done (took 1.401230986 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108668672 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139919168 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113413909 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132271735 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114423407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139713726 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122500547 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097362225 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125085699 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107547151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123580554 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117545186 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140566792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092663492 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135328324 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09540413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120101989 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139572598 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.107382972 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134591502 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097835492 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132503752 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10632851 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137587832 seconds)
  done (took 3.863487329 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.18264943 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.137372879 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147849124 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.106537271 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175034341 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149814251 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096748881 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.150279576 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.09736015 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14627801 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127540998 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.150154084 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.141102201 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126823286 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099177676 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130882632 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.140014956 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.118336724 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.126191658 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.110921412 seconds)
  done (took 3.641065893 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103889499 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122208526 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093162319 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096479331 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130318638 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100243696 seconds)
  done (took 1.632366796 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093890108 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.092216751 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118428936 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091348211 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121525884 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091707748 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116193584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092240652 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093107542 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117670261 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091918601 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11677617 seconds)
  done (took 2.22348501 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.384867252 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121935091 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121584079 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097063848 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12923043 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096689191 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135903664 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095305355 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152293012 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095546024 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.122609227 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.099508986 seconds)
  done (took 2.634804768 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215974444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101413333 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27092846 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.426913681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163043493 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173659576 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.33212095 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169887517 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.215521068 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118223671 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200792573 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164468408 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160270702 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187286173 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14604865 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.182693052 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183219981 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208274055 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155098829 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212173117 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171545872 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174697732 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18633473 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159679116 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14248698 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164188235 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099165289 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134783143 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180835819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17812566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181153556 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154560403 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144103876 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210494409 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21932431 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212983 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.367220353 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138625974 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197222297 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188782251 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260561269 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120344887 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228612093 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161996001 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110734683 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18879662 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163422585 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187511459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136907527 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146929702 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190740109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183150551 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185535552 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143260478 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373553634 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129534443 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151875083 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195002238 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221052639 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19742295 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173784027 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102521034 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252830171 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189346566 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185355523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152241464 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174163918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103416529 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210538795 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200477384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184429866 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175913124 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191156021 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139868354 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171221206 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175439654 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163139563 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18476804 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167494416 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100262908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157578975 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14378563 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106638571 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193789297 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12798579 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209852822 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114457521 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.29830407 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222407491 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165349961 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168265184 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173556192 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174734216 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154346307 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098216333 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154105508 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.168095292 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165583746 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110518026 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164334913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153621294 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133390501 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132800011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128960724 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166901431 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112456526 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175291976 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170676785 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134831424 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172089565 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156206497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164849793 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1791968 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194253931 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110672061 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138958579 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199929035 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165778278 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143139656 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182164985 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192773506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.171265863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117420108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202812301 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202669562 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121035515 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221543999 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121141211 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139512691 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.15799555 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166820695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163540449 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.135129255 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136153484 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163549789 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202010082 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133982577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115539548 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182157404 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133034643 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133411864 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124911139 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143050116 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148763963 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127885087 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145863687 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163687798 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167275112 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16109825 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16658904 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147718212 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201107232 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138785986 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139969586 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155201181 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124645082 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188142371 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192651479 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107678661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221947303 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177447304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24342559 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170179534 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138320078 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187234603 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136095564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099040641 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173793832 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167292663 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170247964 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189900026 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268342704 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174348362 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160207861 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157757252 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175661353 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180437352 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164258341 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.123685605 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169011819 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175074187 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128599129 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102407151 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134008785 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149606229 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109552006 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140011004 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189811165 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172144729 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263448779 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167921725 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148229551 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187456123 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105193075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172112012 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180282288 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146415799 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19245884 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189254462 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175596736 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149501869 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184174756 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098957321 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13164138 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139449319 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171647439 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111398276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140434719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149356507 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189508552 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183638838 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156647505 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245752651 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173563503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226401658 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101032318 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169876081 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177583058 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164990142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168375102 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1373887 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167757105 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184664935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150589694 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200536628 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171856666 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176560783 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205851852 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165901012 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135806075 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128461199 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177360167 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147613402 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168406435 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152786489 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113378357 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161416962 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142684972 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132197589 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190222114 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151508807 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188065469 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163093089 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181151345 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132341761 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122127 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168374806 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153129149 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095421412 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178708659 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223544746 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149528602 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139472539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209455959 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108758601 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.366364349 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221936898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194746448 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144263414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121459168 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169727945 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166154586 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172609512 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188525434 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150700454 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187395098 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16552553 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149018063 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114129432 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155146108 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157488627 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157935292 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110657731 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160537811 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153168976 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194477891 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152782818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166244365 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172445387 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125356406 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.161890309 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14995174 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208938269 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168087098 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186476193 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163157128 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175616914 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1960235 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10131084 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135598745 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105537993 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216260521 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112218839 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167251463 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.254847364 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251362846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164468727 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176929797 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14626203 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101393194 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168492851 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157010904 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270757795 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148541898 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.115125495 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228494872 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129019894 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13784951 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172672171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.352864179 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149944214 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181573066 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127834192 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.324512594 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131877278 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109560665 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167649069 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177772113 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145859119 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189570591 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146158882 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151285989 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168978649 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145857728 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232268825 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253570833 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178891786 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184249813 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150332963 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165065446 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172540322 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185988296 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149598367 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123990641 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171363736 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190796054 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190553696 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140835261 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173734783 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172072195 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167986612 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181574835 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112056184 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19526857 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138725221 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174087407 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14897402 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102350813 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168303154 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.25864859 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139279999 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18568064 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167314224 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110677649 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133830963 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15879045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139837362 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151064498 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136422277 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189393116 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133823642 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143126361 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187743778 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137582631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162187726 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12492874 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145304649 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150958402 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152907533 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113306956 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17871697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190378065 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137596949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185685233 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186038602 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174693096 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168819563 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151316479 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640632348 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135255741 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191231705 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155132775 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194668272 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127349529 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176204619 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169394235 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159381715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17614874 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158291683 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22721783 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174732924 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166248135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108681717 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153592958 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153650592 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109447354 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159878495 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171924642 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148673992 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144771036 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.137123354 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153580388 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152346725 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145808724 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192102606 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127037472 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220508236 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190386959 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116808166 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175323131 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18140303 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138762721 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167937076 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180794312 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149141709 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157591229 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109082457 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141506082 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188328888 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101598979 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170297731 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169845633 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172346407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172816255 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140638836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139507755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150836817 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169904775 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138236669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161315082 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137073886 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137210465 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13419084 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133803193 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167636032 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16585915 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13371183 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152305783 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186041108 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133063965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111305331 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368262715 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168027845 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200351574 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160315414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140661315 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122966529 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164504147 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161950194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167903055 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106440025 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140662572 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138648498 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187212824 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13285396 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165495081 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203186817 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170822453 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196409629 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142877391 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272093064 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118018896 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163482634 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137001757 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107445964 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151956664 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142938613 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151643768 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233594558 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185614376 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161534626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151525839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104965959 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134264388 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111151053 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168199752 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162432363 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167787517 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150467159 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095435575 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152855324 seconds)
  done (took 81.171695752 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17093006 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155209404 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155389975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201523119 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173206762 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249642164 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211793619 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233801842 seconds)
  done (took 2.622983616 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106795866 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164191977 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146513418 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131287294 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.097085186 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.334898645 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143290317 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129153283 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.155071253 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139728926 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.097895228 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569361113 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100962531 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.13022867 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120149677 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095887926 seconds)
  done (took 3.725962568 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.33187179 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550752449 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.14380806 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254468233 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234730681 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.160185487 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.767795143 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191690307 seconds)
  done (took 12.709105085 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129958436 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145784599 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145545063 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.172833357 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.128909855 seconds)
  done (took 1.802600176 seconds)
done (took 123.669109633 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102757531 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131974351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104120589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134024589 seconds)
  done (took 1.537826836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114972127 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086584853 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118986674 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085727079 seconds)
  done (took 1.477966828 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432023447 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.116990798 seconds)
  done (took 1.661083642 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122343764 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139866664 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.11235994 seconds)
  done (took 1.450776816 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110096088 seconds)
  done (took 1.189324869 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103659625 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105244834 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148563392 seconds)
  done (took 1.437397598 seconds)
done (took 9.835227535 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11783303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438881831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391310311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143562507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729356208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385677077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033032229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163492768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146213453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125600649 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113716506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705727543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018341231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347251205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.003784803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346206324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679850577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12906199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12965251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098731979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011016321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096491173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098397502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127768205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675495648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428987269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095975385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388685491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123833453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101904786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413379589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097529786 seconds)
  done (took 16.973486508 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102792138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187177583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104417491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127356565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100524136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127598814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107582433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140305858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189786094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095747416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143612792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097065025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131004603 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096426579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145902759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096567779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128086675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099476029 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133120708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098074821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145628495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095772326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128031653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098621648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125333066 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109358052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1261459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1107549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127030763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101300185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131658998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097283638 seconds)
  done (took 4.933121979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149612417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196350314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133885698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132729784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177081209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126568946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.182043583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165809798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192092659 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126138569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114889259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125818585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131931688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126767311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117795618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126916863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099803264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128454886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104587297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128328256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144733262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097922246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099522857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129139788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097063323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140667613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098698503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139663711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125157466 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102418574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131289585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09875068 seconds)
  done (took 5.278583234 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105556421 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135023301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115309799 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143198112 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100467028 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134701188 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106494654 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128791278 seconds)
  done (took 2.057546315 seconds)
done (took 30.321448346 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116033959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102620674 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140271578 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.110112139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.137504185 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.121495941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125218623 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108928638 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13948058 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105402038 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142855809 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096404182 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127294259 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096450489 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139570653 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10341965 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142151348 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107568819 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147003023 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113080201 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127184697 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108998057 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107262117 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.1483053 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.146065144 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.117039233 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143640645 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103382644 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127798403 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098244336 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140059778 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118805688 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12990485 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113907272 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131963964 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102185957 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128000377 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100300815 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142211106 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109801402 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132591489 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109166937 seconds)
  done (took 6.185741901 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125199138 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.169978708 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.099099438 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128352552 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098801946 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.165872116 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161845494 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098573454 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.12789161 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123360535 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.152859808 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098893016 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.127994899 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098028512 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.127936493 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.098744365 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.150541454 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122719448 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.157535688 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.127603492 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.172124157 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.159077159 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.131786007 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.15109417 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.169319965 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.162163766 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.118972916 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.163606853 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124644415 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.12832027 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.157418208 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.130249141 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.126847651 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098075422 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.167353663 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.133404228 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15467539 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.167146191 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.15784028 seconds)
  done (took 6.43012628 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107592538 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141917034 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120506397 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195115878 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137054489 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143090065 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107523334 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147581817 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115478962 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.1284995 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10755446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.158706581 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142776399 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106277253 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105363458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141874656 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147419481 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099914395 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132151176 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117300969 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14549492 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111429448 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13944156 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108369036 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126639702 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10699997 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130263438 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112976583 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132588522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106195422 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132124217 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102374218 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134395553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109926227 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13127444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106794622 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150385016 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107941733 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137208395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.13189852 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140690716 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103489056 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14975627 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169079831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098911522 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135263798 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105282918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106753711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126231022 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117492195 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137707549 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098220502 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142795039 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126538492 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097504046 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113836468 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.129878861 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101359648 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135742219 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106246816 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147893527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102963074 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142961331 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099243103 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133432298 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097609433 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127709065 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103734677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149633713 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102119427 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.168584665 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099069097 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135035462 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105843332 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13380788 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107140868 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127580001 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112135201 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137479281 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102700812 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138745312 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101281333 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131207485 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11774402 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142897234 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.106142694 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.13490759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13380505 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102721237 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098197255 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142331036 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101503987 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132082795 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115878267 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128430215 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101405134 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134448217 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103615587 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127053787 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110804262 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132912001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098053958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138202293 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099993771 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132171901 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108026196 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131810882 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098376287 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132840922 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.106046484 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126603569 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.102434259 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.13205854 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.102154351 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142198781 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106741374 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101064996 seconds)
  done (took 15.443475136 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.248011843 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227164887 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201444115 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311976344 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15090748 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125429416 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222498773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180745424 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129398391 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.139048471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.184127474 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.196568713 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183827833 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196488708 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.18577028 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129869033 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119851307 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.181920508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.235867148 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.309664448 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.148973032 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113357743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17107187 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169888004 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.148526026 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.114750204 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.152758112 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150042673 seconds)
  done (took 6.140134207 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116276718 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165656146 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10706819 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155067193 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15638504 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.10061479 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.133958657 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100138189 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142764277 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.11455946 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.132744698 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106147316 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135922417 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109231749 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.129483573 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108465743 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.1401826 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108175296 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133365506 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103290192 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144658446 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.118061699 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136700292 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101520093 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14716535 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131297605 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102515931 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151496324 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137934608 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124721638 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127944981 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10909109 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144218083 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098946617 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.103016991 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132981363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10129589 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131264028 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100502216 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126855738 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.099452337 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.120251997 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101571674 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145200205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106006847 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.127051571 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104557283 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134234241 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106869989 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126580525 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102005075 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101445491 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134909032 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.11089396 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133630904 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.615132445 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.135179505 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102168738 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.138451128 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.101543536 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127766303 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101596984 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136889788 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103953783 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138110443 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105493879 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13136756 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101342647 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.135125154 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106588874 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.132111678 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.109157823 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.126949747 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101645145 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.140885121 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108104805 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133478061 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101189339 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132171671 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099075203 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08786938 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129541017 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087146784 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134250239 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.099121276 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13065119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103149009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134835968 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116572335 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139288234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107591823 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130174621 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101951656 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134444841 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097774239 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133771127 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.116834592 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150520937 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097738251 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127924586 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115317976 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132298143 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097939417 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122092841 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110199105 seconds)
  done (took 14.241917891 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141032152 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.180987945 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130886804 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119093486 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.165905346 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.171777129 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108611122 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13868067 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100666435 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119765396 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13364773 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1089189 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134003091 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114106843 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171639823 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.140601157 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100644939 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144708496 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104783972 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.184514219 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149521317 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.1387514 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170196971 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134156672 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105303154 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.168293077 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.174776938 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113891351 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.14239037 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141510412 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144783613 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.175215207 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172260377 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105135762 seconds)
  done (took 5.875100142 seconds)
done (took 55.398764484 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.224465016 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.41730264 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.186266578 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.182357507 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.232941645 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.224698626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.18736972 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.377525449 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.015515281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.173892737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.182625231 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.183103842 seconds)
done (took 27.697732325 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.220338356 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.349305718 seconds)
    (2/2) benchmarking "String"...
    done (took 1.496345322 seconds)
  done (took 3.960468812 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.187847705 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.188618086 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440717303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.198922612 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.19349818 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.214329852 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.190581187 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.196226333 seconds)
  done (took 15.733858188 seconds)
done (took 25.209714473 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.283567032 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.379574003 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.445755535 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.208843511 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.207414106 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.198700531 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.186482916 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.230325839 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.198269458 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.197367131 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.189247603 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.461568338 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.208314178 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.571147016 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.192555372 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.198564749 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.20400313 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.415853983 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.195401748 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.237136244 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.173667679 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.199141582 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.211301588 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22327495 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.201059072 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.203793397 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.250991848 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.193512061 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.390240916 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.201391323 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.233610899 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.19389237 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.248211185 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.206562933 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301969512 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.230123721 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.383553536 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.194949451 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.181937385 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.196264685 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.386386398 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601833045 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.188480304 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19681786 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.196966284 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.271517948 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.188342846 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.932709895 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.198213987 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.198598531 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.258693972 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.561542132 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.193167334 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.197963374 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.199744832 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.429496027 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.194737288 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.236512701 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.222913857 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.207064406 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.188068972 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.193157589 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.209544362 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.196862355 seconds)
  done (took 142.988828963 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.188579182 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.196207775 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.198321856 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.222101948 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.193262977 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.198768557 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.19230644 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191089968 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.19750686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.227584112 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.19345483 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.201774154 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.198431276 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.200893858 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196369043 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.215979921 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.208489774 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.189468032 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213724159 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.194365953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.219179643 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.195429392 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.210501599 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.194524367 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.23065832 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282089003 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.238911617 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.199599268 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.204175789 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.197415619 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.240040504 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.265791779 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827500975 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055372558 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.209996157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.227631471 seconds)
  done (took 80.133687021 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193812148 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194513034 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196276887 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192592711 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227598181 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19374263 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78621065 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797451604 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.930999681 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.421153902 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.621218837 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201598436 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470115529 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19355888 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286430003 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211670832 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194168439 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211914 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220377026 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196831488 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197018541 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792394238 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216341501 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.327710907 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.399847899 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215778424 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229547235 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59920376 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194822358 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239015891 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.299980567 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534212657 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246261904 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195350471 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.571212428 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310750357 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199297461 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228797478 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197196923 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483064177 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197386908 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196303317 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196564804 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196906772 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.864054539 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198094026 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795384462 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202623961 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14988466 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200563982 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.1988185 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.33506368 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.865211337 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210537621 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196980183 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19983927 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201448059 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19756034 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200798475 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231456604 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.316258748 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315188152 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198474405 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200374635 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229726803 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197261991 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.217759449 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218101728 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.998575642 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282131767 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.41258535 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790746912 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206199117 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295328017 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319836486 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194713624 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198508592 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198583556 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198997132 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309969707 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198813455 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.630590934 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378647112 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214135739 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.617577851 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303134993 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202670396 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611656152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204018437 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199898111 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959467888 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298415905 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198544029 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198983426 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200265291 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.628042868 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799420525 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.464218108 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207397934 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.613733599 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205112534 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.638734228 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.771539154 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.878179524 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200017649 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315807833 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377673699 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22149167 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200706486 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.575395862 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200826316 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262314322 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201900829 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600141289 seconds)
  done (took 365.862882979 seconds)
done (took 590.096826539 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.918596819 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.875442216 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.005751105 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.902619634 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.86580811 seconds)
  done (took 10.696130013 seconds)
done (took 11.821818296 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400799993 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407304661 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268635392 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409819843 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240666819 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.427708267 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385672769 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22810728 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310875035 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294971749 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310720475 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268158724 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243409159 seconds)
  done (took 18.325471339 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593043337 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.206175423 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288266861 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56132909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250095372 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558994563 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420927778 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.229668728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410033665 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224098257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219942802 seconds)
  done (took 18.094674732 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558980654 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.208036455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29262816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54585828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247620046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567951289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421456491 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.236442679 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416217546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227143574 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218315576 seconds)
  done (took 18.070663549 seconds)
done (took 55.617147464 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246538663 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377928538 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234589265 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215210428 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21276698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213143579 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219322872 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208836588 seconds)
  done (took 11.058666597 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210336917 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209041773 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206721442 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211413143 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206920428 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207370448 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208329737 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211113559 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205786077 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211917696 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208065193 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205726623 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207019497 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208155063 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212722812 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211111091 seconds)
  done (took 20.473917715 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210027028 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208659619 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207960503 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208158599 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208578918 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207325265 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.20894932 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207137321 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206993491 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211602696 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208194933 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206602345 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209069812 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209615411 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210313289 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21103021 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208345356 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21112811 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214765875 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209408499 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209309653 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208696914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.206660923 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211876977 seconds)
  done (took 30.155833519 seconds)
done (took 62.81766016 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.200977064 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.232753295 seconds)
  done (took 5.562962507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264061082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.272808728 seconds)
  done (took 3.669254323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209173378 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210686606 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21286878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212708465 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211131687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210457556 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212406199 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213575404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.209658894 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211967253 seconds)
  done (took 13.242737887 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208663628 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212024639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206925756 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210290165 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211465329 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208574961 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.212667162 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211370956 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211461341 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205094146 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207490324 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206998436 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208376908 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208940745 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.2116727 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206951321 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21279007 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208139578 seconds)
  done (took 22.90215681 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223658098 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232158464 seconds)
  done (took 3.584940927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.336335427 seconds)
    (2/7) benchmarking "second"...
    done (took 1.2498372 seconds)
    (3/7) benchmarking "month"...
    done (took 1.320520713 seconds)
    (4/7) benchmarking "year"...
    done (took 1.306770162 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.252363417 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.229608819 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.253081872 seconds)
  done (took 10.075914092 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21209824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405343697 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.514868507 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.799908444 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214058288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217083543 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.116107136 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217395669 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218783405 seconds)
  done (took 14.042966351 seconds)
done (took 74.212448002 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.201928368 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.222357342 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.226337666 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.237645309 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.547142454 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.224923877 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.211426935 seconds)
done (took 15.996791101 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.192799111 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19812024 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.196954547 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.211902016 seconds)
  done (took 9.922105075 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210590156 seconds)
    (2/2) benchmarking "read"...
    done (took 1.531276718 seconds)
  done (took 4.869599747 seconds)
done (took 15.923844503 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210831636 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216825545 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.212335433 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214109637 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.209324069 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212366582 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214445091 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21213074 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216539012 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.213352863 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.213103067 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21592887 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210815988 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212377969 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213933438 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213092806 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211446726 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213084044 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212847569 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212857166 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21724251 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.214694766 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210135118 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21390331 seconds)
  done (took 30.242226654 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215863135 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214143448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216321325 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215089608 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211250859 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217647365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215737784 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212688517 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217727828 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218477631 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21526633 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214355631 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.21556855 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212175694 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217698906 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213994815 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216973478 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215777824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214629536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214366356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216492922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214779403 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214483978 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216281795 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.213167016 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215104426 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215327506 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.215134597 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217662143 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21490519 seconds)
  done (took 37.591880175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224331999 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225157919 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219009066 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218772604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218157293 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215217953 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216997083 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215669891 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215094143 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215878528 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217681357 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21680297 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216708164 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218000942 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219323016 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215878452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217205314 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218183758 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216855754 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218402701 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220482329 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219642203 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217588532 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217881991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220353231 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219708538 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.2204065 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218882727 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217574021 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220259828 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218311469 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217423697 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221090443 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219637041 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219092093 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220572337 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223987166 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226520583 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219773739 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219923905 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217469862 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217232933 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216693551 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22083909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220306901 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218411775 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217562283 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21978986 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217664645 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220947023 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220446737 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22109381 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219620805 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.214054826 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215356629 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21413429 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214313066 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215387704 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215544354 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.215278714 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217642662 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216511665 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215638481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216839757 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219408581 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219568558 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214301408 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216945278 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217657839 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217307841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216170259 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215080953 seconds)
  done (took 88.851331439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216872042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214267958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213443894 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213830493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214644293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216469235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214792752 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216926403 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2132972 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216525289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216372294 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215171662 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218601486 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219068707 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220332239 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219799744 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220764939 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218686843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219348435 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220849874 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223307231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215504173 seconds)
  done (took 27.913696724 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218542967 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221504163 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21697346 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221529311 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219073382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218757158 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21763051 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217692212 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217337725 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21386264 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215168769 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216078145 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21465633 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214541915 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214123738 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216124272 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215979449 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217286471 seconds)
  done (took 23.046684615 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214855787 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21476617 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217442754 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216772485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.214751727 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216971225 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213963673 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21554707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.216236395 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214060525 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216949436 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220050596 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218725153 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221860979 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22052017 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216096871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220799742 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217972267 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221043651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217305447 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219560183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222011006 seconds)
  done (took 27.918718544 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224112833 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221174987 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22226953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219138979 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21989004 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225056731 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220780384 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218738776 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221419814 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221608276 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216717262 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218293643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.2176445 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215845084 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215017542 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214897942 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217892776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.214347107 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216823971 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214820273 seconds)
  done (took 25.515888726 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217982233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217996436 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220703475 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218140976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21596977 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218501859 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216952385 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218626498 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219146318 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219540419 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.217031336 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219250081 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218685605 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21877376 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21921841 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220396368 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219991651 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220621278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219140583 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217869937 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219993737 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218930194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218950954 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219182387 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217634077 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219826709 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219539844 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221249041 seconds)
  done (took 35.260761757 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219706344 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220200016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217359866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.216807527 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.218202736 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.216399519 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.218250916 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.216873579 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220513771 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217967477 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.220596762 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221216197 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220477845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.219590024 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221224238 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221242938 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220919547 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.218093396 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218899967 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218762171 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22087206 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221712354 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.221447847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21905856 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219397277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.221423366 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219989991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219708412 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222129682 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219232599 seconds)
  done (took 37.721165224 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.266775689 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267645517 seconds)
  done (took 3.667942352 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.219287879 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221916955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.220926187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219843208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220108865 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221601315 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221975479 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219881658 seconds)
  done (took 10.899556052 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.220358283 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.22267599 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223936747 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.221857166 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22156 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222225747 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229784327 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243154983 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.222361318 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.223017114 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.229073105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.22938928 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.224371543 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222471857 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221633117 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224590093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224301883 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22322913 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223199212 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225190021 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222777922 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22429686 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22348311 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221743546 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.224178592 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233831129 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224998358 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22567616 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223033757 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225537032 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.222116883 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.220561861 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222490253 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.223411356 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22444825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22428627 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230663288 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244014045 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230643442 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223549345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224105282 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.221724042 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224181303 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227196434 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224445772 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223500351 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225152677 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.221238608 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.223158945 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.22585556 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.22818322 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224146227 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22198988 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225186152 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.223581634 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228093094 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24290621 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.225798941 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23203417 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.234908261 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235312964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.24611705 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224787126 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.22240799 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232155587 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248198831 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229400718 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.240443979 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.221608615 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.225019747 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.230322898 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235796233 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248537962 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.223054283 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223490714 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.223572364 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223502238 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224306975 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229616952 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.245556266 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.223652673 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224078624 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235002285 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247110615 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.222767731 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224863353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.225475597 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.223914916 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22514684 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233775634 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.244668509 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225614821 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.223404906 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224108323 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224867744 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226183357 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.224059878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225022975 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.223531496 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226084942 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225380014 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227522141 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233275783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225474093 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226420263 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231326162 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226704385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2246042 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232169121 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226987092 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224925132 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.226833006 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231363031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224061393 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229870925 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.23357296 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227407167 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227313374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227396794 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228636404 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238104623 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.253036212 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229284616 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.22738119 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232547772 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.238440859 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227842125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229606417 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229609401 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22587009 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224903554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.22830713 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.228406182 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.226010044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228054445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228213406 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226860724 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.229591987 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.226016169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228427399 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.227832726 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227410053 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229508241 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229591827 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228735032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228963593 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233235684 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.227048496 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229233694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228355986 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.22532692 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229633149 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228004422 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229098548 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228486209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229528686 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.226631786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.228520867 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230363744 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229986806 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23059485 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.228075989 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233168482 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230755954 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232321109 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228677502 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.227158523 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229950948 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.230690144 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.22837602 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.230641828 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229432729 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.233009874 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238235899 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.22965944 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230302839 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.23177542 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230019776 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231335742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229899617 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.233363743 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.239000869 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229775617 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237005101 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.230776388 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230331388 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232359389 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229105078 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23000681 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231757399 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.23491554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240917599 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242354379 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254281828 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231263573 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.235009493 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231898619 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.235600995 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234730593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231349848 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233382703 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23216031 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231079841 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232417629 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233429061 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231539679 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.231810886 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.232948845 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235056359 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.232807237 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233978691 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.232044877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232651378 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.231513186 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233793992 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232930221 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.231957609 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230986631 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.231426749 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230317561 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.234231544 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.232388604 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237842997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.231403859 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234246921 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233782899 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232218453 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.232220728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.233447521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233235916 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23354247 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239556006 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251101055 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.234228669 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239080247 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252078245 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232582966 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236501852 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.236463774 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.231794034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.23685143 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.242907821 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.234596221 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.235290696 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.235312143 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23432141 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236890298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.239703566 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.232329251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.233094299 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.235691406 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.235286716 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232830718 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236298116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23564816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234657811 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2357807 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235699841 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.235834103 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234607696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.235731054 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.23411326 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235833745 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237967382 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.243582114 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239782786 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234095086 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.235936238 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236972777 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.240382539 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235271376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235926561 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.235868805 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247396329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260498315 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240547892 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25602021 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.237641449 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240086447 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.255106253 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.23981604 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235459444 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236760406 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23607758 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235764018 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.235924715 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236802774 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.239640627 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237241624 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237374453 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.241937641 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.240053936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23679473 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.236858517 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.236900908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.238435776 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236322436 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238637874 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.237918709 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239558578 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235518503 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236899213 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24281997 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256001473 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.237038479 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.236307594 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237815555 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236453855 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.24000693 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.23780688 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.240131629 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.245433919 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.240423435 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.24530499 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.23870678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246747523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.237654471 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.241509719 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.245015536 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.237155743 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.235609212 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.236579909 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.237667 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244931897 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.257395094 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.240243679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.242621708 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23963425 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.239932712 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.240512163 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.238269381 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240360471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2383214 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245114842 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259995126 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24298426 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23981131 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.236779294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238561746 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.239841245 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.238280081 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241953974 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240100315 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.23912019 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.238911447 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.238609259 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.239665003 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.239334522 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.240311975 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23836602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.241219972 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248401931 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.261030757 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243744479 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240294346 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.247477969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240861363 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246384073 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259657416 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.242214976 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.240825847 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242138866 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241032369 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240827389 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.241517287 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.241554162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.241047734 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.245480624 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.239947024 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.242361345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240987565 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.240936931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24025174 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251113349 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264977449 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.243543908 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246312075 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.239633329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242756123 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.245886847 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.242136282 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24029918 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245186306 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253575165 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250071546 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.241176894 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24237003 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241167568 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243003945 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.24407215 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243441657 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.243952681 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243387079 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.240212982 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.241409433 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243867558 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241855417 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242607829 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242483118 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.245959999 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.25151785 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.241244587 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242561715 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240441391 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.245284122 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241548413 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.241726245 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243363368 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24213923 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243828627 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.243393849 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249029824 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.248842544 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244934962 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241896049 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242655563 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242156357 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.242730902 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243779055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242993054 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242824772 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2433669 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242667909 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243165233 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.241838109 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.244938935 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.242460638 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245257343 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24575816 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.250520907 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243593063 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.241479024 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.243376229 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246849505 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241965878 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241839228 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.249195492 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247787115 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.256407965 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252404196 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.247843249 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244429114 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24862129 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251414123 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243378744 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.244738417 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.244014229 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245615822 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24612385 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.247947922 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24578733 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.249895935 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.244675881 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.244359789 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253011625 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.266630115 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243555597 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24725281 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.249311505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.244433364 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243336329 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24680881 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.245067642 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251481954 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264523153 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245516336 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247157349 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243666332 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247216298 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249093921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24750518 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.246187833 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.244842703 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246289432 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246400053 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247645371 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.245262785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.244865347 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.244593905 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.249917613 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.253051204 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.245219808 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247768975 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2464482 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245404768 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247903838 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247347815 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.24463568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244293758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.245228193 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247323876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.247841997 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.249075022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.2463304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247899365 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.248631838 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247635011 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251064764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.25777358 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.255247944 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2462734 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24731999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.247203145 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250038918 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246212874 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.24744046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247008508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248996331 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.249717039 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248590571 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.249591729 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25186709 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263927793 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271086738 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248558024 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.249300466 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251321816 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.250682999 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.248113157 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.250335308 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.250220297 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251950832 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.257954117 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249846364 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254982134 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267938551 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.250382815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.255125219 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252771666 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.257640157 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.251275513 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249189742 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.250560952 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.254439769 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.266206979 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252211026 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260421229 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280041025 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.26858872 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2510867 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.250884708 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249781527 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.249087019 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25126382 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251352957 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251950711 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252482375 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.251442533 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.250871679 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254934839 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250429181 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.253076129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.251897301 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249220793 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.250853552 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250065131 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.251396836 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.252533418 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.251843642 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.250984341 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.252116035 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.251514295 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265472116 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.277147982 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.253193738 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25124803 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.249704036 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255461631 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.254581094 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263725739 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260365409 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.252067318 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.252385133 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.253810786 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253160438 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253091036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.252403047 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250922307 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250897337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.250390115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.264147327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277390464 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.256791003 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253099262 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25330536 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253454705 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25374253 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254919156 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254880616 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.253402931 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256347853 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257396143 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.254255852 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.253603296 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.256765112 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2620982 seconds)
  done (took 739.899403686 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253018938 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251803616 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252285817 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251468569 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251621818 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251990296 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252582558 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253112039 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253054973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251638094 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251996652 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252208637 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253904461 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254429822 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253432613 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251936387 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25400617 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254313932 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252059034 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253280252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253596484 seconds)
  done (took 27.47067413 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256625293 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25302094 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25564034 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256887423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253486318 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256190921 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255148479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255970462 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257326048 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253310376 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256144439 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256449905 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254147078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.25411057 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255607603 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257000751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25688064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254716643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.257899436 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254291355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257604008 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254854454 seconds)
  done (took 28.787657209 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.256981804 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258321234 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256538942 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.255090928 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258509069 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.255566007 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.256987809 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.258874871 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.258776487 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.258850492 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.256776913 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.258745793 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264024267 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.264031859 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.259129329 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.258389135 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.258467392 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.258474084 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258536114 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.256610394 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.262622006 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.277251727 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.256955097 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.256291659 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258015522 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.260348596 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.26026798 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.258519921 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.2600267 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.263871041 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.259902963 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259371975 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260219755 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.258844653 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.259717546 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263712752 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259120019 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.258510512 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.261017394 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.268181596 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.282023011 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.259277984 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.265454425 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.279216825 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.26049865 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.262181141 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.267596645 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.258994198 seconds)
  done (took 61.693432507 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.261902674 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.261683506 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.258203445 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261903369 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.261576832 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.260510607 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.259841176 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260240428 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258094841 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.260270659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.261082005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.259610594 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258650165 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261713444 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.261030573 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259260144 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25963881 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260344081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.260684952 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.259614495 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.261157617 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.262813798 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.263632193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260536151 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262302307 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260269043 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261728631 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.262224863 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.261460178 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.261903724 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263264023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263163932 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.263837388 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.262067602 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261358787 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.264102168 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264124468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262300698 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264466156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.261360761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.264922866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264129475 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.264563002 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264814068 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261949264 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261941527 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261850805 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.262506794 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.262573285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.26462996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.265487266 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.261650259 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265579002 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.262847937 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266248132 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.265427418 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.262830616 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.263365883 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.265100966 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.263487272 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.262728208 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266339449 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264273986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.267634889 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.267713777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265192717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.263638747 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265982368 seconds)
  done (took 87.023189196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26554372 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.265950781 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266540975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266752526 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265790218 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.265289447 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266591963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267266265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267296309 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26757061 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268057559 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267025726 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.266214491 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268350541 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266275887 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266659579 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267589356 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267463952 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267427829 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266269217 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266491916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266191035 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267246529 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266982935 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267565911 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267376124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26796519 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267425333 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267380604 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266729074 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268832661 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268000658 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268372356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268836884 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268017988 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.267114051 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268607765 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268567471 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.267853489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268319774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269121923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267623525 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267980214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270256328 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267906867 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268148268 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268547126 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.268906288 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270612853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269105584 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269637614 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269872097 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268858075 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269052885 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269306542 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271393789 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270332681 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26925624 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270408363 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271705383 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270780071 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271005796 seconds)
  done (took 79.795879222 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271234644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.271192445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268275438 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.26777665 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270939745 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267670986 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270675246 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.271158597 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27069592 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.271366365 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272694925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268060346 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270543782 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271302581 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269793119 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27002835 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268399328 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.269922953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270064481 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269654953 seconds)
  done (took 26.577683711 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.269946264 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271916146 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.270300374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270211733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.271366187 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.268720516 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.271167456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271955836 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270112019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272861207 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272177891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273285716 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270946587 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271287269 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272909564 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271436341 seconds)
  done (took 21.518495988 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.272007389 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272870392 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.272546545 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.271241139 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.271494731 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.271625322 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273982283 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.271386572 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271181722 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273879167 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.273269133 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273712557 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27372046 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.272302045 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271159613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27475947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.272205441 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271538975 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27389951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.273339615 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.272874135 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272150388 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275531799 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274546271 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.272774484 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.273493155 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.273309135 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.271680817 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.272211744 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.275385597 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.272398972 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.272433396 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.272791146 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.272656566 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273946791 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273074554 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.275405139 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.276431804 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.274461821 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.275671462 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276636649 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273801144 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.276436157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273993017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274311567 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276017949 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.273320273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.274265128 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273098721 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.273103962 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.275458099 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277076397 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.276923829 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.277935927 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.276929203 seconds)
  done (took 71.235446101 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277165912 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276131514 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274997345 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27730774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276831015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.274710889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276772555 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276357317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275654369 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277103264 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275091507 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278684309 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275434764 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27758108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274560811 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277149276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274042686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275547568 seconds)
  done (took 24.153828954 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.275122043 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275655238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27776291 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276294482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.276469821 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278154213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274283319 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.27791449 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278185908 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.276347403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275271163 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.277335113 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279416515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.278339181 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276899325 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275984489 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279874805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278419501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275593324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275752759 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27976577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278991236 seconds)
  done (took 29.281683037 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.275739849 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.276068967 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.277112553 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.29341706 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.294408386 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.275673621 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.276167595 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.276780481 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.3006364 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.330180855 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.324878608 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.29536936 seconds)
  done (took 16.680376838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276710971 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279760124 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277357562 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280421148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279993538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277491944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277056779 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277111813 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280058604 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278402661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278667104 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280344008 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280422149 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278709311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280289355 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28032394 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277353546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278744587 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278565517 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280100126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279037672 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280790039 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279895185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278833118 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278653491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279046579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281695306 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280140564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278596745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28133625 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280939131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280624294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282329731 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277766016 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282034969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281665322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27965861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283161554 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282160821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278695517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282400174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282869837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281697121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280023254 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283029179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280652946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279142511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279735992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279914012 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28200143 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282173623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280747232 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282511965 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283734896 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282301979 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284495012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281722765 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281042326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283505408 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280420252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280510359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284182293 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279741184 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281191712 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283233246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281300904 seconds)
  done (took 85.69562533 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281106108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281109055 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281705938 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281274974 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28255534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28201164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282331778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281726589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28176814 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282504733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285118045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282875016 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282343799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281968159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281281391 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282987173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281958649 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284543255 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282483244 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285847987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283241314 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281916601 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282866512 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283099568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282205421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286363943 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282396895 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283238256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28369315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283633906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282593305 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283954207 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283980698 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282683465 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286606284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283255976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284797876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283726296 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28528628 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286544973 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284486181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286496607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284292044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284344183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283038702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284484553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28497172 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282904408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28542538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284336614 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284634414 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285651301 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284531867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286941311 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28457995 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284203613 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285140587 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284739155 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283953933 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28819843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28432041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28343897 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286295866 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283296935 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284172598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283814103 seconds)
  done (took 85.917672874 seconds)
done (took 1735.492842689 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448197347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399991149 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.285028911 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.294712486 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284248076 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.306441753 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.292275381 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284633421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284193376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284074037 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.284843028 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.470883623 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.340255188 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285174064 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284140981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379325221 seconds)
  done (took 26.399960501 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31287626 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29090102 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403380576 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.305946102 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.312698931 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.475543004 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342746462 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.290492808 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460437886 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.329868398 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.285101098 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.312979311 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290761479 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.28235191 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.308053182 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.47536434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.531946088 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.288469798 seconds)
  done (took 28.492389409 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.738466758 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.284908317 seconds)
  done (took 5.215721065 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310319083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292334441 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.292101427 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.291335612 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.281745877 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.283770335 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.290256148 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284573237 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.296819573 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415166109 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293148867 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300846792 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.311690827 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29227488 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.288666421 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.328132332 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.483666313 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.291251848 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.289458816 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296893215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.290535437 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.377694953 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331293846 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.289845006 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415197819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.289157785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293026853 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298509656 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.431283593 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291999872 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289521775 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.292186202 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293631739 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.179357926 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775804167 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298664398 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31616028 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29936714 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.289373478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450090908 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.290878961 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.29776859 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.283910423 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.772066901 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.420654268 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.402296576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.304173695 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290181181 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293568963 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.355164844 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296877782 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.291678535 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333067066 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.070366593 seconds)
  done (took 82.914504455 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.296329613 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.283724829 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461969011 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302835162 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.282716175 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283514963 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.303621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.564663848 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.308522043 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283959234 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.561086591 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839471034 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.311832629 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.319681535 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.129265173 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.334865825 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286078297 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.281222301 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300335047 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.282472332 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824251686 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282937432 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.282788031 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.425881427 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322795496 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769014504 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28137263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.285635873 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.287519019 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.284111704 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782259856 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.301561257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.336038945 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286364184 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.536113495 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647934912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.610391833 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.281441319 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.297490999 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286016264 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.289814654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771585084 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635270079 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.284086572 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297277453 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780969797 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28615206 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.290017537 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.287150799 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527203564 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.281303508 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286155881 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282393462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286957366 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.280524767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360512218 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36216953 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773053134 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28603453 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.283016372 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342143105 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282774098 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285358036 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28409611 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287754411 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632266359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.421613704 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284447635 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.631946408 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776250705 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.301184906 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861492263 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.301600526 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292453288 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.487959775 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288960336 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283449909 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771067448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.29793525 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282591213 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.615103935 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.287967519 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558025392 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.29995788 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284615936 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827866717 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.292849246 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.284151406 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288871084 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288047609 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.286751953 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289556344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.546676756 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.343870875 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.283073892 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.283998587 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.322460478 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283965092 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284881523 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291049124 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845718789 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.312278989 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28486938 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286057468 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285215564 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286213841 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.284037795 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.285013016 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546108878 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285157405 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.287987031 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286003447 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.287146279 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292602707 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410466254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.294021775 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587143508 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.292075573 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286173695 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.28904369 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2852122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346538336 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284991093 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.287794891 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.167676239 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.596008136 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303652137 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.28726211 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28624525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286019889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286907378 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288566367 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.311061711 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.290442732 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021058482 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.318386629 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.304577171 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.286323108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.290746249 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286086183 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292608893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286399087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575503986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545603176 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.424288255 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.287447654 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.287105249 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.019046746 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.352161998 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46541101 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30743556 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287501878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54370163 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.441486608 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.288978433 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.288228822 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.289171103 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542911465 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30075725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587337691 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805161948 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.307016442 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297163551 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.028318107 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002473442 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.288858486 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.289419062 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.562168891 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.304997326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288619472 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.286698484 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289371429 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.288565803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306363217 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.294596081 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.288939297 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.288023731 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406129364 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476744404 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305399138 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291355558 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772164231 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291966584 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289465713 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.296860119 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.292770826 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.288721978 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344027491 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.290562824 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.292556449 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.290938618 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298709918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843520842 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.290584615 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.289150767 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478540795 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955802339 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.308259515 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.299671787 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.290079608 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.169066259 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798944889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330592728 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.588639682 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.298308567 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.328213796 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303445401 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330752491 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800982478 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29314447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289779981 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924763667 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.307058583 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.832483084 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.290738392 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.300825852 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86379944 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307489328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.295878916 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290676645 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29564953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581882862 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.291759952 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.322166534 seconds)
  done (took 487.086270933 seconds)
done (took 631.298649377 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291733121 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291619163 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.284257931 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297151374 seconds)
  done (took 10.368003807 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.302879928 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.29815391 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.299016896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298365295 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.301601801 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.298112657 seconds)
  done (took 9.000453569 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.292147274 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.292893453 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297314116 seconds)
  done (took 8.084568717 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.494493017 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.319640586 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.612121054 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.312765692 seconds)
  done (took 8.941588649 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.299326151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299542161 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.300846467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.302458044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.304717308 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.305995447 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30177167 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.303329224 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.305527924 seconds)
  done (took 12.924186868 seconds)
done (took 50.520985888 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.23633312 seconds)
    (2/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.031100105 seconds)
    (3/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.301188235 seconds)
    (4/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.804744365 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.345518882 seconds)
    (6/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.532290437 seconds)
    (7/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.617207114 seconds)
    (8/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.287689358 seconds)
    (9/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.285640912 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.537304593 seconds)
    (11/286) benchmarking ("sort", Float64, true)...
    done (took 2.312570359 seconds)
    (12/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.294264141 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.336957041 seconds)
    (14/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.318585537 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324173465 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.281505036 seconds)
    (17/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.336031302 seconds)
    (18/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.292548394 seconds)
    (19/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.328572084 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.381653872 seconds)
    (21/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.786608448 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.401621271 seconds)
    (23/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.283100532 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.311686869 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.902463274 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.292135265 seconds)
    (27/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.438756948 seconds)
    (28/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.041092316 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.623061211 seconds)
    (30/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.324252411 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.312922088 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 2.295423811 seconds)
    (33/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.574458946 seconds)
    (34/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.297571948 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.40903521 seconds)
    (36/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.303254155 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.290170252 seconds)
    (38/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.385883568 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.68831959 seconds)
    (40/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.010882493 seconds)
    (41/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.283306694 seconds)
    (42/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.038316581 seconds)
    (43/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.457975619 seconds)
    (44/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.408971828 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.681071482 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185516808 seconds)
    (47/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.284793508 seconds)
    (48/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.304108246 seconds)
    (49/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.292015219 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.292433954 seconds)
    (51/286) benchmarking ("sort", Float32, true)...
    done (took 2.296225833 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.424219206 seconds)
    (53/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.31858951 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136063101 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.407634641 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577928667 seconds)
    (57/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.042379722 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.289202144 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.285789768 seconds)
    (60/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.365025337 seconds)
    (61/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.298637329 seconds)
    (62/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.289437204 seconds)
    (63/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.43949682 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.298396829 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.317066308 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356641065 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.297365688 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.300726818 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.285399659 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.317902601 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.284047173 seconds)
    (72/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.866126336 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.329714973 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.284480776 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.313973633 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.296492576 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.685335217 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.320252234 seconds)
    (79/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.640812659 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.313215033 seconds)
    (81/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.159333537 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.173174181 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 2.297375435 seconds)
    (84/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.3267593 seconds)
    (85/286) benchmarking ("sort", Int8, false)...
    done (took 2.297326955 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.298611569 seconds)
    (87/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.416363996 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.291746718 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.12050599 seconds)
    (90/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.309556684 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.289049123 seconds)
    (92/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.890084314 seconds)
    (93/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.330130072 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.301210379 seconds)
    (95/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.353475714 seconds)
    (96/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.117398363 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.322749078 seconds)
    (98/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.422801208 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.288892064 seconds)
    (100/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.460493005 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.308391097 seconds)
    (102/286) benchmarking ("sort", BigInt, false)...
    done (took 2.300910562 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.365185045 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.30879038 seconds)
    (105/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.300340745 seconds)
    (106/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.288454754 seconds)
    (107/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439965455 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.288449076 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405517568 seconds)
    (110/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.294229983 seconds)
    (111/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.289212559 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.295373547 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.289421361 seconds)
    (114/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.876597603 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.511968442 seconds)
    (116/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.302855384 seconds)
    (117/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.326325643 seconds)
    (118/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.387049223 seconds)
    (119/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.501964841 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.408088785 seconds)
    (121/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.869594908 seconds)
    (122/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.29345621 seconds)
    (123/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.821016127 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.305437623 seconds)
    (125/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.377553106 seconds)
    (126/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.139642516 seconds)
    (127/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.403513085 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.300242619 seconds)
    (129/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.289155717 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.817128805 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.327492548 seconds)
    (132/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.289650263 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.580868646 seconds)
    (134/286) benchmarking ("sort", Float32, false)...
    done (took 2.300557542 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.329268239 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.299973542 seconds)
    (137/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.314233677 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.115847663 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.033994097 seconds)
    (140/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.290610225 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.564673761 seconds)
    (142/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.312256915 seconds)
    (143/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.630814309 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.914562311 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.319655268 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.299513608 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.295279407 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.331905378 seconds)
    (149/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.627173088 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.419385149 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179867441 seconds)
    (152/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.290003047 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.370787199 seconds)
    (154/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390117636 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.31522371 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.039451537 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.331377855 seconds)
    (158/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.290720437 seconds)
    (159/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.237811057 seconds)
    (160/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.63973869 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334930748 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327702819 seconds)
    (163/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.290651052 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.332264589 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.306259944 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.32995361 seconds)
    (167/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.386513355 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.303222288 seconds)
    (169/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.292706939 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.359970973 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.255282636 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.134116507 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.303822221 seconds)
    (174/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.291580908 seconds)
    (175/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.306482199 seconds)
    (176/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.416378166 seconds)
    (177/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.292309289 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.299783141 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575873488 seconds)
    (180/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.424344553 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.304877389 seconds)
    (182/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.33605488 seconds)
    (183/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.347473251 seconds)
    (184/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.322042536 seconds)
    (185/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.307837719 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.293196719 seconds)
    (187/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.347424261 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.392652452 seconds)
    (189/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.305333181 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.337917033 seconds)
    (191/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.303820448 seconds)
    (192/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320127726 seconds)
    (193/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.204071551 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.322487898 seconds)
    (195/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.349296805 seconds)
    (196/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.389767918 seconds)
    (197/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.318672121 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.038562014 seconds)
    (199/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390802792 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.18671144 seconds)
    (201/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.307068604 seconds)
    (202/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.333246769 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.848158341 seconds)
    (204/286) benchmarking ("sort", Bool, true)...
    done (took 2.306419203 seconds)
    (205/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.366782472 seconds)
    (206/286) benchmarking ("sort", Float64, false)...
    done (took 2.305484824 seconds)
    (207/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.642218861 seconds)
    (208/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328314704 seconds)
    (209/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.295359945 seconds)
    (210/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.334131137 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.298166055 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524925759 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.295139297 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.30714009 seconds)
    (215/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.294929226 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.137508912 seconds)
    (217/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.294862205 seconds)
    (218/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.321521893 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.304221532 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.331689952 seconds)
    (221/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.29553345 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.324917596 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.704305238 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372618023 seconds)
    (225/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062914433 seconds)
    (226/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.33487557 seconds)
    (227/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.028872872 seconds)
    (228/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335813031 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.791515271 seconds)
    (230/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.295326225 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.296638055 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.297979099 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.311024983 seconds)
    (234/286) benchmarking ("sort", Int8, true)...
    done (took 2.309097998 seconds)
    (235/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.299836763 seconds)
    (236/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.299204539 seconds)
    (237/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.367834658 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.767128482 seconds)
    (239/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.514624009 seconds)
    (240/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.354098468 seconds)
    (241/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.307765265 seconds)
    (242/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.378908579 seconds)
    (243/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.297420006 seconds)
    (244/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048259738 seconds)
    (245/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.336254711 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.514932559 seconds)
    (247/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.318422564 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.340126758 seconds)
    (249/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.297321514 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.719476632 seconds)
    (251/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.317954277 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.416083422 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.29789669 seconds)
    (254/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.376100233 seconds)
    (255/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.207483063 seconds)
    (256/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.324397206 seconds)
    (257/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.311930845 seconds)
    (258/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.311108082 seconds)
    (259/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.193066815 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.635920842 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.329550801 seconds)
    (262/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418615339 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.307960734 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.404471505 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.394719101 seconds)
    (266/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.300394226 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.430256677 seconds)
    (268/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.297600364 seconds)
    (269/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.331145343 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.312669608 seconds)
    (271/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.299296985 seconds)
    (272/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.821615127 seconds)
    (273/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.359293948 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.376271797 seconds)
    (275/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.440071659 seconds)
    (276/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.299092115 seconds)
    (277/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.453843825 seconds)
    (278/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.299800881 seconds)
    (279/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.312287117 seconds)
    (280/286) benchmarking ("sort", BigInt, true)...
    done (took 2.311409385 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.335855883 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.132677354 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.321468531 seconds)
    (284/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.417235569 seconds)
    (285/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.833726945 seconds)
    (286/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.495161201 seconds)
  done (took 556.765794265 seconds)
done (took 557.968760021 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.344185573 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356697273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.322178104 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.343789864 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.436269846 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.499750249 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.332417212 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.323583596 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.370899801 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.373466376 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.322115345 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.499025926 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.32492119 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.324139422 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.322645577 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353723003 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.325986991 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327257602 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343042844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.332761366 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.340715601 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322832652 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.373127349 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.501869925 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.328448673 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.327650952 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.329173127 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.344280974 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.43886875 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.329559543 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.327607946 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.335884433 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.326861486 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.325839487 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.319225915 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.343500515 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.335170967 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.333988927 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.327752999 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.357059591 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.313776735 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.341019312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.326500194 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.325796006 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325104719 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327249744 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.327058427 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.330547034 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354629079 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355430287 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.314054921 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.344142506 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.329731654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.324896022 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335502556 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326324602 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.32767076 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358882339 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.345995206 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360382632 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.316880074 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.332238842 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.328560461 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.343465672 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334917542 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328547108 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321341945 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.328846359 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.317399731 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.347853997 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.327879778 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.334359692 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.327344157 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.341512147 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.35865622 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.330192295 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.326586031 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.327873334 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.335662656 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.326479833 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.336947745 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357881328 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.333056332 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.328468836 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356615644 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.505993572 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.337424978 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.328559047 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.336302373 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348204109 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33706603 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.340246137 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.331991368 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.324278488 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.337276399 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.331998952 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.332854342 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.332953714 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.333826012 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.339816978 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.318099811 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366901426 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.326303355 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.324963301 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.327553651 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.344209271 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.324970769 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.333171158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.350845502 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.3763325 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.332204362 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.322337942 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.338655757 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362252094 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.337422859 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333028249 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.323016608 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.323004255 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.333587442 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.347466941 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.330575152 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.329345591 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363984549 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.33145992 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.327272077 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.32080827 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336645655 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366266669 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.453792401 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341422562 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.362116997 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.329788675 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.333534044 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.364780748 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364205453 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.363247493 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.333617885 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365532664 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.348914959 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.328194387 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.342243114 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.34198961 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.332815389 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.337497482 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325353263 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.363346849 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361278355 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362295993 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.353284918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.453361999 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329990074 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.327277802 seconds)
done (took 221.591539884 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.392212724 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.327992532 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.431386717 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.331282588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.430392867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432885593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329558956 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329703449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.328253248 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709941946 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.329398557 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329946593 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.329167768 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329178034 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.412874881 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330781803 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.328592047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.671200999 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.330217906 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.401988107 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.330336139 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.329755568 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331263558 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.717786337 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.328002091 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.328623106 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.401023545 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331042751 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677923506 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.324837593 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.327713522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678092569 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.421157752 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.348320382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.342026154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338521064 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.432558372 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351257086 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413401189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.413592467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432746167 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.369689947 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.327673141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.325074392 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.333054571 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.332933508 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.330442738 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.35981482 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.331168065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330602704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.673952675 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.342901378 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.340102054 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.331047714 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.331189852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.351165834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331303311 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.332720924 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.422570174 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.333704626 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.395326335 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.717813988 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.712586843 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.334231425 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.331188164 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.332408333 seconds)
  done (took 104.322561976 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400056545 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.407105636 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.444931083 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354982433 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38619386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.448394263 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.354693637 seconds)
  done (took 11.030368686 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.339914936 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.334735045 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382719273 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382912527 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.332739088 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.54868215 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335177131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.344003522 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333102506 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410419373 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.335711944 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336524635 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.341944616 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.33013697 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381184695 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.346209005 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.449643901 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.334633006 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335369803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.48553785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333972225 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.342233182 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409593841 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.346321167 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.338139903 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.342171189 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.291188494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337124758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335288503 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.337290461 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334519355 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442958214 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337982823 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.334275124 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334923966 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49591657 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.335767072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33411473 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.337652313 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.337135551 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.337420107 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.336879446 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.337004411 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333780991 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336624967 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.360620023 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.336907797 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.337601134 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.336192531 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338125418 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41168113 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338062529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.335893446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334788546 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414649619 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344973991 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338536731 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.336613394 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338615487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336437693 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.488058264 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384779554 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338653641 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385746681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33956791 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339790246 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338918193 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.338542996 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43063022 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.339590984 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385380061 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.335697131 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.560468995 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.361459623 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341221127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.341005437 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.340399819 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339127202 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.335804756 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.344968953 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337621943 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.338814469 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.345007085 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338259772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336694252 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52498951 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495454875 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.337694085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353388045 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.346114131 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.338095528 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413379241 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.340922817 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339557279 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39073719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.454984982 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.415616236 seconds)
  done (took 138.476494912 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.345316105 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.347614993 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.343048909 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.362309115 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.341491267 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340499257 seconds)
  done (took 9.319637929 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.343535404 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341984389 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.341552433 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.341226868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.340630647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.342467188 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.341795478 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342725788 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343965807 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341700793 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343338443 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.344273521 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.343431907 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.3420813 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.342434034 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.342350404 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.341407696 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340703286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.341585445 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341917439 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.340309183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.341753818 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342144557 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.342743107 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348055797 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.34384398 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349410936 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.343623273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.344388735 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.351385967 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.363086294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.344027388 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.344802064 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.34893408 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.347302975 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.344824068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348101174 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.34660367 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343012699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.344322025 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347037701 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344088656 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.345474632 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.346444911 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.34761222 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.348220382 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350822842 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352724913 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.345009401 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.347950986 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.346784585 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345527676 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.345347035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348145536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.347675882 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365785123 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.350630979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346247211 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.345660426 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.345944723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.346573261 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.346552603 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346643946 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.349088241 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344091389 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.346719533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.346386334 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347565246 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345746838 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.346276488 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.348787125 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.344783138 seconds)
  done (took 99.132117724 seconds)
done (took 363.50915156 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.773986859 seconds)
  done (took 4.016928625 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.468860375 seconds)
  done (took 3.714470178 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.452652308 seconds)
  done (took 22.704829193 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.406391329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.369295107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.349894796 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.342286039 seconds)
  done (took 10.713140518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.572854725 seconds)
  done (took 3.818073846 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.347107782 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.340622619 seconds)
  done (took 5.934307596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.624308281 seconds)
  done (took 3.870101615 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.755581544 seconds)
  done (took 4.005524861 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.340688479 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.356881743 seconds)
  done (took 5.952391458 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.340522936 seconds)
  done (took 3.586064449 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.35368177 seconds)
  done (took 16.600114976 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.350390054 seconds)
  done (took 3.59923348 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.37676776 seconds)
  done (took 3.622433056 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.900905229 seconds)
  done (took 6.146196607 seconds)
done (took 99.527292491 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.340107429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.346044031 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346291965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.343299943 seconds)
  done (took 10.621481257 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382514277 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.382840757 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384711458 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393160165 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385895086 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382101827 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.375128582 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.375404777 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.393799598 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.38508614 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.384408881 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.386657764 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383485441 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374032195 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.385901388 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.384726512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393219383 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385012195 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.375814522 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387513018 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351605348 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394246499 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.387529522 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.350860333 seconds)
  done (took 34.412704005 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.844334523 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.418735481 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.502585696 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.401401805 seconds)
  done (took 7.414564074 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.403773168 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.403931449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.416333264 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454276358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.481647537 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414232132 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.37408433 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.372497324 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358341659 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404636342 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479766812 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421049965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.495919165 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.350775724 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.538169409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.351063158 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.351619755 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404017706 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.454967048 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.468081704 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.35168149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.404124943 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410359452 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421270244 seconds)
  done (took 35.236141198 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.351493792 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.370300398 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.352365535 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.349749656 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.359351088 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.350661918 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.351611411 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.352572071 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.351947533 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.87484624 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.355119436 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.364139051 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.859160498 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.35607359 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.357829799 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.352944466 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.869856086 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.863091194 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.35757478 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358072939 seconds)
  done (took 30.408053053 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.344548813 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.343627392 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697631898 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.601430275 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.345658201 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.349391957 seconds)
  done (took 13.932559237 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.421500175 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.584120179 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357293574 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.706714677 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.789604961 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356955387 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.353854614 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.601076425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919663553 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.899452617 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410206324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.423929912 seconds)
  done (took 20.075635973 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.346861998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.350327772 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.35021445 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.368555062 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407004919 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375969921 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.360842386 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.34643477 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413548763 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.433185905 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.378222297 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408351601 seconds)
  done (took 21.791546986 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436996372 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349009582 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348638418 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401477781 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352955507 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561462929 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398442125 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066490174 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.371188265 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623323474 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358458765 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438242336 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604894903 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360206424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354639175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337239181 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577095207 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863148693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355578418 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349297275 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379395142 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349148863 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353998179 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573585678 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351053509 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350304896 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.612355515 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350788665 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634800274 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370619367 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361725182 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349999384 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6267387 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017005225 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467084744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564994737 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377302792 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375330282 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.35499275 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.350486058 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359051969 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353890228 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36334075 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352896203 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351217962 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364035692 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077875061 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.376957697 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.350311782 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35180657 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610703504 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453157749 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.356712232 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352094636 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456248174 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35695729 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.357258211 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34996115 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936523255 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358971601 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373410038 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.357668189 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37208337 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376003602 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977495036 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359856242 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357141501 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357346281 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353681651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353873627 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372799712 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354187327 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.380246625 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353894079 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075282391 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366136444 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356652097 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916996706 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369315356 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.359919033 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583636954 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354632865 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353686696 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.352827059 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355467991 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074418317 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364600706 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.340957029 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376096991 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07757409 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592511346 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37383212 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380286162 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580696397 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.341049645 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355644991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.35614026 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376701804 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377314403 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085725046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375173844 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359954157 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613205519 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569083763 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357600539 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.360206064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840522654 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375425022 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.377822793 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369702161 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57810568 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.965727845 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374025447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369425376 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377919924 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356130498 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112215981 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356905071 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.46378403 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370789663 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627382745 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.156740325 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358568416 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425163077 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360325586 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35879116 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364316812 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360696171 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358499311 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.564791405 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382079936 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.373899669 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.358365438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3590582 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.360495872 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363131446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.359929666 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583859404 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359463787 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641260174 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360149731 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359921566 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359125592 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582827733 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.371572913 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.701781289 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620139693 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361829575 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367878423 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376971361 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37881261 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4614189 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382586829 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.371010595 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620613818 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.364042494 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.364860921 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361672539 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361770344 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362114401 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365398892 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388802833 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951610785 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34062856 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369692316 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251240455 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.37525391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429044876 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36724869 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57907788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.367965596 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372308275 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.371671015 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.358669648 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589003702 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371649128 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361606768 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441912629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.843777251 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968235306 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380448075 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.360631329 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.359211864 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.358896544 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362509857 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360688541 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362608888 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577725757 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376506095 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36290121 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979776411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368185721 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364678958 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.36852638 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374992804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.368505287 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362913294 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.371596117 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367267012 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397265418 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380248781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507089655 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378459384 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364386654 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881096381 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370073595 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362471241 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36355914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398470014 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366379336 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178421489 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623281828 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391380347 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645784218 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376450236 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.384774875 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363384653 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364167513 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393247673 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.377568088 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378424305 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.376712454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367886702 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367124968 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939791971 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145432877 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908387669 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367381329 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.374324426 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370681456 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087323223 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385084306 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36592738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604551118 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106021965 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385264238 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851399308 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.382554381 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134324103 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631791136 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602233144 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366919771 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.380926913 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62847456 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585177413 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401762884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376955014 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371287157 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.35318402 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931778891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392339692 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445743917 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091727901 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385228618 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387084101 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.425502409 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.374800696 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781869513 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385593123 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366961268 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379586605 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37389334 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181948078 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374807539 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36664882 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002855141 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372414638 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.856391771 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387000083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587292034 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.380457022 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373268038 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.365137576 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.378316489 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.626876393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629019142 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37366439 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371321953 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93548759 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.230110582 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.374787906 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368001019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13026178 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380999221 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659664425 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.376174463 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.371351442 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392353775 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37012448 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368110706 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.367854027 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375476445 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346118506 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873921637 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.400093942 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401228087 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378948668 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219340568 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627651287 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383883364 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964937986 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601859859 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37026352 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398477363 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.374389922 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372234729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.363527429 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371854461 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606348964 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44474509 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599493624 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370899266 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.358727874 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426476004 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5882915 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370640284 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380321364 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620807631 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.370337584 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.386407338 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137999152 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402172595 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374089639 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378674044 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403196745 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39422354 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447589168 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593046575 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.385802654 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383771151 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790432645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393973336 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379147336 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38763422 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467583559 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372191537 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.37706102 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.147543025 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9755226 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135210275 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99995457 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641355517 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380733389 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376647332 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373948177 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522713141 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374090851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648046407 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374188204 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399292823 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421432054 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384913004 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384305094 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592350395 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650829743 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374444585 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389840133 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380634364 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.374415435 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385275597 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.585689213 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883770502 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939622801 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377346988 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379177019 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117750203 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668763645 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375398006 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375624505 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375779053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.393828069 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384886521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.381371624 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390447154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527723734 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636124344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052925629 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.405188354 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.403597152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149942162 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390663594 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636721608 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372983866 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604610986 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973597624 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094509922 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645655914 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447092559 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595755533 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.377348859 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525304121 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.380389244 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38169042 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377509433 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223445149 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.375042223 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.386849827 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003750815 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644968353 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381629481 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.379925628 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406455925 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.386961502 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601595135 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113733311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602977076 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388346318 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384909256 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37820085 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000754419 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644845338 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384205265 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382386905 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623816741 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379402882 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404195817 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867364013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.3762479 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947982401 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35179482 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400332939 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378696084 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139623183 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005890162 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.377941814 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900107454 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381546848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380116787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660154394 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.384775599 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392223766 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660622017 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.383991658 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382765225 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607600526 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.976524785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158597596 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.399712938 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38619767 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.386145648 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381637254 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452725494 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384236625 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387983509 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.813096647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401535902 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380364204 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394148687 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.385728811 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385465913 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.400283318 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382139462 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.38723806 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.370252058 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.374745976 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388432868 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38409318 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956273039 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407984092 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.049041169 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.713903195 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637358289 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393542039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.372604964 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386729092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382752474 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383018547 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382921476 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394439542 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949826006 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.398127727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.397908751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385935646 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598926596 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595409368 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387154958 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605471431 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391497938 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402974392 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.368078946 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382534227 seconds)
  done (took 975.782394892 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420792758 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.392603061 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.408108785 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.469423069 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.452687162 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446014524 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.456523892 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.498480405 seconds)
  done (took 20.828237139 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.384099022 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.397711869 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.394742646 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39795517 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.395083453 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.870644857 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.409758525 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.391963775 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.394486965 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.395742249 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.389303268 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.083567646 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.41451388 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.396643866 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.392033382 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.391656645 seconds)
  done (took 32.791304449 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.376618064 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.530234438 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.351274706 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.434461462 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.389577501 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.400962766 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.620398264 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.410149183 seconds)
  done (took 26.799640973 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.395957298 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.395330298 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.396070581 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.395126886 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.396210862 seconds)
  done (took 8.263483644 seconds)
done (took 1239.604624833 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.389563383 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393511319 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.390010057 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.393125161 seconds)
  done (took 6.85210626 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.372512144 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.372972742 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.373746456 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388849454 seconds)
  done (took 9.793041971 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102017009 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043312359 seconds)
  done (took 5.431585464 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.387472356 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.156104348 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.123302116 seconds)
  done (took 7.952732073 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688241699 seconds)
  done (took 2.974477451 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.795182219 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787823824 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581801534 seconds)
  done (took 6.452343599 seconds)
done (took 40.741717759 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.38610308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.635803921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.542800444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396754685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.546220941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.542433806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.126141283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.38671813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386315148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401757604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.397224668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.547895175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.110670207 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.635394208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.111131984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.635915217 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.549464892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397198359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399247619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391713498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.126536208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400996674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.394467424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398340086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.551702527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.533247743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385612239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.638295792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.387509363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393107875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533089829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.40072852 seconds)
  done (took 82.959289588 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386744226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.404224616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.402516602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391598442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.387211317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421663801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.387702172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388318788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388021644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415323158 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391456829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.388924311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.389163554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.388254531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.403322945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.388141413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.404033181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387354791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.389242514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405074441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.390575815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388038597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.38823731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389136433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.38793763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.400497415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.388003624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.405674893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407295953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38975552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417557852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.388359498 seconds)
  done (took 77.939131208 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.389001137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.388388735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.389668952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389327224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.393052671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394770936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.390618871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389562054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.39048017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419592395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390535275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.392161751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39139529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.390351261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.391054428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.391468838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.391739811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408811729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391359322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390908139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.407671746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401247153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401557277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.40316999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.390236674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.409468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.391800889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.391063671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391610459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409547099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391864499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390992293 seconds)
  done (took 77.93564427 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.586900009 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.399709704 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.399882824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.356745645 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399139683 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.398063021 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.392862622 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.589258853 seconds)
  done (took 14.815377302 seconds)
done (took 254.936016707 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.397433142 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.404153468 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.605092988 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425725897 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.402145315 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.424325345 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.420373473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.618699571 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.393322923 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.644286319 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.426683596 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.419847958 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.393279365 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44123336 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.677232692 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.549910494 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.297551806 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.400808857 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.743016857 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421993163 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.670293982 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.400712241 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671740281 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.37018562 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.424100253 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.393849074 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.396308461 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.300237233 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.444367049 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.744700954 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.406928283 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.387033449 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.488993361 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.501289115 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.616417722 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561511687 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.400045564 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.502617098 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.618142472 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.401618932 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.396029403 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.203175077 seconds)
  done (took 84.101576756 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.400588946 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.525537657 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.4026962 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.403724248 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.403523932 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.530352404 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.503894869 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.402799681 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.403387794 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.401205814 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.402643665 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.403769517 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.402841166 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.404832675 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.404223617 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.404049078 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.403596415 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.404088048 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.404423744 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.450754574 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.533467799 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.427552215 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.398592052 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.402989037 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.512302178 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.548627799 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.403151355 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.398712954 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.449045177 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.405885394 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.407750763 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.452990154 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.405314484 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.40512678 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.52734966 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.510657113 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.427538235 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.404062716 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.527728671 seconds)
  done (took 57.307801965 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.406626532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.650409937 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.83384768 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416597224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406157631 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.409634701 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.484273112 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.414448968 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409620672 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.410063979 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.56154741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.41534474 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439994054 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.860648663 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.409976704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.408379216 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408272985 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.408225989 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661870309 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420006856 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.506565898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41530796 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.485907806 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42153911 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430104926 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408948691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414141827 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.974656691 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.416629538 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.563934905 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.209620629 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.487328077 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.924807946 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.854141752 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.214303402 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415853479 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.410657577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.569054828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.417855184 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409825922 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486879423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.414898936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.840203363 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.077385265 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.431086807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408876285 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.993930187 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.571190001 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.659859011 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418552022 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.870986615 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416353198 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412435128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.409474939 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.655881445 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.418271613 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410133946 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.979100975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.432472217 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.487805495 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.412248476 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409912694 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670466821 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411357519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.658470248 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.413200406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.418694627 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431724045 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.844205852 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.414521146 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.094638144 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.431873037 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410850032 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.567907465 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.660783184 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029438728 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.41439277 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.673825466 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.933206259 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.491612825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.415852618 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.964396359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.496034783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416181254 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.414756468 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414258858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414538268 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.45799862 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.485728571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.028378791 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.088738983 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.010540814 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.511534298 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426072613 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.410935199 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985997948 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43631391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.41345722 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.838965749 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.097729076 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43097404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418229224 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.097737723 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.437268459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.492136393 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419235731 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.851820456 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.41541383 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.457966931 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.41470949 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.420043734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43682764 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492515673 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418181003 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414077015 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.075459907 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.597073213 seconds)
  done (took 185.69655946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.422906457 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.407577604 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.41945284 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407041789 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.407753216 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415982242 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.406501942 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.406637281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413296723 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.406090633 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.40668352 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.409198461 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.408416066 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.414253366 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419421654 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.413960165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.407373849 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.407607873 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.414631869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.407809055 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.406679922 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.431761003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.408244563 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.407504218 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.40834199 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.407860486 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.413954606 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.409557521 seconds)
  done (took 64.823462726 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416567433 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975069069 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.418120363 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.547244041 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442772329 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415072659 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.545503685 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.477248304 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416828028 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.414538627 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.414835598 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.723499582 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.4232478 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.935871918 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612856356 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.569911638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.932367149 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435500635 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.414434147 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.414670045 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.547883408 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.43145108 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.72410077 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995896443 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.42368621 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.988247219 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.413628945 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.418481122 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415415546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.991856616 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.421442776 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.727357848 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.500582893 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477320831 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.996314872 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.938277511 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951448302 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.567984675 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.418280077 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.416601581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.415650728 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.408520206 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.980473281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419630505 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417366431 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.982288771 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.440434488 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.42044055 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425518474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416741839 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.477401261 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.48339119 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.733854244 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.005901511 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.501239808 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.431768087 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.548705322 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.826111818 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.424853438 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.942106227 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431936649 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.994395644 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.444755316 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410781815 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.419921928 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.424746866 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.569097448 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.551291689 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941297219 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443933546 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.932654328 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.58732815 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.419258335 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418928503 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421983007 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.988105364 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.935280903 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.58873329 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.553756633 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615391913 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.417546336 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.419076955 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410923571 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.496766927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420488247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.998877687 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.957356639 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.441315162 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422436507 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422774525 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.423439615 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.596181616 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.020869427 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.502764394 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.936747194 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.752942703 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.736895112 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430146298 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483503208 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.440707835 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.728753502 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.427890965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479293799 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.914631817 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.738217858 seconds)
  done (took 168.839127152 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.665324077 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.433132127 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.512645728 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.569212802 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.033105802 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.005987657 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.416797278 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546653823 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.537700034 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.68042173 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.431681372 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.511613524 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.642037569 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.498628242 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.134281998 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.490570332 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.515600901 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.569860104 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.563808615 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.420665964 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.08083532 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.732799481 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.613900202 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.441344927 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526012161 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.217391426 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.007542586 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.958933191 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.599449943 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.423451398 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.950651876 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.423149715 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.360837133 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.119025277 seconds)
  done (took 65.950827515 seconds)
done (took 628.011964295 seconds)
SAVING RESULT...
DONE!
