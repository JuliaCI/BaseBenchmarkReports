cset: moving following pidspec: 19093
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.966741475 seconds)
loading group "string"... done (took 0.515444703 seconds)
loading group "linalg"... done (took 9.380964694 seconds)
loading group "parallel"... done (took 0.17049823 seconds)
loading group "find"... done (took 4.058708258 seconds)
loading group "tuple"... done (took 2.055537097 seconds)
loading group "dates"... done (took 1.381735734 seconds)
loading group "micro"... done (took 0.197169977 seconds)
loading group "io"... done (took 0.513884877 seconds)
loading group "scalar"... done (took 57.891890569 seconds)
loading group "sparse"... done (took 14.093693447 seconds)
loading group "broadcast"... done (took 1.317895488 seconds)
loading group "union"... done (took 10.638254566 seconds)
loading group "simd"... done (took 3.614178304 seconds)
loading group "random"... done (took 14.00176613 seconds)
loading group "problem"... done (took 2.228036358 seconds)
loading group "array"... done (took 24.202626416 seconds)
loading group "misc"... done (took 1.15327781 seconds)
loading group "sort"... done (took 3.810249339 seconds)
loading group "collection"... done (took 22.036729377 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.695274641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147998126 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203931745 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204634593 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276392238 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166268365 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155812984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169707706 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.661593452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212578625 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138334204 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430622026 seconds)
done (took 6.214964171 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30929502 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061302657 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169120695 seconds)
  done (took 0.931739925 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091834169 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159043984 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10933757 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096194337 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094540513 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.168494646 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093407401 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108790648 seconds)
  done (took 1.524523193 seconds)
done (took 3.551834696 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502123853 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.996923238 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.546195331 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.179164929 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309405054 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308484523 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268168317 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221299846 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091233568 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085473672 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172532277 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.46190462 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.400673092 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.007020605 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069656177 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109804201 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.135510716 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.854418469 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079919243 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110777555 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.540032364 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213949012 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116677063 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106703275 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187271389 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133651912 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139738489 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102965466 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.720030548 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134907626 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215793897 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083026217 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137999182 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165296308 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221353073 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11027448 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.750472016 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201577825 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09878013 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10055678 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.741817111 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126137231 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208331748 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105789441 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068834062 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168105785 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101711284 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094134652 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094519387 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086090042 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173093743 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.508939217 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104649849 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191140756 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093264336 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.752245914 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097579905 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276775032 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126827206 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095620068 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090425051 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090239446 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16812658 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095504116 seconds)
  done (took 20.782580588 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.172708618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.190321795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078513358 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162286788 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.130018214 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099305664 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08987207 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07882849 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132017917 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183198697 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1443639 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193436198 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076228296 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090585797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169926066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23876958 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129328183 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105574195 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089320297 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111934456 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127342682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115026557 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096945385 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097478563 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173142151 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20625014 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111054346 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122142814 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089725796 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09951218 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143632052 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152994418 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094335685 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091040454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177579717 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125591779 seconds)
  done (took 5.410124632 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235151163 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103121374 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250747798 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19772232 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133129931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.201640526 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175470988 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303918685 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.240661849 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.107538016 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162980952 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128245847 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096353837 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096207056 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080846273 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079894799 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.843077198 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152096507 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.170637813 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185340487 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115659947 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081838732 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.718209756 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101400206 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08691922 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112328589 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066037083 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222062463 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094277724 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.487408819 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083071828 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117098092 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129948588 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194234632 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.176814832 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124352822 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120782187 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113372571 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086895307 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216773277 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11926874 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079657247 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079010561 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132345584 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115347302 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108538319 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125952481 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.120275561 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103212028 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111372119 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.102603882 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193629108 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144724775 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104078527 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270744309 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128865944 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101559657 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.11103195 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.80986855 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137380431 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083702466 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09707441 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095762217 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078086391 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.826437981 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108985633 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.561071407 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083243868 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160284104 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097658616 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118960199 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085781109 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101158738 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111088243 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086744445 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095780741 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087267321 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080256297 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107189762 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114287404 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099351079 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081480766 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146892286 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097742553 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.12396266 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109130988 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105282395 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086465037 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130370851 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084259424 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08899552 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186116581 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097970161 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.103118173 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113340422 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115821585 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143924212 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089353985 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.278327301 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097605762 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122981706 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098169178 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113797965 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113940106 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081155248 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084234261 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096137819 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082252968 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146362711 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102510742 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08367672 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088057154 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098484306 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094106737 seconds)
  done (took 28.39887536 seconds)
done (took 55.285661928 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414274801 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082244599 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081778085 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102079281 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083026625 seconds)
  done (took 1.540992651 seconds)
done (took 2.293093235 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.303011262 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19885921 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087541618 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189728326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087021603 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194783332 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181217894 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102213838 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206608524 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08584458 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191671069 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085229617 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103701559 seconds)
  done (took 2.795424354 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105039863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107274896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103161163 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120432785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08731481 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103245024 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120219452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109429941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101018659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112491147 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086857804 seconds)
  done (took 1.90724997 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101077686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104995199 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093433388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119090315 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087651981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098175921 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116641731 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107400032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099941319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113108512 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086984756 seconds)
  done (took 1.880507697 seconds)
done (took 7.334395051 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.200227317 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.052014214 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165182071 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243583454 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344737464 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.294445769 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.60844212 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201105609 seconds)
  done (took 15.995586511 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.196737946 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110131526 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092474861 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092298239 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116131044 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096904793 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095712227 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111001909 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096128321 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096654806 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091925363 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108737147 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090124426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095115117 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113696546 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094187915 seconds)
  done (took 2.519259698 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136943721 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116149151 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116739024 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100292611 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095994728 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117983133 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103099231 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097275169 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114504241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095929138 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102722221 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116595669 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098404524 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094442215 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117294597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119720045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094864512 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116889164 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117364159 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116487426 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100920578 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096869064 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114670371 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099652848 seconds)
  done (took 3.443460525 seconds)
done (took 22.714087 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148403084 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102773635 seconds)
  done (took 1.014906715 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163470414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183257362 seconds)
  done (took 1.109061541 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11194679 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090506948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13883772 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104407478 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09293843 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109436998 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118126833 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109069452 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092824306 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09209338 seconds)
  done (took 1.828732072 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095156324 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095072913 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122965671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168508946 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117723991 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095276481 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095114218 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113043983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097393745 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091928954 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114720342 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10914891 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094949195 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12813112 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096069179 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096478203 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118683181 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095463618 seconds)
  done (took 2.718129967 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091802869 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092820419 seconds)
  done (took 0.952117318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095245691 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090909498 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093630721 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110513139 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091097077 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090385563 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10801359 seconds)
  done (took 1.446940218 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.529600594 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241477993 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376612196 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072418396 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123861275 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.32301342 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106815961 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073614 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092896536 seconds)
  done (took 2.743301873 seconds)
done (took 12.582798182 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093233646 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.438276558 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629792521 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132425525 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09034155 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147594047 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331129707 seconds)
done (took 2.636734399 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35523916 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1661771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084820533 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092562181 seconds)
  done (took 1.470540298 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083816777 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100175854 seconds)
  done (took 0.961347385 seconds)
done (took 3.212541766 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091543547 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089741501 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089141434 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10777145 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11183751 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088784925 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108935685 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090099232 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08876101 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08837818 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.109502453 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091245111 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089158528 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108416662 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090149747 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.211512372 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090817994 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106967301 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089217775 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089207243 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106452866 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090545434 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089690955 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088123161 seconds)
  done (took 3.21834752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112947623 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092671514 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111299297 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094726496 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095023116 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112219465 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095528087 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092253347 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111616964 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094160465 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093897185 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11226754 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09292017 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095448129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091861585 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111868223 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095993899 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093165297 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109135633 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094555204 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094770492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111121167 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095337565 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094725276 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113082502 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094839565 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091395577 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110039519 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095100465 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095370301 seconds)
  done (took 3.779199723 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097056599 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087072987 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090252493 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116494273 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088150743 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09067687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104312097 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092376838 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091279291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09025927 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110575427 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090761448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091685789 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109650313 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094070899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093022216 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117159312 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09197176 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090332663 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092364304 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112451894 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090343663 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090004876 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108742585 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091257618 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088335681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091603673 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110705445 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092310519 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090741188 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110745315 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095812704 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091189133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099845004 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112128127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091323798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095984994 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106000338 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092450346 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08730804 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086741081 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108568847 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09041907 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097777742 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109204253 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091860459 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090829608 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110939911 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091820488 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092887425 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087749066 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.1085963 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094466202 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092674085 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110989768 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088168079 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0916741 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087373859 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108876207 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09116331 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088139027 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10583757 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096720221 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091087478 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12370016 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09734534 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092102133 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092283322 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110091052 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095935689 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093145151 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118586153 seconds)
  done (took 7.801209636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115206705 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099619387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110123085 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093590405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092062258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090118701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113787995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091121093 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092047522 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114719209 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092320063 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092315185 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110562115 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094144398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092237564 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092546118 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115447703 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092006699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090909983 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109828054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092201281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095185555 seconds)
  done (took 2.967174657 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.241433845 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097314366 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141387311 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122995585 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109243958 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124937215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097236644 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097633807 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11308627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102106257 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100367574 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113981853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111229468 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100481713 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11871658 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102187512 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114100655 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102751597 seconds)
  done (took 2.899191338 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104006001 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092629775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154767253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092698837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09278731 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112789703 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100433078 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112010814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111761175 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094518853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100479513 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11176791 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094478749 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094691549 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110940694 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093874794 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09331397 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09302839 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117420602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098514646 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116043084 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101161091 seconds)
  done (took 3.083923041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106917807 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092574825 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129001752 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097576749 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092856805 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091926647 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11706879 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093878547 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098832404 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111749477 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093418031 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091845124 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126923072 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093862131 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099303729 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111799506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093749269 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094416212 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112553652 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093964245 seconds)
  done (took 2.838651855 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195205154 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12787441 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110816027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11671812 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128128625 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111203921 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135783566 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11132443 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109353107 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138127449 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109665758 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109402847 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13486926 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115094865 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127638563 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121362141 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117294763 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135645421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110297141 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127850729 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122921642 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111375294 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135142613 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111014968 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109056487 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128309466 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109465253 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132793483 seconds)
  done (took 4.250807299 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092557568 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091673128 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091425015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110046615 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092671092 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091260718 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090833473 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110451118 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092630071 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092027196 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108971224 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092792285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091825829 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092228556 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110627072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092276791 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091971387 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108717444 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093627308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092252291 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091902269 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109922866 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093758885 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091682357 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110107953 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092850818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091875537 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091648333 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110059108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093487068 seconds)
  done (took 3.704728633 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105951459 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101189896 seconds)
  done (took 1.007362697 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099768873 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106062279 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092103848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111016628 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099297997 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092737746 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120099356 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099872406 seconds)
  done (took 1.620210506 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16813986 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.18891199 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097547691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123795455 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170368351 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180924465 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131486144 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117690958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092642878 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085824876 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182573072 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084515734 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111328709 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091507824 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093251708 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119455802 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094464386 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102944018 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119188294 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095985318 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097551793 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11791149 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095671788 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103511118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10585327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097694061 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095530228 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123552883 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091193369 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093732995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109045784 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095121471 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096644794 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096801665 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112991338 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169547902 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119946161 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089664747 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113545247 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098736741 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126269135 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092354428 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114435425 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092029195 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096942697 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117660067 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098108834 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093452442 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104398358 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090073981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093289384 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107464976 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093828083 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093161189 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111861952 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100238216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095455485 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10833854 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090930572 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088905437 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110000899 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090393252 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095617828 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097127332 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113276622 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095077293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091891802 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.113637718 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09602237 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094093453 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111114569 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108977658 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093583524 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11691416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102343369 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095348047 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109083184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100745605 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092314458 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11283285 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098638817 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12311833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114219748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090055815 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089132438 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118086346 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096969454 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096699063 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086064198 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121886865 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095137569 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094526611 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106351993 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09392399 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089037431 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116265889 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086928118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092825296 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.111694088 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09917778 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098943158 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109560803 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096057963 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09887652 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098603931 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111032563 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156275954 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110491691 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08916048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095621211 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117546882 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088658373 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09314877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.112283529 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091528197 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089184068 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116567586 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094213818 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095246451 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096957206 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11545241 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096092056 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095804316 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112502159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090939477 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097463453 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12105728 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09579657 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095786733 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.11248878 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095893282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093423783 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116462475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092100196 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099191874 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090732969 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113913579 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094931188 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098937595 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114158279 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089961612 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092351791 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114006055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094648751 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097525876 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114347613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091209669 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086688867 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114688307 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090918726 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095127383 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122948863 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09184053 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095942182 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089423764 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121409027 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091354554 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098691131 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11664211 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100653676 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099106901 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106529584 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093093259 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095883736 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115412379 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09229664 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096180164 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114182018 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103005471 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087574415 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097307066 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105944082 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091642471 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09880335 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.114770038 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097175367 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090039833 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153004765 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107830138 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098735821 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112570783 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095439403 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098363913 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112634645 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099008687 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099491635 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099195618 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113611551 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09341195 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099672127 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110299652 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096622866 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092310472 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115653921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087162774 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095783385 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105368983 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099905376 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095787379 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118053146 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100461551 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096289307 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092373418 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122892395 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090803269 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097423916 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107024881 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099906028 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104472791 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120582847 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100930938 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095778917 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111426419 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095955412 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102902997 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116956824 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095143711 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095698549 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08715555 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108221809 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101429156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098483929 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110112135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094910426 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095741576 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116199041 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09366572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086792091 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118581226 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100613317 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09024371 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11508874 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09271501 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093034378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120261568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089064855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090992473 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095863433 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120314426 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095517685 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093690201 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118899603 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101050004 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097180168 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115739572 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093088899 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101050394 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111857932 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.106643385 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090164212 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097446676 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107897373 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097176706 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094348873 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111675532 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092309829 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09839642 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120313082 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101243338 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092902732 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118624003 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101419546 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099838901 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111276937 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101199512 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089843701 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086942242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110700231 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08808439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096796954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110621416 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100720621 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092138339 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114216976 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099558546 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096141689 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111355009 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100281664 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104899915 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108663481 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089252044 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093230704 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113996364 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09266558 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091773279 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.116540629 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097016203 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099145444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106588138 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.112669476 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095377073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100916491 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.1114644 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102015656 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100638175 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120166728 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091995893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099145157 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111542378 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099399062 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088404415 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113081129 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095391389 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094368045 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111963021 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093906801 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091286652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087762234 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111734321 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101664801 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09344305 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.119588058 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094580235 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093243237 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112499448 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092426074 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101556973 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.115109239 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101315908 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094469242 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087321149 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108927605 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100991392 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093904351 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120209527 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091595251 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098965562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121678493 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099102328 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095935573 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12460353 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105066929 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101058611 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118772621 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089011389 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092783628 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119164988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095548607 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097511201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097710155 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108890852 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099515894 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100758565 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115215968 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094198924 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089878652 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.114997766 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101975705 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098574219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099036195 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.117284054 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096443469 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089991453 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118800339 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101890713 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095362907 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121478804 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095713315 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098823125 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.112754217 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101305907 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096131586 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089584077 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109647287 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0918023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101660715 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108938455 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100061887 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100815315 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.11133007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094491319 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100578051 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091065127 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117452565 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10002817 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093204756 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126320675 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09666167 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093428802 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.121085715 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101670744 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089300635 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114328457 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095101712 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103286663 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113278176 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100511623 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095183726 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120029953 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098810328 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100442869 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099848465 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122106889 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090025314 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101419366 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119382557 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098791557 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093136065 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113964 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091705518 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094109058 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120873623 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094061623 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103959456 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102126654 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113109692 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092709379 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099516158 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1145036 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102588467 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091257906 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116223511 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089209603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097054541 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114119057 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10160436 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092317354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108441753 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100757287 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100651062 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100621991 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118186729 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102386816 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089286072 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110127811 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098819593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092595673 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126884317 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09919221 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093853065 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114265883 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098898565 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096639115 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102381561 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.11090465 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092300858 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095423185 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118105053 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094987888 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090287721 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119680468 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094391761 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097889798 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114468069 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090478897 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094801579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.121431598 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095024485 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091794162 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11281692 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102675525 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095440151 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09247383 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109356445 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101687453 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096463316 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123050739 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092513952 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095891339 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113834977 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098985436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103530245 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11441212 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095987472 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093584288 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120947374 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101549568 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088879646 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112947962 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1072395 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100414932 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116887976 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100327724 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095314313 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102126925 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123553611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099829644 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090113644 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110897045 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094622573 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089973872 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118387995 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101958705 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094589887 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113414903 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102192411 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100838858 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099245674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119203321 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090964188 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102746175 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113455498 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099821629 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090690421 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109892542 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099520856 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102150979 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094670204 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116368238 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096669278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097344563 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111729905 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093822923 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098768262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121145312 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101612922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094520747 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114711313 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099454307 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106087642 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096896425 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116178364 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103450747 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105153369 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117336654 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095001185 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099411612 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123324847 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098518357 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10294959 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114070156 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095547228 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103034386 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123188909 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106979278 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094970406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11066626 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102382398 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093641559 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109944792 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101459005 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104427183 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122562501 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097581124 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09311779 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104689538 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122010134 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095355212 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094468799 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114124335 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100146182 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093278719 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120006692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093048339 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102761231 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12380535 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103061482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103872215 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111281071 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102886982 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099463266 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124400714 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098876942 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091301521 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09045933 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119957307 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103896021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102121645 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119202627 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100184933 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101253985 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116381198 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098919591 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093270736 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102620776 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.12295739 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098280296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097587507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115115262 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09866319 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097861686 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121146231 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104674449 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096348832 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126906719 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103958598 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094028216 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112112289 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098132325 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098155338 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096618151 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122298523 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094519352 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090074584 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122157232 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103689104 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094363015 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123795268 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104305176 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094859543 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119188377 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104517164 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100718977 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097271338 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118655785 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0989605 seconds)
  done (took 62.495524108 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144575771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104551939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119301203 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099440732 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11546822 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121437794 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099884839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09923279 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119378891 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108547196 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097451386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119325499 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114163896 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118559046 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136832514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107493075 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120106956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100542281 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09773482 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099004058 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132542281 seconds)
  done (took 3.230417615 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11670138 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110936482 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130248742 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113181379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104424641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130967271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109293713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129996135 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111778824 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105442551 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13337124 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109776176 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12663704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108725062 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106673676 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127853822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111961752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104868865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131130415 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109818929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126575146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110902722 seconds)
  done (took 3.424290193 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129585971 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101161559 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096488256 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118649091 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102071752 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098510153 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121808809 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100949275 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107377651 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093975843 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110458031 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09386844 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096835451 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119455362 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09296812 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.0974955 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127148198 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102939416 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103159821 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098252283 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110155979 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100180935 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098331521 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10994182 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104739049 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102633586 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118573355 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10146454 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089355908 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100740542 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120567887 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092422758 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08994528 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110017723 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089849108 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101241342 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120638229 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100062014 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098529719 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088630464 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120681538 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103259286 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088800706 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118535977 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099574666 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092269211 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101332433 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11965332 seconds)
  done (took 5.863453409 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127695649 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156039621 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10231517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126896659 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135557634 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107644056 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101153353 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129829736 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099614895 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123560506 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113840922 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111921122 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126246452 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105968046 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103688663 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125163088 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104835144 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101341092 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127742019 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101500034 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105363564 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124776998 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111215403 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133570874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10592453 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102446878 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121639971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107497761 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110366636 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128265233 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106745922 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10685133 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133074125 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10450849 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101109518 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124540081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.368357511 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124401265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10477574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100934471 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102225346 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128058659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104773346 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133689527 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104889606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103211425 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12281475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101653681 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111049178 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124567612 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11023452 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113265005 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126897799 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104940352 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104757121 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134585626 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104499772 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100928837 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125247957 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111884461 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099828459 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126855104 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111962959 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12406794 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110231233 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112120273 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.126525852 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10604276 seconds)
  done (took 9.040937963 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133455384 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106836349 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13688106 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115323305 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106426292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127901304 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106173482 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105667911 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127832037 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112218273 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125738841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224131688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126967798 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111422923 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105660772 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129729682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106124723 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128230513 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107325081 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105560903 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128586628 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116622518 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106071953 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135909226 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117376974 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103384133 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128753998 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107374763 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136297162 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107596686 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116458628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128723478 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107122908 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113397988 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139582679 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106397879 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122772784 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107113908 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106337093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129818793 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104317317 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114200703 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128960884 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104208735 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106296389 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128654656 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116798532 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138615292 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113123287 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111679749 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128698094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115270494 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105896539 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129277934 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115361558 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142046644 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115653208 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113395612 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128792379 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115280308 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135733602 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12356947 seconds)
  done (took 8.318172117 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101425868 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09999299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098664322 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120858817 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100175553 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09954984 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099283745 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120673221 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10029414 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098818144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119686741 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100404735 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098952501 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098800149 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120527489 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099935738 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099329826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119728819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10222086 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099176113 seconds)
  done (took 2.970106382 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10986625 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116701471 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123241431 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108461083 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10121961 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130921296 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10240147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101843284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101362991 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125914023 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109947537 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130785446 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103117072 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106491594 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130787212 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109332356 seconds)
  done (took 2.685437659 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120022728 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117056883 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.208561542 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103886625 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124826634 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109784926 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101008325 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127987086 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101645497 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106846429 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127148871 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105572115 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103384452 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102447123 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124254419 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105198035 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100322177 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128857566 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10344903 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.215163925 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10682433 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103857003 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127101975 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106341905 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103491279 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129242021 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108780862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101844574 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126300622 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105211954 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103699026 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131275996 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103082159 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106637368 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123720861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105662237 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102882478 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102267002 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127886539 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103407645 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103960622 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126644729 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103764186 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103341873 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121991577 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104959442 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10094196 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130870202 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105017381 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103263849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102710697 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129629131 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106801388 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109570666 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131466396 seconds)
  done (took 7.226974182 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114219076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104072669 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135012425 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10174082 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103200159 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102919416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127254997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105278664 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103994768 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123315483 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10506933 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104147015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126614387 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105810205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103524202 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125732466 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101659184 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103073545 seconds)
  done (took 2.87185647 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108018863 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102167686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105955008 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125086255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102414262 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10272568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123582397 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102324095 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10190964 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101784614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125241493 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102119403 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10120276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125152505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102704321 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101928163 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124758657 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103010269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101570095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100662057 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125207785 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101721355 seconds)
  done (took 3.271717212 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115121133 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.212625868 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108533502 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220708569 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099177902 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09803707 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.133777676 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099572384 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139928762 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100121975 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097584116 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120633982 seconds)
  done (took 2.426829743 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131084291 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139841241 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125312321 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104072829 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11214083 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129559592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108147942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106791461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139608593 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118325962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130014568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117131657 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114374804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138080819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11276683 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133747651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10934954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106760317 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12691874 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12219708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106978786 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138275218 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107873277 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106589147 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129855198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115482682 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137950853 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118869252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107938813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139393788 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111915966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129102872 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117872226 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118453531 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127152787 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11443875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107230822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145230036 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111463317 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137838167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104411029 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111485494 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137486876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112723142 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138000695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109416959 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112195237 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129472026 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107636906 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128343062 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136249495 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115141093 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135522579 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116557785 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11451133 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1515702 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118573589 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138741143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111680133 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141269205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115705437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112018491 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139550236 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119831115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135394827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116101256 seconds)
  done (took 8.947361922 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14437485 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103970732 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131017415 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120125728 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138088767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109976442 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107677169 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130246978 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110063084 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104545444 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17303059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10852001 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135934255 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117459499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108239121 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129931163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109275711 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116247118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128198714 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129520778 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131462966 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117032597 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117561901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139166697 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119477165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134154947 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109717014 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107758687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129764727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109434881 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114063778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131862421 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116861754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104677257 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138557004 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107821397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107753015 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136971335 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107752189 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134936762 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116447054 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12326014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132037083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10843578 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141244293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109070149 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108928997 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127294286 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109117046 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105231237 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143395006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120114927 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143487748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117738402 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108199558 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133073547 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110129754 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108338584 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131930371 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112333815 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13782398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109834832 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127931031 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131499428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108662622 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116433536 seconds)
  done (took 8.906796057 seconds)
done (took 169.629293454 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.172665901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213849557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.194884064 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.186830068 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093797491 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155766197 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127203911 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.198120545 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095935798 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094010591 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093859769 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120421236 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163316608 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093950704 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117926606 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097124073 seconds)
  done (took 3.103191484 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195436805 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.344293633 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109403718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121550304 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102543342 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098592528 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122963051 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101245226 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100649121 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130240701 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10018619 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096185269 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129053783 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096388876 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100122778 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.1221009 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107923186 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100746381 seconds)
  done (took 3.177096318 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120295466 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153821814 seconds)
  done (took 1.172489963 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130555381 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216121913 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295333907 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17178817 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1201081 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142563634 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149855888 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134659883 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192090033 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136336698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11341763 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096633863 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148825825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105000107 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138381622 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09895263 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127662353 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13617145 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114736309 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100734553 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14589699 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103587481 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10450102 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137240435 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179889827 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136719759 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103761864 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103038789 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12563107 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115012615 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106295631 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141206372 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111787339 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180239392 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102852202 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175923029 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106603845 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123685306 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114616822 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099754422 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126091391 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102907189 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135099707 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100315526 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102786517 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128526513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104858247 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10269546 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131203548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10752506 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106234412 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130767916 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174294325 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109171184 seconds)
  done (took 7.950323578 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.886535453 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146915099 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098588109 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.029944094 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144922231 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114079138 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.876952325 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148459863 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254544582 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.896485257 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114959317 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106947908 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262231293 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257645722 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290551502 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359877921 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.740793184 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113606261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129321598 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162970509 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103941885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141173919 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116220658 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515759987 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100071967 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099755562 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128030039 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107878158 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180166078 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10062101 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104330783 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196150814 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294266189 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210991451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099555005 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121416625 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100169112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185388445 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275195156 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221644608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172884311 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120158486 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09948187 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105146952 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137804097 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097032145 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180003327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190004877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167618761 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127555739 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109813601 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107381978 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127566313 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176585262 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098371114 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357816988 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360385419 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122673563 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107802025 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111900798 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267638218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125277004 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238516819 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122064898 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215860745 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124454467 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844269985 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162217536 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123049924 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105350832 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104791237 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130252562 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104121623 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190201926 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.477518878 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13081263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105938422 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098765863 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233407503 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123355332 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099983164 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18185156 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101827307 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105580121 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131529142 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106807843 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189129252 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269113821 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107690631 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106534046 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127305344 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111691138 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101388537 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233310315 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229957957 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177461437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230011933 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104659278 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182430379 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185248711 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104978701 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188595826 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105765008 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112039516 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127111558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226470049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156056053 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102495907 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105782823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128086639 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137014511 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103758759 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129755129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164692886 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.56175554 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185759994 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097905849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128532296 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106409129 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183259211 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106742868 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265732522 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129858173 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162357145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12816406 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098402693 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107052587 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181217369 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109487646 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130063542 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104012487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132383509 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258672567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224300153 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132141981 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254901245 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177385285 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128256659 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168852562 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129480844 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187079094 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111119822 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104615838 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123535886 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833405515 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112591299 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105578494 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129362193 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182788792 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123571197 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102933653 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100027136 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12093883 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815475716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105850846 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097244018 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10224848 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129735327 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106329605 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108703464 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130576153 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177389015 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246854585 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108417207 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127333939 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100936933 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179224192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102145661 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101313097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122571966 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102677075 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107146339 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126856552 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105196191 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188634874 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154360084 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231475297 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.675951479 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102002079 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101644121 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241755569 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123894107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329295884 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106494451 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234653192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183545844 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098142085 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381841352 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163413889 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207546365 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104140109 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19106792 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099128483 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129449969 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157273479 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1233485 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107685845 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177831953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109497738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107835446 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.304505343 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101841739 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252147325 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098290872 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188977244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102180439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106175945 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349897202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102383139 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113065009 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179069287 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105823537 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124720296 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.651785669 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10170289 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109302163 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127988376 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237622422 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183279208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108026227 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107759549 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132967944 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156165597 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231888729 seconds)
  done (took 47.679438237 seconds)
done (took 63.975614032 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259631018 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170079007 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.37460821 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151620455 seconds)
  done (took 1.946106997 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.267971202 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171118886 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.252104352 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09773525 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260727896 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09733265 seconds)
  done (took 2.073420865 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17805343 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16863934 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148509956 seconds)
  done (took 1.421477341 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209109214 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208585981 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346307538 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25951023 seconds)
  done (took 2.033334043 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.282917083 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116480536 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125874389 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23518384 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25194959 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207188704 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125000444 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175965955 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128761962 seconds)
  done (took 2.612091334 seconds)
done (took 11.007431619 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.217267333 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.282324666 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113101378 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.344177748 seconds)
    (5/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.331788034 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.191900066 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.236033338 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109856043 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.246499981 seconds)
    (10/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.405517661 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.311886192 seconds)
    (12/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.279623539 seconds)
    (13/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.147755168 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.242102577 seconds)
    (15/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.321809736 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.289880437 seconds)
    (17/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.223592854 seconds)
    (18/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.147867259 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.239005304 seconds)
    (20/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.252385411 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.110103853 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119077854 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128361794 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.336655222 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193496115 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.308013743 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23413722 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123423452 seconds)
    (29/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.285602483 seconds)
    (30/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134506544 seconds)
    (31/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108703827 seconds)
    (32/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.164146132 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130665173 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.298383693 seconds)
    (35/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.23543825 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079489635 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110732837 seconds)
    (38/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.232048833 seconds)
    (39/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.17463012 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119514797 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130277688 seconds)
    (42/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.150139663 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105493326 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.186528063 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193960118 seconds)
    (46/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.154742716 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.180404157 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.284950023 seconds)
    (49/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080447881 seconds)
    (50/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08185497 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113510882 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128422904 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081796024 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102751222 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.236420326 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103143824 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086822862 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084575339 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.105436319 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086871665 seconds)
    (61/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111010319 seconds)
    (62/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.178812035 seconds)
    (63/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157800885 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106261224 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106060966 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.104057212 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.147131229 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129539836 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.127087941 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079542941 seconds)
    (71/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177137649 seconds)
    (72/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158052685 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080300626 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.131762561 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133176041 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.142931467 seconds)
    (77/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.143284992 seconds)
    (78/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081218823 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147404694 seconds)
    (80/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111983132 seconds)
    (81/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109422697 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105092181 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.105990202 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12431407 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106313751 seconds)
    (86/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.159743697 seconds)
    (87/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086815539 seconds)
    (88/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.153836448 seconds)
    (89/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110860291 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.220773722 seconds)
    (91/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19186079 seconds)
    (92/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.1128273 seconds)
    (93/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110156033 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100344479 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.126741704 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112182504 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102568755 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127415947 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129243518 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086108082 seconds)
    (101/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.166772296 seconds)
    (102/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.108841895 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11157192 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103189802 seconds)
    (105/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079229202 seconds)
    (106/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.177131193 seconds)
    (107/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089584515 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.143856174 seconds)
    (109/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079521693 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125754549 seconds)
    (111/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083307011 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109467016 seconds)
    (113/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127207155 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081824788 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086976312 seconds)
    (116/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.140554784 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129504653 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113322894 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103585934 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091422448 seconds)
    (121/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.160138787 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082969701 seconds)
    (123/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088608611 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102544412 seconds)
    (125/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.104004638 seconds)
    (126/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082867875 seconds)
    (127/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192500349 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110975514 seconds)
    (129/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153364988 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.1012056 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087457102 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129889479 seconds)
    (133/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111092821 seconds)
    (134/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117662969 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150639868 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125247888 seconds)
    (137/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102358443 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110613821 seconds)
    (139/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081688533 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086554346 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111885788 seconds)
    (142/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.167562392 seconds)
    (143/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113613383 seconds)
    (144/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086270768 seconds)
    (145/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084839563 seconds)
    (146/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.10976708 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087562545 seconds)
    (148/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080932866 seconds)
    (149/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112801729 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129025904 seconds)
    (151/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087222994 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109866289 seconds)
    (153/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134403953 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104176227 seconds)
    (155/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144643102 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100954685 seconds)
    (157/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084594064 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.107265165 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087569799 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.08097556 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079080698 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11017752 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159330207 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094809079 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124600942 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081082757 seconds)
    (167/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105676365 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114882033 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082455298 seconds)
    (170/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080558649 seconds)
    (171/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.111667246 seconds)
    (172/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114358971 seconds)
    (173/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086031026 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101471472 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.11056353 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102305122 seconds)
    (177/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080130416 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082595625 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1294548 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10542016 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085437176 seconds)
    (182/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080054048 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148290735 seconds)
    (184/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.087761851 seconds)
    (185/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111127124 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103885955 seconds)
    (187/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107438935 seconds)
    (188/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08174861 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102615541 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082689188 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.136048967 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083816445 seconds)
  done (took 27.360748611 seconds)
done (took 28.293119886 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224349456 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131976097 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111468066 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111600891 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232382934 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118093941 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152974357 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113398557 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122191058 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137265475 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102553873 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124361974 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136706983 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20806018 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141692371 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103185317 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102604104 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148106149 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126827716 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127188716 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23155041 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103621683 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.150137708 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104367728 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233850882 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104384455 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110721509 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140272215 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124752444 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110596503 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138584721 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104259076 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127755244 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154509776 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10300094 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111801599 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127465496 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088229776 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111655896 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136793364 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126683731 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11218832 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111881321 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130744831 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114117011 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110484212 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128334084 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116359117 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101420904 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13716661 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105522567 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126738143 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136162679 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101351126 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100946334 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127364199 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12374119 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102312212 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148996897 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104020804 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102613729 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102338924 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138510951 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10262905 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110588375 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127909811 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112203502 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113023609 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135227959 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10574545 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102339332 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109799172 seconds)
done (took 10.091363273 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10741335 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14725354 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.232948489 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236267013 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131161816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146787323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117144014 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126674472 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.1424127 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12209421 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140936207 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161174004 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.2382456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119828382 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118852369 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141285983 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114593556 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111493429 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.235498567 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128028686 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155451466 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11903058 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155640974 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12005697 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10914258 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165635889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111101274 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114543873 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13188474 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116892055 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127156765 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131557126 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109954954 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125585633 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148834277 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117612322 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119123511 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.141639496 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107883114 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106186871 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140460849 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121987321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10686535 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145928967 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115186802 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146909148 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115035796 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118946994 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108182986 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139818947 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109151047 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131498168 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144626857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123997669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142967517 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120156188 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120794318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119067675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135739262 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120264742 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106126741 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133754947 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108599228 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153280005 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111592054 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120040149 seconds)
  done (took 9.780205507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127287706 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13723649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143464536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117704887 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112066928 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126779673 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100979922 seconds)
  done (took 1.846353635 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103288403 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.24233092 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.214455314 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243931 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241093781 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.253509767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126884645 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101983449 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165471095 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113228901 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245885472 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.27263627 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111985889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117576849 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.247793018 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12955297 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22009247 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130887942 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117488311 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248210157 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119377868 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16137996 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11813346 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10323159 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237786243 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104074453 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294091976 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148666678 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113814847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116030149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14385543 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184615376 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240044591 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11825986 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136741561 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217479971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.240359876 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14407331 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.229303571 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135468822 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213688895 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144664157 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11890558 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117086974 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145562439 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.203841515 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.151347894 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118321176 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143308608 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.224294143 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142663704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215423551 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143140037 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117888418 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113344554 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146915797 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124895506 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118122392 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249686094 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147712857 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.216545048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246142668 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.24266539 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246427879 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128017837 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245334198 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203703777 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.14434331 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113100662 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1181405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246130222 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.146369199 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116621676 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236404616 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122364689 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.248898965 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.245599277 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115173221 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115760588 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134766746 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116818618 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103815071 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.2377988 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116850742 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141838837 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123186672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116228599 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145786752 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109150302 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126335397 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144453769 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115832859 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122799771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146134103 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12018383 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.249458884 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113742839 seconds)
  done (took 17.024675525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10703096 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105168219 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109858957 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131418564 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106457055 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104906872 seconds)
  done (took 1.672218747 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14175662 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118515632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153289452 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119823516 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166707338 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250228232 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259787256 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11323748 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167113672 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131612826 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254493555 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257405289 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.252391448 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123296915 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257898633 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.1207326 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.259764839 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116285209 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125999458 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143436454 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117382006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121784282 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145163114 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24264648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118805059 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120257818 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138908413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128022643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126232036 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140416872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122208825 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118276356 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137855017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112031107 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260501656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110533915 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140597522 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121326972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120026262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145531015 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.228929065 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144615192 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12516327 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120351148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141311062 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111211674 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120595048 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141932671 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259993012 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122126004 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121473122 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147812409 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11919769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120407901 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139134155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114173261 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120868483 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.257935197 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149590623 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112492194 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.13882626 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146839855 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114406377 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122436264 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146809946 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122087188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111633185 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146188679 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116365625 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119492671 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147588797 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120670382 seconds)
  done (took 11.801793304 seconds)
done (took 43.099694175 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.682111066 seconds)
  done (took 2.682857414 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.118394289 seconds)
  done (took 2.123574004 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.424289092 seconds)
  done (took 19.460627538 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.439560657 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.479748588 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.171021249 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149501332 seconds)
  done (took 3.244891274 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.851973266 seconds)
  done (took 1.879073541 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.342855332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255494681 seconds)
  done (took 1.608997916 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.721591471 seconds)
  done (took 1.745270332 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.565847946 seconds)
  done (took 2.580222633 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294146982 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24744928 seconds)
  done (took 1.569403905 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.645649169 seconds)
  done (took 1.669332176 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.311010219 seconds)
  done (took 21.339510688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262418896 seconds)
  done (took 1.290779571 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292213355 seconds)
  done (took 1.320037413 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.706620018 seconds)
  done (took 4.734921702 seconds)
done (took 68.265929078 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12018069 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121990881 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122863262 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145020403 seconds)
  done (took 1.528730458 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123960708 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120508536 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147579105 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119397842 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125799078 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12039296 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14593373 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121520157 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118178304 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147820361 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119422269 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117810788 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148179474 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118376055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116520638 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147896461 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123352289 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118964921 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145903113 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119328757 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119301137 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146262517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122473672 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121657368 seconds)
  done (took 4.107300387 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115502322 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11055715 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111547238 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134141137 seconds)
  done (took 1.502102608 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128104642 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131883512 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154939682 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127047041 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130602087 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155701793 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118686077 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115252368 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14376887 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127647951 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134178184 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158110414 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132487916 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119706086 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156188789 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114112272 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120085142 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156794561 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125348574 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127762181 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144859803 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126375775 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122258858 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155211202 seconds)
  done (took 4.256712545 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195618853 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130910207 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178291745 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164742269 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179623172 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116437801 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147018577 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151321453 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126534764 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119822638 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147499586 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164925162 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151844259 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120735229 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119376986 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152234625 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132692096 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124175484 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191318755 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124808541 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153975534 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131918206 seconds)
  done (took 4.259089065 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121998037 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109577426 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133633583 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108406411 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122724338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111282296 seconds)
  done (took 1.745900427 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109424442 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104096347 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10470764 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129467652 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10893334 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10312351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10214493 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131182412 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104267538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103682566 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130598606 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103254045 seconds)
  done (took 2.372723511 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205979398 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147498456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256835102 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399393465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188705343 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189890163 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287643169 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19109745 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178250088 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164611903 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213811898 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162972793 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180145964 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187104077 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166911738 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160625341 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194187339 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209545147 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171330217 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24271409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158205393 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203969436 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18894623 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177996672 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141323859 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190579794 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119667848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128003346 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196112089 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195227843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176980908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178271872 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141872318 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221545818 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263176894 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207405095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269946188 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13423698 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198902743 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190648135 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260705169 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167580121 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194691719 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180519693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129540736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215100333 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153190784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213903134 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135130236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172858276 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215548717 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182122434 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200967681 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136915933 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329254904 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160802989 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142854117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204367061 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189016046 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229215097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206268307 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123475306 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200055376 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190773519 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24165374 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169370932 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16823292 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152498957 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166850551 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234047823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210712972 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160946694 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241381978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132288684 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202400473 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197352933 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157184835 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235926587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171444414 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146768851 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152150697 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16013977 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127011615 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18682476 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149377542 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241915552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132817509 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34106318 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178694252 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184526958 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191386375 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160950505 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191173425 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149067548 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102993076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172445306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161177167 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186311384 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128400753 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182485636 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140326177 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124945573 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181228496 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121089032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198579039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135004694 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19252982 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17210387 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159626592 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17771154 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176058719 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160672016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196849948 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219494832 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130787028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131436028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245243818 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1977487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136856851 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202070675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195557114 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177633091 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134149035 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194116292 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222667198 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143449981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228939849 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138370816 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163307309 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14319417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201115531 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160194382 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188609068 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127938162 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192843701 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192129975 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15387998 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13883167 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211166722 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13292681 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123515413 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165564566 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135991359 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171511985 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149466404 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16646231 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155097433 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197845827 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165260562 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187399707 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134435115 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202462459 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131659083 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196859572 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149083396 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118083206 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202128397 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225866268 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130985909 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211515797 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163514468 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211564593 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20003604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129711661 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214168192 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129116525 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120608996 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190933659 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168608778 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193751783 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216330978 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205781066 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164952264 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192269067 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150731541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199324716 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182175618 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185149757 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141801218 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202806897 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199618354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121057867 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122446423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154733901 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137569596 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128875381 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165096455 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181033273 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193836846 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204955237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167818034 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16639373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189123844 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153416335 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162052316 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203818946 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137906023 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217241111 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219343386 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179239368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169030739 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163382913 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148232169 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1261507 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133353671 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189738547 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13678067 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163674022 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140751428 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218567667 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173320223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178543106 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217332292 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165509103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229065984 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119706929 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190314393 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168350699 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197581305 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18616288 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158337711 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161129845 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222114748 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143084283 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221594636 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166703478 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208950169 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225153343 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164602457 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1604516 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148493036 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188798837 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138360305 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190697081 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1451402 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130311351 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182256418 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137921804 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169443358 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217548287 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144794363 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208329409 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157576544 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201726733 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125906985 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171555238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172665454 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174203053 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105848162 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198677115 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195605155 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177006932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155390906 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201782781 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129275512 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34364908 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185915225 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206772788 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135982305 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167503393 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170106869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189287509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191717346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185355052 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169490141 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206802364 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200753141 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142213974 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159205296 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148097478 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179861109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14088719 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179574752 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161792985 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170858569 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189562517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165913263 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169609764 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204525585 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144651765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177820568 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138817387 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256043357 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167028428 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203930503 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192140071 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165915022 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213631337 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12360956 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12583874 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161508785 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185761364 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158397914 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176606066 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194625599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20989077 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174793725 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189581788 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139757343 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156984158 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166330531 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177870952 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212981005 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13502317 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136992963 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220911147 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128609282 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160763955 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160714723 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319036035 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148258028 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201707974 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107869703 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316328295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131814621 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159992153 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161499352 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199567029 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132895016 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211025123 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174720186 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167922145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162057471 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134046276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205853775 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210921452 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166809676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207612547 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.175335929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161940385 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191181688 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17305405 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175114981 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147969582 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187780324 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1939219 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206043274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131134772 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198625912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168289601 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19936949 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204542006 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139148771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182934434 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155716774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165155459 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168460943 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123989427 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191155338 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.165445285 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158598153 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176431988 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199227508 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131090037 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157134174 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146537883 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196245723 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140869662 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157088427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187521814 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159777516 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181668941 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240140523 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131863454 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196492084 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146644179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15898132 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141217632 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143649395 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159950544 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174235263 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209302842 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13145416 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207542033 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166789112 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195361608 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158250089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172727624 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.264833651 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158881139 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191266779 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182079243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197072602 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180973134 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20574224 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170171104 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149986875 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197117344 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177269475 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220501263 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195219659 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166184034 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159280333 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143180106 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138270134 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163085346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152070079 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198735925 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141277114 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165040934 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167208283 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17415962 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147350495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140804539 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227839048 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181350578 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189107688 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216555958 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136833993 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204886988 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207211935 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127328773 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164936455 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201282529 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143484782 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180669312 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132964615 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167134524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214703758 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.155541016 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161558508 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205012292 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168442263 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201276334 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136346172 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207605581 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140229087 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206205952 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126577952 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182685843 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170625658 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163696192 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127680639 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198684514 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163114217 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193304317 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142192934 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176643134 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220684684 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123323097 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163723898 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296053067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189538557 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225893523 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138638191 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136421514 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175391108 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158372854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197655749 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170448103 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.16046254 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12882902 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175103812 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158927093 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142133245 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196924261 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209875633 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161765277 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216523722 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134000749 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281952209 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142274816 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170079642 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.149162209 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130055986 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168533984 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135988578 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141923067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210240805 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24395893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163155041 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176611733 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135245226 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155301788 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12964028 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163216508 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181037054 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167029987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177450367 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105236127 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169267506 seconds)
  done (took 85.822924667 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173605275 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.170408708 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.183496743 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.241146499 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214418249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306161795 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.247762964 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260619717 seconds)
  done (took 2.916553919 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119283928 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162637695 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143083181 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143938843 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109787593 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488563949 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161845105 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120693647 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160999279 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152898777 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13720093 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57914542 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116952051 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145845196 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123124998 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136264219 seconds)
  done (took 4.120615083 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.385014112 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559118299 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.295228869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.291076792 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.27249324 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212772547 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.808720828 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20933931 seconds)
  done (took 13.15439412 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174546254 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170759997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458404231 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.31367396 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184113161 seconds)
  done (took 2.429067651 seconds)
done (took 129.236648086 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125288698 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124645345 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12353017 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155274343 seconds)
  done (took 1.64483086 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195510543 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092850003 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094689921 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122161536 seconds)
  done (took 1.631440235 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.468958818 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09253971 seconds)
  done (took 1.719000027 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152236933 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144254776 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169513315 seconds)
  done (took 1.609333807 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137817297 seconds)
  done (took 1.269505154 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118533974 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127682797 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282067495 seconds)
  done (took 1.664348788 seconds)
done (took 10.674984324 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120743026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932904807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436202896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134473426 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71584682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429320841 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.431225747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178753481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175773032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140324245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133475374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693814696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.445886483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881432153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.401286506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911200191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696279486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113643691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147753125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1134559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.410870333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139315315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114014927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113482968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72085281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421564467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110633845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.923601373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111476415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115312389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.43035824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111863388 seconds)
  done (took 21.081230286 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113003241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171095321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147736434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113276253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115502365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142435359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123576021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124757353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206235326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112082784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163293699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111185219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118659879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142246227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13694231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111123629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142994993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114241072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119773766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142170086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134786307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111608655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142159011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115484699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111357004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162503211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113198667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124568057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139082009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116262971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116208067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112343103 seconds)
  done (took 5.313383022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160255613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179627065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15014919 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149799723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191095714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114693604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227292601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150923103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208541794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112250166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134598774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140937958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153770036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112803256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167342806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111689828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114347859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144223999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120941279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113987588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163320585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111262743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114174751 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142727094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112007314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134900826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141272524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12496651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111601182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146027234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118220674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112614465 seconds)
  done (took 5.638103043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127492021 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127296468 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134542077 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165634191 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121313972 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125699664 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156559635 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121701562 seconds)
  done (took 2.229516285 seconds)
done (took 35.401218303 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137668786 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130175578 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133383837 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157274288 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.254169488 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119887994 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129486949 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117926487 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158071885 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133798761 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113632199 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.15040521 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133022214 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123174894 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258388338 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127073087 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262024923 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.259103616 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120254501 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12677093 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.15173867 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230747974 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157075073 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119892697 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.257112233 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114963082 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251966351 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122323908 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123109479 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142695783 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.228116341 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156800821 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120808564 seconds)
  done (took 6.459546734 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.23918273 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155041756 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121737065 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121155603 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123126375 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152438568 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.244962103 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153928269 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119921936 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120385152 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151880441 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226754261 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158415927 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116848975 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123585823 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11198439 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.277188768 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122465595 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144737509 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095667747 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116388213 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119919626 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.291258265 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148320037 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121522986 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120987012 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12211259 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158215509 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123538327 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121856069 seconds)
  done (took 5.680565359 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126333929 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134550287 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138242572 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221938691 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150803727 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163707357 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140186376 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135209449 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173227355 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114497017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130491395 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18240114 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130872702 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125385616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14530735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133564713 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137485661 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146278861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123784714 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132425583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166943677 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131744018 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137773804 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153421063 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112940514 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12238831 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155275642 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125159282 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122681257 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159403832 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1165143 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119391292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116289007 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180938555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115983555 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158126745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14091371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126864847 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157310167 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148659956 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118173201 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145154818 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141880478 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169570728 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147213484 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129497405 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126193278 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15926414 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112981799 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132337333 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186631048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114789764 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136096938 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142161136 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11300199 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123104895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11378212 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148846397 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129025435 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117234894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.169856702 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121421377 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125780272 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147031787 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125322278 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113532526 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114129837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147935852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141616072 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122105355 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182536042 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113739836 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126573589 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158876769 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126246826 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126556145 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143686282 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126371619 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124919322 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.150749181 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127192238 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11674591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11687631 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.161344875 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134997172 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.158785302 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127845352 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127786994 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117130528 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145777685 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131635968 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11635572 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150657554 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127276509 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114912005 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14799244 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128307194 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125417843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142539099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141524153 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117575026 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113101374 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169862503 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117978971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119211971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1540844 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156464798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114611283 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156736076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128700592 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115163804 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153870375 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119079292 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113001549 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162891073 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130669467 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121971534 seconds)
  done (took 17.162318168 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.355906012 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.343044357 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188742302 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.432968043 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128519358 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.273961257 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.341872052 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.344472888 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114370531 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18083343 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175597693 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.310777958 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11527727 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175929976 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.345772969 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.40383499 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177264471 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150851638 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182522135 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128327563 seconds)
  done (took 6.041937989 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133858158 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150334639 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168472276 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142921995 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125197893 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163232007 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114940704 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135879866 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156740205 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125318544 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117388387 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161107212 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128909961 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131636617 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.16073414 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14952112 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121769341 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.15091108 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13903742 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119873126 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135330468 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140671107 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122976967 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167499703 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13527592 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12555625 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14388073 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120122272 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121568125 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153540033 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119278379 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13365878 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151597878 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107269946 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126479689 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130096073 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150939589 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118179437 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120034402 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147336467 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129832015 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12821047 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153377756 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101117056 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133413755 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111728933 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157917471 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128803486 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107890211 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133989387 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15876212 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129476919 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1217637 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168168486 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121630239 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131389516 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156630063 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129479546 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119337191 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142796759 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113237404 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118554418 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122605796 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158813598 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127140942 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164178688 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131297319 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114623392 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118346729 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148429954 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118376833 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128420009 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165828892 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124370148 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121550455 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158067103 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122552546 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096350564 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123319387 seconds)
  done (took 11.795859525 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140294295 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125292404 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132329328 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.1795579 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129319139 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120390348 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155093875 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135904872 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129269895 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167409319 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129722387 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128338319 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16711255 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12645361 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125525242 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161451591 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129742581 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152883607 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164057142 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142346411 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159021727 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120581533 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128008861 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126078868 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17391658 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126065735 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140654581 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.162068432 seconds)
  done (took 5.166268719 seconds)
done (took 53.455759778 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.304129575 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.505402536 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.277613155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.27539117 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.301760884 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.308207223 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.280832398 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.277041539 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.849417736 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.252884006 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.277707324 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.27647516 seconds)
done (took 29.367539997 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.430836838 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.413320532 seconds)
    (2/2) benchmarking "String"...
    done (took 1.566462948 seconds)
  done (took 4.15783481 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.266571092 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.267288117 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.514340262 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.267633811 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.267461437 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.26717091 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.273236757 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272955092 seconds)
  done (took 16.299540409 seconds)
done (took 26.326403788 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.278738779 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.580343174 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.527971472 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.25094096 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.26961423 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.283005135 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.270003852 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.328072638 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.286466777 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.25714423 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.700080565 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.539511063 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.28993748 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.690893497 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.250961896 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.281614773 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.285445918 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.651478383 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.273115093 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.304754738 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.247879987 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.25168509 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.298335896 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.272613061 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.278691332 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.284262292 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.306943672 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.281902468 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.605935739 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.303718551 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.308088211 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.272120052 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.30241077 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.287721782 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.279990947 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.274346359 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.578908333 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.285703236 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.251344042 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.291588403 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.568030023 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.287799957 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.270799229 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.272142562 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.264359461 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.286677004 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.271833109 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.39179478 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.30203587 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.285384337 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.346201086 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.698967488 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.272853922 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.299495226 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.284137311 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.608990373 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.300845362 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.378252163 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.30089678 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.302216327 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.272180421 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.278160724 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.314399202 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.277305052 seconds)
  done (took 149.169836008 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272292345 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.276023316 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276964833 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.28131045 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.278050512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.277324578 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.272919807 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.272961654 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.276527699 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.306855265 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.278410629 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.277622126 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.278154309 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.226228957 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.284178535 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.288931418 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.278759673 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.294562162 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.289282807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.272982391 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.277867112 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.27846023 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.291191056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274496347 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.29450233 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.362041115 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283307171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.297354027 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.288694131 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274699239 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.292338518 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.285824874 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.95150985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.147839773 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.284581064 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.323270747 seconds)
  done (took 82.942004955 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.273449316 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.274375238 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274106504 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.307937954 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.274907918 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.908571061 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.910760674 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.339875587 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.527064687 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.279536342 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.827827477 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545334903 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.274363907 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368975609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.286435414 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.275532925 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.373174375 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.301394956 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280770052 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276903484 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.904339601 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.291308807 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.853170866 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.464087267 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293668612 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311082979 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.669957615 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.27664039 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311970632 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.614995954 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.331018769 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276363356 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.681391365 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.811933145 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.276165602 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390561359 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280058817 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312047293 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.278418626 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.56478533 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276892199 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.277009575 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281030853 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980627383 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281739867 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912913381 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.281530812 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.290539573 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.277251134 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278133718 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.25898108 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.034909079 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.279087626 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.276425419 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281101971 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278538364 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277731093 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.313957357 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.358334389 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.190504528 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.278672318 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.282496893 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313563245 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.278198351 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.866006393 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282153725 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.50395355 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.334988636 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.390092786 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907543729 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.284929942 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376278522 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39807729 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.280571258 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.27805371 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27959617 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.279661196 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.392096947 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279262289 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.004745578 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.463212129 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.297387698 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.87030368 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.383880779 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.279667519 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.701984692 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285160623 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280419069 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.035204448 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377716893 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.281182976 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.280067849 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280055473 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.282139124 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.004865285 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915290391 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.60962144 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.285702183 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.915667605 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.287567667 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.183566082 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.885980744 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.974196641 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.287564066 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394204688 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.466629964 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.299624993 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280678142 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.855677286 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285704509 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.280572386 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.282071214 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.339995396 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.684366178 seconds)
  done (took 388.152639961 seconds)
done (took 621.434282958 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.148415966 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.090944817 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.24984869 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.101434864 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.088982501 seconds)
  done (took 11.859198759 seconds)
done (took 13.040818803 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.484276708 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483542369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348066144 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487210622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319880983 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503358947 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473827695 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.299281394 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39827588 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.36906158 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398933975 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336634143 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319147763 seconds)
  done (took 19.402997751 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.585533138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.29322955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349254606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554820589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328665892 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595178448 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.63094758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.295637845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452045645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306675826 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306556598 seconds)
  done (took 18.881982019 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.583930726 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.29471196 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370467174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591043268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331452823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585433639 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.623971552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294344323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.469358164 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308431207 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306300244 seconds)
  done (took 18.940754506 seconds)
done (took 58.409650026 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.3267931 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.390444978 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.325307079 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.302783961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303220292 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.302364905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.305828464 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.303740894 seconds)
  done (took 11.743016505 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.301502478 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.301548303 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.301165166 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302901718 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.301533563 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.30207621 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.301518373 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.301304234 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.301979662 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.301371224 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.303735887 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.302246538 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.302970521 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.303414322 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.302395542 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.30310789 seconds)
  done (took 22.018244066 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.305227894 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.302520491 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.301803914 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.301680909 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302942505 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.301913319 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.303562722 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.302835037 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302559756 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.30218957 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303625292 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.303798182 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30342151 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.304069439 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.304117899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305118887 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.30308728 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.305299026 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.30909329 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.31093228 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.301863594 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.303383134 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.303251785 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.304613714 seconds)
  done (took 32.478063053 seconds)
done (took 67.423849615 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.300866353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.293613057 seconds)
  done (took 5.779190605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.362542983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.361877727 seconds)
  done (took 3.912714337 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.304482853 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.303527405 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.305382378 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303969897 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.303680948 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.30511864 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304640492 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.303899646 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.304574195 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.301873058 seconds)
  done (took 14.227217269 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.306000376 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.304560137 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303859628 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.304801646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.305337718 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.304416712 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.306112153 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.304737151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.30549845 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.304183742 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.3062681 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305577871 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.304960044 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.306366418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.305765344 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.30348361 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.305408439 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.305700215 seconds)
  done (took 24.679267658 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.318416434 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.323952701 seconds)
  done (took 3.827772778 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.432678292 seconds)
    (2/7) benchmarking "second"...
    done (took 1.34841151 seconds)
    (3/7) benchmarking "month"...
    done (took 1.409815871 seconds)
    (4/7) benchmarking "year"...
    done (took 1.402191336 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.34787836 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.326288424 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.347390725 seconds)
  done (took 10.801785967 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.292933179 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.591687867 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.777015045 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.454487177 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.290318664 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.316922958 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.272265893 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.317672334 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.314064317 seconds)
  done (took 14.816568535 seconds)
done (took 79.231883275 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.291618039 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.328157986 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.32383491 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.313068343 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.60290944 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.343885725 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2971842 seconds)
done (took 16.6914407 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.279789739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.280011815 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.283338758 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.305645424 seconds)
  done (took 10.337754277 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295150559 seconds)
    (2/2) benchmarking "read"...
    done (took 1.621850185 seconds)
  done (took 5.105997641 seconds)
done (took 16.63489753 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307865786 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.308081182 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.307906258 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.308061324 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.309219722 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.308494627 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.306049627 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.3086634 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.309418606 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.309986617 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.309076898 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.308564893 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310719661 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310435775 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308786335 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307999113 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.306670932 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.309505921 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308403468 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309883471 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.309925048 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310201977 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.308898726 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.308258716 seconds)
  done (took 32.601608804 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.310761457 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.309343761 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.309193969 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.30950056 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.311372444 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.309376897 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.310955145 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.311229632 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.309076096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.309450069 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309652654 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.3094417 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.30874494 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.310553592 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311486756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311077221 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.310327275 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309874834 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311904001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.310892691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.311952247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309060283 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.311116887 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310327408 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.310251041 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311053316 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.310848409 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.312052394 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311739147 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.310450929 seconds)
  done (took 40.50515504 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.315711092 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.320273347 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.311997448 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.313015847 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.311316486 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.311621357 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312863809 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.310269748 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.311375508 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.312497605 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.312811887 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.312362094 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.310785411 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.311838902 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.310155025 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.311945856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.312952635 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.312435428 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.313773198 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.312328929 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.312031613 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.311675644 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.312657873 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.313093295 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.314395935 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.312166561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.311647033 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.310454539 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.31339278 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.313375642 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.312132188 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.313652262 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.313386207 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.313009935 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.312684887 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.312732731 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.317522509 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.319446568 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.31283953 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.31189979 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.312561021 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.312516957 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.311998956 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.314682577 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.311736193 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.313822959 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.313634408 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.312529622 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.31339343 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.313294958 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.314521994 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.313647958 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.312865642 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.313896042 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.31528546 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.313880169 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.313298282 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.314277919 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.314651144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.314074369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.312372258 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.312807816 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.314765774 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.314557671 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.315811169 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.31496908 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.314401442 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.31446963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.316075762 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.315422369 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.315014674 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.315123564 seconds)
  done (took 95.757579803 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.314527384 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315425835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.314830682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315392125 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314774623 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316547208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315087219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317525693 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31427932 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.316915446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316628542 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317806438 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315375079 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315733074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316314563 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.317403712 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31550417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315138641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.316308336 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316026141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317580144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.315439557 seconds)
  done (took 30.147381081 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315292853 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317292393 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.317448355 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317657215 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.319549871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317857056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317233761 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318710467 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320166456 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317016509 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317044947 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317482819 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.318936057 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317269404 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317587687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320247509 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3181647 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319389388 seconds)
  done (took 24.922374802 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.317296785 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.317990978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.317065452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.316985328 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.318504282 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318514699 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317235218 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318052877 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.317107272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.319002974 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.318071371 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31830981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.318876787 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319755598 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317937359 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319246459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.317770406 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317952287 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318020227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319159292 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.318275435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320010709 seconds)
  done (took 30.20080131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319152879 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320028164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.318017553 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.318336249 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.319506207 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.319392152 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.322028221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.31889469 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.319909296 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.319526432 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320742151 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.320831951 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.321889655 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31965021 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.320698202 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319628546 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31949026 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.319168265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322500149 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.321304015 seconds)
  done (took 27.601430342 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322073997 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321957217 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322957345 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321663709 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321495022 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320647977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322523883 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.321981756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322553738 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.323372594 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.320599968 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319969152 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32163518 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.319715149 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.322006218 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321622791 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.321777807 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.322902845 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322456484 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322306061 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.322426153 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322855793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322519232 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.323337287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322751024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323239898 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322387893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32245222 seconds)
  done (took 38.220773458 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321380875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324344157 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.322353243 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.323891353 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.322583373 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.321320269 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.322637638 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.323094273 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.32290785 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.323826309 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.324463458 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.323982034 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323181337 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.32198403 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.324669942 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.322840068 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32220319 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.323533185 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323516195 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323028413 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.325131565 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324128828 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.322809946 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.323621254 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323889334 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.325086178 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325005699 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325155947 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324535336 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.324407373 seconds)
  done (took 40.909269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.342197965 seconds)
    (2/2) benchmarking "in"...
    done (took 1.343348472 seconds)
  done (took 3.889916862 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.324522031 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324073942 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.326769165 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.325196203 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.324409344 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.324947175 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.325056667 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325607241 seconds)
  done (took 11.805560446 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.317989283 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.326944077 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.326052536 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.327667749 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.327451347 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.317284425 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325773799 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.332494646 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.319592173 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.320260085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.325694922 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.326421176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.322617584 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320103205 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.319291443 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321934701 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.330174743 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.328227626 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.328790526 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.326744407 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.327472122 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322985319 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323247198 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.330332198 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.32061833 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.331432716 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.327711423 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.331519039 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321528583 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.326139159 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.322475724 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.330089211 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.327874778 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.328748592 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.328934537 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.327948704 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.329585874 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328621901 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.329849184 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332974616 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328907161 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.328691119 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.323252115 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.325813706 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326842613 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.332993917 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.328918933 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.328891029 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.321492371 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.325286761 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.336318264 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322171856 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.33189873 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325489624 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.327100337 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33618801 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.337548153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.325595135 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.32987914 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.332944157 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.341197501 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.33997247 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329892702 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.336166645 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332437591 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.347774555 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336044572 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.336730183 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.332156388 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.332588651 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.330413437 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342977186 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.34449925 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.337164504 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331989745 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333602818 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325980556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336522055 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333788397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.335612454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.337148209 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333283533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334352083 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346925592 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.327305897 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336424843 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.330946158 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.332293862 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.324233923 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336495822 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341501164 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.335097783 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.324449128 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.3280114 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.3297936 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.335815082 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.324973045 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32901818 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.337466261 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.331958113 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331859933 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327788075 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.33785803 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338373377 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33452736 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.334851961 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341139755 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326736825 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.337973949 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341541533 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3331279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.327506059 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.333138594 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.336565991 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32796909 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.335628146 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.339484952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.330564233 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.338535262 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.334085786 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335665902 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.354984678 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.34108833 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.333885628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.330906117 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.344146948 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335348428 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.333925191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.340101871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.336763321 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.334230135 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.332109086 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.341873439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.329344732 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338203805 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329655541 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.338417309 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.335500629 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337099693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.331836202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.335362931 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.331853918 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.33525263 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340172993 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.341177882 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.331970181 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.342967998 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337178727 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.334145204 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.337233033 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.342006597 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337463941 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.331499499 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.342358485 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.328359248 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341245366 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.331262993 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.340540305 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337636692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.338590389 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338829587 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.329071913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334806063 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.34191063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.338002976 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.337656168 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.340776612 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.338233269 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.338068361 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.33140903 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.340140394 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.328879012 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.334778599 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.345862058 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.339197675 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.338169842 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.337073275 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345019088 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.337691048 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338922195 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.333967993 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.342925119 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.343347745 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.341383349 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.346997323 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339698223 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340360964 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.334262892 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.33514324 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340250093 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.333911101 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.347083939 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346631659 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354246326 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.336204155 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.344121959 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.33084617 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.342705934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.338217172 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.347330383 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.339938807 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338853763 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331376877 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34312257 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.334559878 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.343510133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.333196144 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.341699656 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.341541969 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.339310665 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339610373 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.334670098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339785323 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.342809011 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.340339504 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340160386 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.332639718 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.344067676 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.332048448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.336083715 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.344597598 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.34117273 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.344507931 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.350368191 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338989673 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34487422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.341283559 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.336652698 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.344344456 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339600365 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.341243309 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348201077 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.34394539 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.338951055 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.347511921 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.344802147 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.336738871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.34287795 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.351952009 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343297697 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.337811615 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.350986714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.343979151 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.343158723 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.343226462 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336800098 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345085637 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.344216391 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.351582167 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.336356322 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.348602539 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.338547494 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.346638263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.339153185 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.345471364 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.343775619 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347222402 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.352059491 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.343203754 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.338178916 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.346959894 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.34290812 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.343460814 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339896151 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.35097662 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.345902061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.346592851 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.343530081 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343324121 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.349046014 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.337279619 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.347046046 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.336939024 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357277458 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.368310582 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349337332 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.349932876 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350091465 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348009947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.34848084 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343729047 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34167172 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344907592 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.341621911 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.340496571 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.349263042 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338541165 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.350550227 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34428181 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.347081831 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.349217667 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.346291744 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.337260058 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.350676404 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346705228 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.345879542 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.338758734 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.347803993 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.341472421 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349032046 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.346895627 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343053927 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353593932 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35277153 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.345856849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.342765903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.341544039 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.340671498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.343356925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.351304699 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.341755627 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.355495077 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.342830258 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.347593929 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.34379733 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354804984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.357686086 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342961991 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.356886695 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.348829444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.339224305 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.342967325 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.350257336 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.352971869 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.361592452 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.340810357 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.352396936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348387869 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.347874981 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.349253228 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.347492194 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350015702 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.349498695 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353896578 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.355382196 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.344629667 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.350982161 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35995742 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.348104132 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349761424 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.340174629 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350559921 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.361855303 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.344836241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.350311055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.34645945 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.352638328 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.349799682 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.34927029 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.350604241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.350480478 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354608377 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.355309563 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351979091 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.351513734 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.354390884 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360375439 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354735627 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.363727565 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.343688643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.35631682 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.349747862 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.345774926 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.346339613 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.345667415 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.354934578 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.343680052 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.355152029 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.350782643 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.346471807 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.352964673 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.35774636 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.343511483 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354283748 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373993776 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.344698493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356118284 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.352650379 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.343934244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.35671022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.351904006 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342257594 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346936224 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353914 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358133697 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.346054393 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.356597994 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346394969 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356280696 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.35238423 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.352626407 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.352649425 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.353694454 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.345075007 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.354106571 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.352166826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.365692662 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.348142424 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35202172 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.349878598 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.362299745 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.366352124 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.349219908 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359116605 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.354550174 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.347192493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.352701052 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.359094255 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347639931 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358258876 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.345467071 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35237489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.352249126 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.355536713 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.357419874 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.358803649 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.345960578 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.348876523 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.356966363 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.354251413 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354780863 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.351335924 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.363394945 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.347318661 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.347521232 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.357763507 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.350708622 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.362022866 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349679579 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.35536632 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351570256 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.359199397 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.356014936 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355886419 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.346770808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.349399124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.362116662 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.361944822 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.356492602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.355584467 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.361499261 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.349343899 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356366681 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.3566971 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.349624064 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.35287415 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.361029222 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.350494678 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.352023794 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.353049997 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359055785 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.361775311 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.360663468 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.351152509 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36490839 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.368354424 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364443568 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.350802768 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.353950011 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.352161564 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.359780628 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.359039634 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.349578118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366771527 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.365682034 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363025155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355987493 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.361293509 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.348638885 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363062534 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359382632 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.35453465 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.368396917 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.356229319 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365928511 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35968389 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.359054163 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.348519036 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.353613673 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.354380642 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.357287457 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.360102237 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359933349 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.362889581 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.358326157 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365492464 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359633585 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.359186081 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.357578005 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.350185501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.361765192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.351760793 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.361371453 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.363205784 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.353581307 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.363664405 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360008406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354953584 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.360161983 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.36766413 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.358512369 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.35348365 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.35867937 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.366127202 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371592516 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.359955215 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355851226 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.358827687 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.364317237 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361372582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.35986053 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.355606005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.373983818 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.37608894 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355079195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.359552006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365783184 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.371908406 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.360871438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.362673735 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.359306804 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.362920865 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.369845482 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.360225293 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.365100047 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369107075 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.35701155 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.365573736 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.35579181 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.36106258 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.364020803 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374075215 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.362919853 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.358618819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.377993307 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374558078 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364267 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.391340069 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.372539459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.365709862 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.367977779 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354669067 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.365500951 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.360053518 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.369671238 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.364942017 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362613482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.363063048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.356805899 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367246356 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.371684478 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.375723566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.366187828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.355263136 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.358881458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.365572591 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.36411434 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.365927144 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.363170007 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.364047869 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.365781932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.358680969 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.376570343 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.384846377 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.371353743 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.364042157 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.364729316 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.366899989 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.37081767 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36624213 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.373801173 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.365482992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.365479081 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.36469856 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376184636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.366418125 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.358670562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361249651 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358969027 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.369234723 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.374998006 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391866802 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.369229366 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.369412573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368460991 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.366588896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359775982 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370771327 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367230792 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.359833482 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.362459205 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37132896 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.36730398 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.366551269 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.361037931 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.37331799 seconds)
  done (took 804.154049661 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368142455 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367469489 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367659733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367292812 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367961223 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367533066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367488943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36900817 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.366475108 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368121874 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.3671349 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367428051 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.367295321 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367678825 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368033093 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.367131657 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367300041 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369044547 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368173615 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368528865 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368080281 seconds)
  done (took 29.962248306 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.367819076 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.36828076 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36922213 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.367661863 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368265901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.36984513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.368224525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370372312 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.369180709 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369082427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36931819 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368381877 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.368283341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.369268095 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369278609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368636884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.370114353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369697558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.368112225 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369601707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36882418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370241678 seconds)
  done (took 31.358414222 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.36988912 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.37103745 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364258004 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.373370351 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.370121836 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.36926317 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.370309084 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.370622484 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.37032647 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.362044693 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.363470757 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366113576 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.3689103 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.375802602 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.368141548 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.376998481 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.369887458 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.372291858 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.372077008 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.372596195 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.375021317 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.385690956 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.370329735 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.362143803 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.374226054 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.370195054 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.373322641 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.3726822 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.364900745 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.373981384 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.372647391 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.363848025 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.376795662 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.376936955 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.365773515 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.376367485 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.371248648 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.371530023 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.372540636 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.375655867 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.395846183 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373380972 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.376964126 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.388209339 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.372052565 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.367573445 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.380486984 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.372766627 seconds)
  done (took 67.112357164 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.373184595 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.372279408 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.375820513 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.373427555 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.374116361 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.372699106 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.373661833 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.373561691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.373332889 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.374387574 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.373601704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.373122037 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.373494931 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.374205512 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.374127339 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.373098967 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.374752781 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374764137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.37566718 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.37600068 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.372858574 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.374251938 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.374248008 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.373699931 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.374543559 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374975377 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.373940159 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.375051947 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.375452115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.37413976 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.375065686 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.375758733 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.374684417 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.374457357 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.374491473 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.374162962 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.374984672 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.374006705 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.376594186 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.374213989 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.37492459 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.375486977 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.375125753 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.377504638 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.376410411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.375201782 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377018309 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.375807426 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.375483478 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.376305502 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.377579262 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.376174095 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.376450492 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.377554319 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.376708395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.377379653 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.377470595 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.377911668 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.378219619 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.379650546 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.378826052 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.37797726 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.377472544 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.379470761 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.378830621 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.377994783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.37773788 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378161838 seconds)
  done (took 94.77829025 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379090234 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.378270067 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.378020161 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379352996 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.380198452 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.378027461 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379118762 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.37968311 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.378405182 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.379365562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.38030359 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.37702255 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379943619 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.38004657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.37819851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.38109395 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378681829 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.378677312 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377630925 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379558209 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.378303939 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.379484228 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.379730821 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.378123448 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.378647205 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.379459273 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.378459682 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.379700809 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379662641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.378073014 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37950248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.378866389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.379011568 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380294354 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.379242968 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.379425806 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380066335 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379500843 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.380739686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.381103452 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.379637085 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379472487 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380447091 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.379866535 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379383089 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382601457 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.382495021 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.380429101 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.380819221 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.380437867 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.38021694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.380561088 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380618182 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38145919 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.380116187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.379779241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380827183 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.379765484 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381116247 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.380300168 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.382628034 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.383036007 seconds)
  done (took 86.795948971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381274339 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.382575608 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.381999797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.381075689 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.382496203 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380825572 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.382742492 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.381007739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383298372 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.381160152 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382956251 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382049424 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383470848 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385479846 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.381390765 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38249066 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383720099 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384018874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384358947 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.383998571 seconds)
  done (took 28.905251687 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.382284356 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.383791035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.382951368 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381976868 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.383282703 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.383202526 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.382116058 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384496149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383200689 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382888189 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383520906 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.383767246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385022056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.384158194 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.385428725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.384992161 seconds)
  done (took 23.390676924 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.384091532 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.384417933 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.384823698 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.385882191 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.38404 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.383811795 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.383630024 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.383880833 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.384672008 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.384162586 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.384751652 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.385148817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.3847279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.385392211 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.384245005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.388321773 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.385770744 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.385668901 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.385791934 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.386211124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.385441295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.384716671 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.385698168 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.386357716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.386734906 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.386665526 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.386273314 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.3860143 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.385450558 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.387604484 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.385916349 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.387753415 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.387693158 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.386166573 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.387200349 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.388760158 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.387069115 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.387737155 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.388185018 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.385930482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.386620907 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.388616088 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.386151219 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.38864995 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.386770479 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.388915077 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.38879117 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.387208257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.388103641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.387036007 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.38920806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.386531966 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.387647551 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.387350207 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.388351007 seconds)
  done (took 77.504579645 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386956965 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.38806844 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.388973021 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.387597468 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.391704901 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.386180837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.387697986 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.391016141 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388721776 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.388221109 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.388987127 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.389960707 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390067329 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389580003 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.387941549 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.388621445 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387720884 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.38927231 seconds)
  done (took 26.25506806 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.387502016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.390319117 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.389273752 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.389929446 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.389208471 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.390274703 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38920527 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.38935832 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389412973 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.389423806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388225494 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.389534577 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390295835 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.390691578 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.389373066 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389851408 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.390539542 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.390428131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.389017179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.389469701 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.390681081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.392377249 seconds)
  done (took 31.831314956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.379719466 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.381017961 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.380946881 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.39749928 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.401090122 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.380469884 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.382296148 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.380668499 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.40556393 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.430092495 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.421960805 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.399105456 seconds)
  done (took 17.999090815 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39160108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391617036 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.392143165 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392237429 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392274449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392438274 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39056029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393331368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392469735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393407871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392143261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392518319 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392366473 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391773676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392569033 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39326272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390575312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39280125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391994646 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391634809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391955267 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392446834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392830433 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392146306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393570975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39444371 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391586679 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393280388 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393353611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391761968 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392389233 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392120347 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391455844 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393938167 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394541955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392589616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392889881 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394355915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393137336 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393991119 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393474438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392958348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393458607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39213323 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393795412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392600242 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394173264 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395040709 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394492239 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394965804 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395773871 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393766055 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395578437 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394243082 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39364963 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394416445 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394650116 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394445469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393605511 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394531637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393939783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394786985 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39575873 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397071159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394602289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394030393 seconds)
  done (took 93.218111727 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3931948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.396146879 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393161554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396256837 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398043286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396466783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395364612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395467245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395224969 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395070319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395215243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398021844 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39746105 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397143309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397046597 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397425458 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396697397 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396332572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397111939 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396549427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396270842 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395861668 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396567488 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3966151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39745619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397562985 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397510401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396875609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397545208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396639826 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396668924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39784666 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397894959 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.396773492 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397547149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399245281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398126694 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399369628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398922315 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397692334 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397826915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396490924 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396847768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39751805 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399039978 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397384018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39810986 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399378712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398166171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39990153 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40000843 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398694265 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396603083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39802068 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399796665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397567893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399126676 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398328278 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397838945 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401715862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399880006 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400252224 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400550889 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400251147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398665736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399317246 seconds)
  done (took 93.50635969 seconds)
done (took 1884.525158493 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.557567963 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.515175924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.389869078 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.427979452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.389864021 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.399107436 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.402383707 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.39196074 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.389058632 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.391390662 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.390083455 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.587866931 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.447609547 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.391294919 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.391513181 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.490401623 seconds)
  done (took 28.222139598 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.419868777 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.401827682 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.528602644 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.395319408 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.422523663 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.614655153 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.463984265 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.396776852 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.595787335 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.416494685 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.389219049 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.431714266 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.396534506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.386977804 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.416853259 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.612731824 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.693194247 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.392075262 seconds)
  done (took 30.644401572 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.924932954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.418245763 seconds)
  done (took 5.61199216 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.418008828 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.395394562 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.398255969 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.396058022 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.38681441 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.387391168 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.395282404 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.394574681 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.38685705 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.542400372 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.399186775 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.410561776 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.39749837 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.398187947 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.405874406 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.443385288 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.547664769 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.405801105 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.407653471 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.404479989 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.397667328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.500208867 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.443990351 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.406137947 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.543882079 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.406615192 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.405679946 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.404842541 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.516078324 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.409199287 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.397030416 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.398704435 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.400801269 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.39150898 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.974992771 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.396838467 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.425667907 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.406707166 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.407491096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.558493108 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.400423421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.406039919 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.393393625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974089813 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.511203359 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.531159613 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.400236562 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.399616676 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.39934825 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.468359171 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.401428758 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.400896553 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.460487031 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.263004436 seconds)
  done (took 89.202074621 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.443391784 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.392226703 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579906561 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414657042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398563475 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.411078873 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.414774624 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.739916356 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.416183048 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393750823 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.744125533 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.074335094 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.394289321 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.458926153 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.433171857 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.447868165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.394562191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.410923198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.416893566 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.396560545 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.000773987 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405080056 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.392827424 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.464653341 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.437238502 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.001370045 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394502232 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.393875265 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.412905847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.394094856 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.041083812 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.396924788 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.451552484 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.394541642 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.71002029 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.851456787 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.808654106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.401968543 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425224462 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.397414303 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.418807758 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999361831 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.829810074 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.395353813 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.40073621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000905608 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.394491147 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.396696605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.40097666 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.671275487 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.394701874 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.396690852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.395654638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.397101517 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.395889453 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.45436242 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.453497088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004244049 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39896478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.394678849 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.398173783 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.397186847 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409465659 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401372148 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.397062737 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.834924839 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.646202625 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.401142027 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.834514428 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.033999359 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.395565495 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117662652 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.396664667 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.401801943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.437369982 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41078391 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.397781235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996480188 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.430200252 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.397910213 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812213526 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.398919959 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.729509179 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.418233793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400706754 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.023833094 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.405696309 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.442130909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.397846977 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407229741 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.399040479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40202873 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.720197168 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.445468436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.398944468 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.397041635 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.401797499 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398990021 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.398965177 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.40841584 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110925966 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.408124476 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.398208623 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422677395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398626925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.405990223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.399314173 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.400445266 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.689133693 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39975077 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.405001809 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402296859 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.399539277 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.401681583 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.48030724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.398924484 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.769010903 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.402867859 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399204165 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.420999101 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40010106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.427966287 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399310569 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.424887808 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.401216668 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.719372688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.419787513 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.401413535 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.400581249 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.400043998 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.401054367 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402203114 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.45805293 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.402164555 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.259358414 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439998945 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.446046149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.401132636 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402184984 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402585519 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.408955013 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401650662 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720653024 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.71829556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.652013554 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.401260747 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.402574158 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.27694826 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.444519126 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589586504 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424493552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402826437 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.708409 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629032245 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405171256 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.408500242 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.407066633 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.689359185 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.402387815 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736504409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.070802516 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403558843 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.403447495 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.258164415 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.24516894 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.405067045 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.404535632 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.732305506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.424484217 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.402148657 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.403674266 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.404674344 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40344125 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.404460089 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.414354292 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.402965905 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.403476279 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.745619103 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.603684934 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.423066993 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.414877784 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003827156 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424989663 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404811215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.41764208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.412846767 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.404604799 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.454058721 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.40640361 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.43677607 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.403854685 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.415937905 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040030794 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.423035286 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.405653317 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604341236 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224395718 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.411828953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.406034566 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.405294206 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.462461265 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039404393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.470938471 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.776476256 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.419489788 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.449649707 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.417642012 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.418000606 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037653483 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419517219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.407226646 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.219175603 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.410193548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.849529623 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.405722958 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.407759601 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.156032335 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.411642405 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.408325487 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.406255635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407149604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.726806211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.406380903 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.407122908 seconds)
  done (took 516.746626714 seconds)
done (took 671.694884581 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.406302638 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.411531735 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.412137674 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.411949024 seconds)
  done (took 10.928316439 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.427584554 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.413355915 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.424135178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.412887998 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.423374152 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.412983602 seconds)
  done (took 9.801198264 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.407734948 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.412795462 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.413583899 seconds)
  done (took 8.52032287 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.65452942 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.440542115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.843259271 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.417513941 seconds)
  done (took 9.643491869 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.426068778 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.424714793 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.424751061 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.425406466 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.427631472 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.426928314 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.425646664 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.42593334 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.426364714 seconds)
  done (took 14.117660615 seconds)
done (took 54.297946053 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.495595767 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.439857955 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.440940693 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.388011549 seconds)
    (5/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.441410875 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48361331 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.581155614 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.446403668 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.411111633 seconds)
    (10/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.490315219 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.722508497 seconds)
    (12/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.726961798 seconds)
    (13/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.446636835 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.682368472 seconds)
    (15/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.388599274 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.41583819 seconds)
    (17/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.478883183 seconds)
    (18/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.681741145 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.574038558 seconds)
    (20/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.581198561 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.574633623 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.518725264 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.494925357 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.683069324 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.526387544 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.00449239 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.394550873 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.446362281 seconds)
    (29/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.39514043 seconds)
    (30/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.546314934 seconds)
    (31/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.466585865 seconds)
    (32/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.441981465 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.495218883 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.389041318 seconds)
    (35/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.500351723 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.398989944 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.492509598 seconds)
    (38/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.392530667 seconds)
    (39/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.395665237 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.597314972 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.575103426 seconds)
    (42/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.647576836 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.546880777 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.396614424 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.777619866 seconds)
    (46/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.490576717 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.605840416 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.607619676 seconds)
    (49/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.521753454 seconds)
    (50/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.732861955 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.528967871 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.582025589 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.509917908 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.516279452 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.406776701 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.460007808 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.396114616 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.025368541 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.755397505 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.391771751 seconds)
    (61/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.46945959 seconds)
    (62/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.451523992 seconds)
    (63/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.596089644 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.627162853 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.533921667 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.403167872 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.494176704 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.509528435 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.528463873 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.506280731 seconds)
    (71/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.90822492 seconds)
    (72/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.536281171 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.393383624 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.530178297 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.614848279 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.418484641 seconds)
    (77/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.601028038 seconds)
    (78/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.736509341 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.50677433 seconds)
    (80/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.455747692 seconds)
    (81/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.453895533 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.541853359 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.64676771 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.508609172 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.539798421 seconds)
    (86/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.765656088 seconds)
    (87/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.393084085 seconds)
    (88/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.580599105 seconds)
    (89/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.454418859 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.825548839 seconds)
    (91/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.700989901 seconds)
    (92/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.394671866 seconds)
    (93/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.46182102 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.549576672 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.588342283 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.451931495 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.415798478 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.457283824 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.502821865 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.394284511 seconds)
    (101/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.434727524 seconds)
    (102/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.439100975 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.466414017 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.528164949 seconds)
    (105/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.395487632 seconds)
    (106/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.673788544 seconds)
    (107/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.395579997 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.657404914 seconds)
    (109/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.525339072 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.538754474 seconds)
    (111/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.526193172 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.458889224 seconds)
    (113/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.466484796 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.411172102 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.585844116 seconds)
    (116/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.488198906 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.696071709 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.558683748 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.545919783 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.431144846 seconds)
    (121/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.410338053 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.434352382 seconds)
    (123/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.401118817 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.583937856 seconds)
    (125/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.411793323 seconds)
    (126/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.589354093 seconds)
    (127/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.823576641 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.703799088 seconds)
    (129/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.637493496 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.514003265 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.406649795 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.436052144 seconds)
    (133/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.456178597 seconds)
    (134/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.425850614 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.573396478 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.511940078 seconds)
    (137/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.632762632 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.56879561 seconds)
    (139/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.413151374 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.661756892 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.486171723 seconds)
    (142/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.660036331 seconds)
    (143/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.514659117 seconds)
    (144/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.701952002 seconds)
    (145/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.604890614 seconds)
    (146/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.543765797 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.736411379 seconds)
    (148/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.400910387 seconds)
    (149/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.51343233 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.556539746 seconds)
    (151/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.609738062 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.456025138 seconds)
    (153/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.572868449 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.410919201 seconds)
    (155/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.649548232 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.488064165 seconds)
    (157/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.606613045 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.624663036 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.829445321 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.506511382 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.399352416 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.459349149 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.734547433 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.790323268 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.539786725 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416171959 seconds)
    (167/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.411882134 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.600524656 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.692921665 seconds)
    (170/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.508288149 seconds)
    (171/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.829357787 seconds)
    (172/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.506399688 seconds)
    (173/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.541186815 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.5551667 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.823199637 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.502359517 seconds)
    (177/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.515466728 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.527857576 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.447173751 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.700363182 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.544767522 seconds)
    (182/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.45221228 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.624744429 seconds)
    (184/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.663597622 seconds)
    (185/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.455312438 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.533750153 seconds)
    (187/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.654124696 seconds)
    (188/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.400352223 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.569163217 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.505137172 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.464180499 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.590133236 seconds)
  done (took 344.948947078 seconds)
done (took 346.238721132 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452355201 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.530568425 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.432027291 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.430891688 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.433579062 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.424323274 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.454205496 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.432134948 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.447775007 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.448157343 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.424646255 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.442875929 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.448718046 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.443435795 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.464693095 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.43469208 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.432795232 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.444300346 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.447695154 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.451531514 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43432346 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.433841596 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.459453389 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.433851111 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440913843 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441690413 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.440942692 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.42427732 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.441448414 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.449730812 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.432699882 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.441252167 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.450321167 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.445788269 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.435479518 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.445734252 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435799369 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.533461591 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.4572154 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.445816851 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.444031341 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.450298973 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.441978597 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.440280124 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.447297575 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.461650973 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443963629 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.450622378 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.434859032 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.441928416 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458816379 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.449647826 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.444808352 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.441612756 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.428764871 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.451020536 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.446523441 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455584927 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.443246691 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.437006845 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.469641567 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455493396 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.448029 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445977023 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.442949941 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.451521291 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.446207138 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.452788632 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.444679866 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440088738 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439284227 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.444184904 seconds)
done (took 113.443976465 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.558305686 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.43091683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.593404976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.444200175 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.604481474 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.555925451 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.4438131 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.44527981 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.444052165 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2317784 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.44512619 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.44443217 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.433754302 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.443801361 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.555580053 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.445951688 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.445118665 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.130129975 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.446999091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.573142116 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.429890288 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.445866509 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.446375135 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.244434038 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.435496785 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.432065433 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.574339953 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.446451373 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.142958465 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.427865892 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.430613467 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.145029875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.572546301 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.46567947 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.45640839 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.454248196 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.605140318 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.450865634 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.561360866 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.562295801 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.593397083 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.483812515 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.430630017 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.434330311 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.449898711 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.446770378 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.44550479 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.47569755 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.434322129 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.446691091 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.134123952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.459952136 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.447988315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.447651965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.449907766 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.475553668 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.448121158 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.447155756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.573641233 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.448731438 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.560595869 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247576439 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.234210779 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.449037804 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.434104517 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.44796597 seconds)
  done (took 115.498735712 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.50978969 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.516758194 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.562601642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.438008339 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.487898946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.562559889 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.44119661 seconds)
  done (took 11.825311352 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.444470116 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449291467 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.487167509 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.487680706 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.4484365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.61231729 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449754905 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.451764259 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.448488498 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.489729692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450355027 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.450518871 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.458728285 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.437808801 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.487752095 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.451180822 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.555677919 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.442327606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.450550263 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.594893193 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449473739 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.459507765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.491791413 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.450525628 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450794309 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.446724744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219541084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44981552 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.449093016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.450647315 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.449875834 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.505419207 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.450975338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.438632638 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.449779149 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.555631912 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.449722558 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450917094 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.452916917 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.443090465 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.450588943 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.451441884 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.452355145 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.45005305 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.452136176 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.466951211 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.451138921 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.451663481 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.450973299 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45091091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.490793457 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.449601889 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.45315962 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.451743304 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.495552696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.462018415 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.452104959 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.451334879 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.451826163 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.451317169 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.597738543 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.489756035 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.452020749 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489473979 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452094151 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.451322407 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.45338343 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.452318211 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.534628449 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.45344748 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.491019885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.452666134 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.625753326 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.468528144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455367052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.447959131 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.447050348 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454300039 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.440553126 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.449728606 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.451339818 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.446275615 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.449943683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.452740338 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.453355612 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.602088016 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.55460531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.454798375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.460648304 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.451539791 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.45466388 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.496867893 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.454336019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.45354861 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494589217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.560988488 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.495289686 seconds)
  done (took 148.707827616 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.457346197 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.457071681 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.446796004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.470840714 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.447343231 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.445092722 seconds)
  done (took 10.036793125 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.448232035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.458344531 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.455686921 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.455054743 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.454962285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.457383146 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.456801454 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448732576 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.460938016 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.456755112 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.456862725 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.456869528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.455897813 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.455751842 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.456962351 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.455563054 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.455796938 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.456621994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.457232196 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45682113 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.445014135 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459257492 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455697022 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.450677413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.460312256 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.455962606 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.471365718 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.457162862 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.45687174 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.456394371 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.462362437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.456862551 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.449484046 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.45470569 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.460778577 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.451208156 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461983205 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.4596553 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.457813954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.460340603 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.458740169 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.456705361 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.460405116 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.458884121 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.450465293 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.455398887 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463793457 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.47256413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.458616034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.460548737 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.460147415 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.459523611 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.459544553 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.460596915 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.452983465 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455339273 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.463862769 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.458873763 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.461436099 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.453306201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.462110041 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.458477617 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452475457 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.464152038 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.460929773 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.462281326 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.453366874 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.464243273 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461052579 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.459243618 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.461442064 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.459241049 seconds)
  done (took 107.278524615 seconds)
done (took 394.65202039 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.025209082 seconds)
  done (took 4.341330199 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.568823799 seconds)
  done (took 3.887999942 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.204870459 seconds)
  done (took 26.525141674 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.491845932 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.457918959 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.458656704 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.451081331 seconds)
  done (took 11.177438462 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.812514968 seconds)
  done (took 4.129708848 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.460614713 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.453351032 seconds)
  done (took 6.23236362 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.759267416 seconds)
  done (took 4.076051847 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.849365533 seconds)
  done (took 4.170833526 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.481776136 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.457212198 seconds)
  done (took 6.263551053 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.438062443 seconds)
  done (took 3.756535026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.516136714 seconds)
  done (took 23.834605633 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.46889575 seconds)
  done (took 3.789605928 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.498132201 seconds)
  done (took 3.815674761 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.663156762 seconds)
  done (took 6.982217665 seconds)
done (took 114.301316975 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.444749175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.450481786 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.452024641 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.452670866 seconds)
  done (took 11.118054929 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.525370487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.525374751 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.533286163 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.520370521 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.518548986 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.529003704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.487004995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.486326936 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.516678184 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.514121821 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.532139756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.519482201 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.52793464 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.488263368 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.515161613 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.530899414 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.517713757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.535050737 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.487908554 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.519828484 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.462381323 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.51946749 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.515154174 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.461970885 seconds)
  done (took 37.608815239 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.953269091 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.529151588 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.607721403 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.505286106 seconds)
  done (took 7.914140932 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.568427507 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.567914491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.598723379 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.624314188 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.670393275 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.585161311 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.488133054 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.485168919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.470552388 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.569030462 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.654310944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.56875277 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.786053407 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.464852345 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.782719926 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.463893096 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.465511318 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.567317145 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.617972444 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.648331197 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.464045984 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.567518945 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.575808698 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.569177449 seconds)
  done (took 39.143285599 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.472112732 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.481945156 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.46512584 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.479854072 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.464867363 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.467225518 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.467044039 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.472006927 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.463536163 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.465623248 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.466387886 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.479481997 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.466166199 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.466432728 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.474170177 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.467398198 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.468745087 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.471992361 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.474663794 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.466071225 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.467861928 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.473426346 seconds)
  done (took 33.66184803 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.450174912 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.450364906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.801593154 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.705241448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.450512047 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.449893165 seconds)
  done (took 14.628853937 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.541977334 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.695906331 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.456907048 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89036127 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.982628626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.462060187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.457335901 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.745077944 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.117678382 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.143471016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.531485638 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.541267177 seconds)
  done (took 21.88997194 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545546497 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462141106 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462923783 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515303252 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469364522 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464562457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.532732766 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.285184124 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.475317816 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740579285 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463153308 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547712846 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.714634343 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470883936 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468137453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.434223161 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700201929 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041352485 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468983773 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465588264 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524455333 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.46691565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470151062 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.717871614 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471883494 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465174109 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.860750354 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464664229 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810524448 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791056311 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789118001 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471641146 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74188516 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19936087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578408818 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712218862 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478333655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467770182 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.457398464 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.472245091 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474795775 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468322625 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784120052 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474216946 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465719746 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468775784 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317597204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.479779146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.465802576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46814375 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790477478 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556657094 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.471252662 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467569134 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479622404 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472204372 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.473871298 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60145231 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111861039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48102338 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484533315 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.471956908 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475183503 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480675343 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218361879 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.47691056 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.474384583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474101992 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467166601 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466149071 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49570118 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468548561 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.489904925 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467507669 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395627743 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470936597 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46925931 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100481973 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470660075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.470922564 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699151456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468955105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469588254 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.470085053 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46960652 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379416155 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484465487 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.436822449 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518468448 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.284439105 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724753807 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498520331 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499618428 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.693282311 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.437195422 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470685528 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.486158722 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474900448 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491555014 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292837225 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475201199 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.477995428 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719942565 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.68302205 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482015999 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.445095674 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038230657 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477749448 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.501157783 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482491846 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.725698399 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.228957555 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805202152 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479368017 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531550706 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470501691 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440824875 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478149879 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.4854596 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473129181 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7885494 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.460500943 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478450354 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54581329 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481256255 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473061024 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471391271 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479229597 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472496787 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.700366904 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492998937 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802315004 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.479588609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473618406 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.478013247 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497358348 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.479482249 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.696919082 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476260165 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75294623 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473029476 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472057662 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474585618 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.693390378 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474690704 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.486054903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816766991 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484264062 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489490091 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802635015 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5129986 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586712387 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506285801 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.484481825 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.730238713 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.480274373 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.479701985 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474996419 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482269261 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477726824 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.483845631 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467830563 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2115637 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468343421 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482118045 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474796266 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.492683309 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549783006 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483604425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.72478127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.491717643 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468562796 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.482583235 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.487592611 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703438124 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80172632 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.483035831 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652798099 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.03801772 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204932865 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490079678 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.475738351 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.47561356 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.475301201 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476837846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475215679 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476920259 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726603735 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81345364 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476049476 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207879208 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477191556 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479990312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.487613241 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801786328 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.491778499 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477622562 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.476453385 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481619166 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488490948 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.804020817 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703210205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.49469427 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477818531 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.995713959 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486413416 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48093016 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477321067 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504380143 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484901407 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483719691 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825329812 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468374504 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80537862 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486768562 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.501752536 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.47652208 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478081204 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489898283 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.509255838 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487940709 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.73135191 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488353404 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485931394 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118990368 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426175784 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143102393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489644542 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.485033164 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482205029 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310653424 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484983189 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481842815 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765801434 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306471958 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484335114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043525394 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.49032691 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.418783267 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80712171 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715229709 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489992946 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.505809183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806039549 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.693296703 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509578122 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489630815 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485637661 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.450530649 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092934763 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490908002 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666288066 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302082927 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486124301 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50841009 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.546463379 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.488001606 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968537227 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486361834 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48205174 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48537795 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506150251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417358295 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488391694 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482236373 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252670406 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483838957 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.055228682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488915184 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.737131532 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.814249319 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.781964782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.485682644 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.488703679 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.734105635 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808914661 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488850456 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48467152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1585065 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.351325083 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.492464364 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483797587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466921695 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495365964 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831934105 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.499401129 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.492165885 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497568171 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483591693 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483285878 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.483731962 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491592047 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477350583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06466404 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.476131007 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489586821 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498590748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491241559 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.732742122 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.500929419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216835939 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714802139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490244622 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520340619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.489512681 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486250047 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.459490667 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484866879 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484197133 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566002015 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712580286 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491401338 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.459746877 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.553645637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.70191272 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484898647 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485049021 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754474391 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.492924982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.492930317 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438685796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517652606 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485216434 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513470043 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480170833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550924154 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563885204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738765454 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.812027003 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.806770974 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970228636 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506079668 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492968477 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.502217049 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568358527 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500792182 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.499146921 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.491038832 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217415006 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430169402 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25288997 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815979516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489405557 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497407424 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48703241 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729918342 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487451637 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762980783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48857803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.502482784 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508580922 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501309083 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492278425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705809127 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763688936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48953263 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491177024 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493650085 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.486123644 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815378393 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.703274036 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074873534 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128650474 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49116048 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491088087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326421565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771503542 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48950913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490254825 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489365184 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.494463948 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.491582867 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.499814831 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50286246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713876728 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80796339 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234250593 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.8145356 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.524157218 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.490399957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490507722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.742817111 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332004167 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.743257103 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232643253 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348337846 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745081374 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562732452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746265569 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.494853055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726602456 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.49459496 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490251295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49188016 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491358794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.491836079 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8082559 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254345491 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751914459 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.496728416 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.495594694 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519941246 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.74674885 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719611774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409993879 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.717476855 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817735287 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502279964 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491519384 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263226946 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820716051 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490994923 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.498621508 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754982164 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498536437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529197763 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.373045963 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.491940502 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135020366 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.711208967 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515856345 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492233772 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397540716 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266240841 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.509278314 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083744949 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495504094 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505093111 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775654539 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.501148597 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494973933 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779379911 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.498957004 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492845194 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776325794 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.230387835 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.431995159 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.50776476 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495783991 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.500259171 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494735964 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533470656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499025017 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50407203 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.982808872 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498117487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493506415 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507468521 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.500176155 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4921526 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.500161074 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493445159 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.503389822 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.474433376 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.478523106 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516630034 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636212396 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174654068 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505852193 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.109815636 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.833806297 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.745399597 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507738844 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.471274725 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.501056898 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496643709 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496804896 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497041655 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490536689 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160600947 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.511690094 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.824144009 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503635911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.708734794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710637615 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497893541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760113628 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502503963 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526197382 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.463767089 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497986976 seconds)
  done (took 1043.614096356 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.54251539 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.544374844 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.501143347 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.530442702 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.557358519 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.506240423 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.552339984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507639834 seconds)
  done (took 21.596645266 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.489751074 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.496457276 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.504178475 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.49657994 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.498832706 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.062204082 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.500058785 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.497699293 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.512096849 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.503691113 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.504652283 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.225578718 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.498243159 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.50677826 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.49701147 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.503325887 seconds)
  done (took 34.660811659 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.752053133 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.721843052 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.194639789 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.498754203 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.509703247 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.510352835 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.899134971 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.508740382 seconds)
  done (took 28.952770393 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.50339364 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.504050292 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.504629297 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.505466498 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.50587323 seconds)
  done (took 8.879214971 seconds)
done (took 1304.990374001 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.505910131 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.505664739 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.50540015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.506056586 seconds)
  done (took 7.377976582 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.468949115 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.46887746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.472785476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.488553524 seconds)
  done (took 10.254669854 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.350756303 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153489564 seconds)
  done (took 5.862490581 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.083534441 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.070577416 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.0725995 seconds)
  done (took 7.584060809 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.805514672 seconds)
  done (took 3.163067786 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.492037096 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.489931151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.517849106 seconds)
  done (took 8.858925055 seconds)
done (took 44.460123321 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.495442306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.262228235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67223158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.490742058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.680527991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.647830447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.772219267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.505585711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509420529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.507666343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.490769325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.657043197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.760835157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.26294355 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.759444974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.262408127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.654480378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503300399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.499857075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.507591442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.774315561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.493003263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.494515703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.491687181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.656181166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.638192448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.491843346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.264499605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.493443637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.495888528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.638797882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.497147052 seconds)
  done (took 86.690958445 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.504273226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.507663295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.493919064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515025164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.492541298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.4944157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.513162799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.493473729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.504944322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502704694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.494225854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.514380359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.498009628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.494635167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.517170972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.494038815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.49474073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.507461061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512744685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.494163789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.497132413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506313276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.509244285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.510542744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.496203095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.516120253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.493905616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.495795423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.496081492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.513699242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.497758653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.495947997 seconds)
  done (took 81.433187178 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.511090393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.496384122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.497815765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.517649535 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514936027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.500720558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517209113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.496783034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.495673797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.512533634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.508547877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.497798882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.49712534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.498116599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.499266659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.495559097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.517410273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501272056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.496934257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.49604545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.500347235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506988453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.498499245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.495945983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.500371354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.499508478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.496501667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.529079846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.497102938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496638587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.499823925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.499427817 seconds)
  done (took 81.451330585 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.740834427 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.51441361 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.516897213 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.508996428 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.517349936 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.511690093 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.507522472 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.747222628 seconds)
  done (took 15.928144669 seconds)
done (took 266.864876642 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.509483358 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.087245772 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.535898848 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.508602866 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.52621376 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.537223672 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.74533612 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.535737848 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.731840004 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518042055 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.523772575 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.525014433 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.484557908 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.660406939 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.428216666 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.510768911 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.531745764 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.499708085 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.17419327 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.763600848 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.537363801 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.519548864 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.442980566 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.521131296 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.490205919 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.587663708 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.583973923 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.675941193 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.639039752 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.582235024 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.118172176 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.515545036 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.509590299 seconds)
  done (took 69.425269718 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.506459379 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.514853991 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.515744927 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.516665853 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.516762883 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.517046104 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.50625665 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.51662688 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.516858728 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.516033883 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.517380879 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.517722643 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.520350066 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.51740151 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.51596623 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.492397952 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.507304352 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.517574358 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.506256611 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.492084599 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.516346711 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.519210688 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.519693281 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.51754347 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.517651522 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.518312913 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.517062891 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.519291553 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.518774839 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.517258681 seconds)
  done (took 46.79483601 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.519688858 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.166888169 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.379464185 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.514754825 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.510949712 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.51406788 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.868980627 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.52028104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.515742795 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.516017708 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.084828357 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.52406937 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.552139091 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.392408373 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.515380517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.521580189 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.522827886 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.513544703 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.1746286 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.523824939 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.871115883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.522150653 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.871045134 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.526875876 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.518080968 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.513676754 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.518796947 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.397611798 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.538079687 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.083014658 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.465443487 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.861562165 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.363480446 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.446497752 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.487045699 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.527407049 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.52143218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.089210623 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.515894332 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.51448844 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.86887838 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.51589851 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.393568387 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.246232171 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.53498955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.522955551 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.446831884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.085154786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.817656753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.52037048 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.436219918 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.51669593 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.523978135 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.515674892 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.816481451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.516725792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.514957211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.490418553 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.518653583 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.869572206 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.525811062 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.513962273 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.170701226 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.514582015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.178205813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.516816727 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.522411827 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.514393571 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.395253582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.518510977 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.26941272 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.536492252 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.523891026 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.088741161 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.175256518 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.490726206 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.518059301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.183795195 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.391898523 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.896147788 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.525728181 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.376340688 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.894269023 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.520213285 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.527527651 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.526994278 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.524812931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.588932271 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.873186882 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.199707367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.252545697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.503567462 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.880267708 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.529088038 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.517964451 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.49254263 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.526675774 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.527610278 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.396193488 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.255804763 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.538916614 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.526123989 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.240438972 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.54207123 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.881793655 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.530302868 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.440274023 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.520305803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.637258982 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.526561673 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.52435397 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.521678233 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.874868025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.521627609 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.527944564 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.244793851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.122906487 seconds)
  done (took 214.156101694 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.516924106 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.512773727 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.520898288 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.511657734 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.514022032 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.521086106 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.511141576 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.510663929 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.518909981 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.511534517 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.511619383 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.520517816 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.520453153 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.513318471 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.51119058 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.512437833 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.513575561 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.514379099 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.531634495 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.514353651 seconds)
  done (took 47.68805583 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.529381864 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.22505856 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.182702438 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.534862111 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.530916565 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.520073362 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.591201434 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.536086088 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.529868488 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.893960868 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.740083162 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.532658969 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.529757508 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.530511482 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.178509766 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.507386278 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.903789908 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.233450103 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.535202951 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.227249945 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.506192963 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.530811107 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.519560186 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.225231346 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.920646283 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.886794184 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.599678931 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.233475506 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.535743936 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.530425604 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.227012905 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.537115444 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.522285346 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.213897416 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.537861575 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.546561953 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.530933809 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.596222818 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.601655338 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.909418952 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.239294353 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.896164428 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.546971361 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.716154361 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.532906788 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.502580879 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.240407422 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.537969263 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.506063202 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.533860925 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.537971918 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.192582458 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.529542906 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.192711748 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.53801992 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.534647855 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.22737714 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.197587397 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.188771747 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.746034373 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.529477066 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.88131725 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.539413458 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.229654874 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.539322789 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.534124523 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.532172509 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.74277872 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.21571657 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.884191899 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.9007858 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.899977913 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.535638536 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.609141952 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.539293628 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.897611363 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.613049141 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.983453138 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.899727756 seconds)
  done (took 140.725109795 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.843515494 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.657269347 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.993999364 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.193115683 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.094913703 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.676202114 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.656870694 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.81104243 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.55114204 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.639313371 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.321456357 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.635602026 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.365525782 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.607383941 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.651936328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.673220108 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.995140075 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.524635752 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.241591824 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.279994263 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.527484145 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.641494233 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.116525636 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.75198126 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.52601167 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.138870272 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.542254369 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.113793491 seconds)
  done (took 58.152538005 seconds)
done (took 578.308133998 seconds)
SAVING RESULT...
DONE!
