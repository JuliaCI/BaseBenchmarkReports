cset: moving following pidspec: 23693
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.979282405 seconds)
loading group "string"... done (took 0.520254198 seconds)
loading group "linalg"... done (took 8.433076617 seconds)
loading group "parallel"... done (took 0.173150207 seconds)
loading group "find"... done (took 3.875300323 seconds)
loading group "tuple"... done (took 1.842137602 seconds)
loading group "dates"... done (took 1.338565682 seconds)
loading group "micro"... done (took 0.188168053 seconds)
loading group "io"... done (took 0.491648562 seconds)
loading group "scalar"... done (took 50.287553186 seconds)
loading group "sparse"... done (took 13.797315216 seconds)
loading group "broadcast"... done (took 1.284526954 seconds)
loading group "union"... done (took 9.226134486 seconds)
loading group "simd"... done (took 3.08901489 seconds)
loading group "random"... done (took 11.752095395 seconds)
loading group "problem"... done (took 2.237543514 seconds)
loading group "array"... done (took 24.489100558 seconds)
loading group "misc"... done (took 1.135614809 seconds)
loading group "sort"... done (took 3.82256504 seconds)
loading group "collection"... done (took 19.587963406 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.693992977 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150624655 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20393046 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.212453988 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.280670269 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167382528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159935323 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172284864 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.828552476 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211129947 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138224106 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438610235 seconds)
done (took 6.464327249 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.344275868 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061790945 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170890413 seconds)
  done (took 0.986290028 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094000192 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161755414 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109501669 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099637369 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095198819 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11162023 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.156587935 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10979691 seconds)
  done (took 1.59840236 seconds)
done (took 3.776398221 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498109468 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.883239027 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.509259876 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182751762 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311027836 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312266093 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270243191 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222743703 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093608047 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087553566 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.191598627 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.406203374 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.418954821 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.965023308 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069951051 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094050425 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153635276 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.789629261 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079447809 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110675649 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.54396862 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.216070314 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115367215 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107254916 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187097764 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135201855 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142535719 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106735726 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663717446 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133698729 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21753147 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085651002 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.141013029 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166515642 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221855196 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111681386 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681319845 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204145017 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099417463 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101763675 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68089205 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120387503 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.209213171 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106511972 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070111233 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162507335 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118572605 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079029556 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093762445 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102512473 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159402256 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449972884 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108114792 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192716949 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094717599 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688242995 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097189013 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278404186 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123942081 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093584015 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091524855 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090574839 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161366991 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097291976 seconds)
  done (took 20.294913974 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.174226083 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.191339302 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078701266 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16277192 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126367005 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099406521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091118781 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078689328 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132599452 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182346886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144644212 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.191766531 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077168887 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090310019 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172196406 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.237620012 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126085861 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105561768 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089987066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112714724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128161155 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113175483 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096960013 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095026341 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172820019 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205604997 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107724007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12360886 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089393413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100613731 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143005623 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150259986 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092872383 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089570673 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175654889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123888099 seconds)
  done (took 5.452535168 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233731938 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104448475 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.252856552 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198280976 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133111333 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.203375683 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17613302 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.302452637 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.219040633 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162409107 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.198471709 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112241965 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114492477 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079854819 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07912743 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101590384 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079029182 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.84377293 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152512611 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.170251548 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185674214 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113710791 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082413955 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363553142 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101357415 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0865556 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11148501 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065304214 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223261253 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094025077 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.486361239 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082559926 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119892676 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130226074 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196732919 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124758123 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138494586 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095642909 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102889837 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.198512694 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120549857 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078394915 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078445947 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133558782 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131008224 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094236098 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126390157 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.135068906 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089060505 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111673893 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.110180988 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192188443 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144778181 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10310254 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270468816 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128052006 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101099342 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108891943 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.832672428 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102094197 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119521418 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098026842 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079737826 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096680246 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096024584 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.452507553 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10789223 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.728430537 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097714955 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.141566945 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114829834 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120453709 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086486494 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085339312 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127313596 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085794421 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078485217 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.103740692 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080590517 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106053791 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11436104 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085040728 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096833722 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146938941 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097246 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124785272 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109874736 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106439104 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089509502 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127400098 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082335781 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089400579 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186562387 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098065562 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132503713 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084266913 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115281102 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143741094 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0890682 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.299713226 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09931027 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123354553 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098945113 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113968207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115039788 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082377502 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083720733 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09547136 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081909141 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147335448 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102326791 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081705093 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088692844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10947574 seconds)
  done (took 27.960728528 seconds)
done (took 54.461602442 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414159264 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083486999 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082066698 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102953555 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083705615 seconds)
  done (took 1.597512564 seconds)
done (took 2.402464487 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305960459 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199997476 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088014556 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189582802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088044599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195989613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183182654 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102452242 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208730181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086863131 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193177949 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085128721 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105393567 seconds)
  done (took 2.864221232 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103875426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106165007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102666385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120612892 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086672178 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102054702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119483193 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110015316 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100382762 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114185423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087856993 seconds)
  done (took 1.958437316 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100081636 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104202404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091381524 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119980425 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086429097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09851668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115991399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106709487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099241409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11335116 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087820222 seconds)
  done (took 1.931344465 seconds)
done (took 7.556691318 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.213249493 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.042069232 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194340914 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.246012604 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345024505 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300401649 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.615741808 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203887903 seconds)
  done (took 16.098548062 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.18951987 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112609867 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090876188 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092329331 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114912766 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094091083 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095054421 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111834121 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096626349 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095583224 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094103865 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113984249 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090280912 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090753382 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114338403 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097236921 seconds)
  done (took 2.56395959 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135830114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117003406 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117372373 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098574606 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094326806 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118724524 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102193842 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096329239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115224835 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09506674 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102739431 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116166295 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098323137 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093828079 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117297329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117673227 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094244817 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11678139 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117644653 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11651069 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100962017 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096808047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114802295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100157458 seconds)
  done (took 3.489624697 seconds)
done (took 22.961056775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147935197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101696495 seconds)
  done (took 1.063891773 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164751192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1847314 seconds)
  done (took 1.166371029 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112251563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090030311 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138455415 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103780847 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090616847 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109658851 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117803312 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109051763 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092462552 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093015771 seconds)
  done (took 1.878760078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095694319 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095432818 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123485412 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168401321 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118268645 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093940055 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09445254 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113319168 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097174985 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090750237 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114305544 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109686934 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094377658 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128360302 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095008906 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096432227 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118442853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094938821 seconds)
  done (took 2.765765248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092170292 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092666026 seconds)
  done (took 1.00880735 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094922033 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089541175 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092143805 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110554697 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091046067 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089926433 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108051401 seconds)
  done (took 1.499132603 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.528373953 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239670969 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375306934 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072983178 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126571596 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.32210046 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107747357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073492301 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094097971 seconds)
  done (took 2.797748606 seconds)
done (took 13.002347033 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093615451 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.441734821 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.62968282 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132756343 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090497936 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148787931 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.335442864 seconds)
done (took 2.700638935 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35288841 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167361624 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084782208 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092357481 seconds)
  done (took 1.522515432 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083550001 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099565544 seconds)
  done (took 1.016226821 seconds)
done (took 3.371354963 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089839289 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.110891886 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.107965215 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090461897 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089743624 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088394875 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.110155959 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088674826 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088032373 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.088066169 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.10954006 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089118477 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087668092 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106683385 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090722912 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.206603041 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087804862 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10731543 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089203741 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088448514 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105852757 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089721517 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089091164 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087915296 seconds)
  done (took 3.255031674 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111905096 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091971583 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111998278 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094769039 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094673682 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111702609 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095869446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092720064 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111341376 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092455411 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09362278 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111962601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092635607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094841018 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089863039 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113455429 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095214971 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091053517 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111104653 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095924902 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093830188 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109844691 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094717478 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094841801 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112172997 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095039078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093246237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110902078 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095859095 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094069336 seconds)
  done (took 3.828364891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097769795 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087113187 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089226548 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117072315 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088534765 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090516019 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105434357 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092347914 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091159654 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088962761 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09041226 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090114255 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109083597 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093309928 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093652224 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116728001 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091182158 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089233056 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091037561 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112139741 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09129221 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088611845 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108184372 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09109212 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088553901 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089232264 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109296289 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092334346 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090178122 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110088075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095372989 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091736593 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100742133 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111823135 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090481968 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095208723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106915433 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091192668 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086823904 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08582094 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109482081 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089510975 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097837622 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108621736 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091792484 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089042625 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107529658 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091698053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093306189 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087305319 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.108739699 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092748033 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091832331 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110719494 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088944218 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09084715 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085654162 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.110080086 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091410658 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087527108 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105062619 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096403571 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09049064 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123619632 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097901775 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090602758 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090497523 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109280104 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095902667 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092521751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119626619 seconds)
  done (took 7.82633453 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119238684 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09801915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109683279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092783177 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090961199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090210804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114917254 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092155234 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091278221 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115293899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090502357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091449517 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10998915 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092913143 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092083315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091029399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115278304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091430845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090573669 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110675533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09230092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094681322 seconds)
  done (took 3.017079529 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240725851 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098449616 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139448738 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122895032 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108823355 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123525476 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096137785 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09680789 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112730994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1006823 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101807636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114393937 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110410904 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099296334 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119366265 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102448743 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112473658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104264839 seconds)
  done (took 2.94783218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10539535 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09229744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15447182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093682499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092296851 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112460943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099318156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111759406 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112315231 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092898182 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099293386 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111097398 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093495295 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092472925 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112723747 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093764256 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093086077 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091487668 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118741797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098220934 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11527523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099887671 seconds)
  done (took 3.131761222 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106754906 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092440545 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129380471 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097428132 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091091048 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090527761 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116962485 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092664946 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097828176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.119380731 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094136625 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091106665 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125807771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09353394 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097735397 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111516507 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092937278 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093728474 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112329241 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092421427 seconds)
  done (took 2.886416408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197336191 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127866995 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10879614 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115282165 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128227969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108921294 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135162857 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109056785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10814594 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139350777 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109004712 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107396756 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136682866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113769959 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126824902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120324149 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116290667 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136197654 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109078225 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127437069 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121731132 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109087966 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135623974 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109234823 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107294812 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128412899 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108503888 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131688438 seconds)
  done (took 4.281781419 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092168033 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091211103 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089738862 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110854907 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092382011 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091294318 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090724246 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109850944 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091259462 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090935336 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109440493 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092661387 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090934459 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090998177 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110991848 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091427717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091844901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110082306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093334031 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091638811 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090673677 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110484899 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093185846 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090408474 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108837181 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092404785 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090967934 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089881252 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1098647 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091585046 seconds)
  done (took 3.740263266 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10909832 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102548792 seconds)
  done (took 1.065073397 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099719796 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106462261 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090830683 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112727786 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100258633 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091804679 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119397171 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098148832 seconds)
  done (took 1.674579239 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165987294 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.190868466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095958333 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123621037 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170106991 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182188666 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130300633 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.116677367 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091619424 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085014356 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184110364 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084209087 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.1114668 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091034728 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092335398 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119558541 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093831868 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101683898 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119954829 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095566107 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097019664 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116664506 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095226674 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103773543 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106240808 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096180986 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09660566 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124217558 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091167587 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093750715 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110885165 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093595628 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095474818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115013391 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094433358 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168603619 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120953563 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089528583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113059086 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098733916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126081111 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09256302 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114917978 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092333067 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095682494 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117298282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097530487 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09141479 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106031439 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089781911 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093034578 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107277537 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093597989 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093129671 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.11157581 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10030207 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094096404 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107503013 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089756223 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088125066 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109900383 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090098317 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09541698 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094190228 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114279191 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093844197 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091262297 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.119015288 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097021078 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093463301 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111640659 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108424381 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092843892 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116655941 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098502924 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094062129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11051006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098313873 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091920954 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113534717 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097867867 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122045637 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113543813 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088669657 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088566417 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118556325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095103262 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095525245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085313065 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121307315 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095632946 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093388831 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106363549 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091700421 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088547522 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116497397 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086900567 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093665698 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110114956 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098715421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098820738 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111423778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096656491 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098529174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117825366 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094334915 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155685623 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111800449 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089253829 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094471863 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117228099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088230977 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092705467 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.111635485 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091763948 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088454586 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116135862 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094183854 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093260382 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095690247 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116373963 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095390779 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093760779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112651222 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089976532 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097344223 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119931953 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095101237 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094310816 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112438902 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095340252 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092899364 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115064067 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092194574 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098368144 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090019291 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112471031 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094556059 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096583678 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112941977 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089650615 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092918893 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113767089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093451747 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095906316 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113565366 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089753791 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085273885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11299763 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090531939 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094795203 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120302935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090310749 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095157559 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088890072 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121089524 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090251837 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098098099 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11570542 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099415804 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098026183 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105675799 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092309957 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094768433 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115805294 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091401279 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096673614 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111567782 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102310342 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08762036 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096748737 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106439595 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090968646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097909057 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115126989 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097054032 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088671541 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151012012 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106131423 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098308927 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112194067 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09464089 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097604358 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112945921 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096809645 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098764906 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116822662 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094444452 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092363618 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098194978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109621498 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095906647 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092028542 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114785275 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087032658 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093917204 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105068179 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098941588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095648346 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116323171 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100353295 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095929034 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092059136 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122247146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090367534 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096452381 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10619232 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09959436 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102177972 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118888442 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099515357 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094856927 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111529872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096589263 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101941564 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114725193 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09545975 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094418904 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087239309 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106957434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099437522 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096715445 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110881302 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094545665 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095474898 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115934527 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092286027 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086750983 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.117569542 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101379508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088968523 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113576588 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091345888 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092020174 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119724769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088357164 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090710234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096096698 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118759047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094365057 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094135389 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.11689697 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100244117 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096479278 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115078906 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092878957 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101116557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111031357 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094678376 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090480039 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09672813 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.116997388 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09516409 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095162483 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110741067 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091260522 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098928715 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118544626 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099737843 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092733893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11717596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100892661 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099204647 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109906049 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102546439 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090340784 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087263245 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.11268848 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087575467 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095347556 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.112015605 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099207123 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092636618 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113603855 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098632655 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096185159 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112640726 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100617049 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105175665 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109049251 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08873742 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092232011 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115629625 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092159756 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091198097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115988322 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097531904 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099229597 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106247251 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111252183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095176431 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099666817 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.11291148 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102460195 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100280186 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120789445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091297941 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099346433 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112206239 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100565048 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089114825 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112925642 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094670559 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09433648 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110736705 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094779064 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091429561 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087442394 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112340953 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101041334 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092718527 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.119605081 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094924393 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091337796 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112881189 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092266141 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100154379 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114216124 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101558515 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094902445 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087992093 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.110736555 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100594844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095047663 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.122347147 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09127639 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097880442 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121461167 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099930696 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094882048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12378789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104234325 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10089615 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120147277 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090129081 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092699517 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098292601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.118429124 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098589012 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097191334 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110941669 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096931969 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099596027 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116714461 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095168462 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087992372 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.11541015 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102997697 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097787102 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097913711 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118543087 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096509976 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090982689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11919582 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101396863 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095055459 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123280176 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096367898 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098798617 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.110124393 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10120515 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096586562 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090758014 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109815212 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092422665 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101028201 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.109419386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101993796 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099192703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112188475 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094442143 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098835742 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091151953 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119950528 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099738792 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09216764 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125969396 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096689707 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093232696 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120892604 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101072253 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088608541 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113913285 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095472578 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101752858 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114054512 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101112159 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094981164 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09970887 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119452162 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100531087 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100303261 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122255578 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089676891 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100915828 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120834015 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09819701 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091705164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113601894 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090892507 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094191383 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.121303867 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094669024 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103832923 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100814786 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.115524718 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092880543 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100103441 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115782879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101613191 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092401408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117871603 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090060467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098194296 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116901454 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103617129 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09298369 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109793874 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103146718 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100560157 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098738199 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119921972 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102471579 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08956606 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110998146 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099759947 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092692883 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126825355 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09999173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094152926 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113275835 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098994604 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09664997 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101325358 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.113410478 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091836129 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096018598 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119375761 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094551224 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089531633 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120245731 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095387343 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097321356 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11637743 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091769203 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093888873 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12325411 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094425352 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091918041 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111725511 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10392547 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095451724 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091913759 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111257813 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102322505 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098145468 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123582445 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092961474 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095776984 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115697511 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099630158 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101416304 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113750664 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096315694 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093874321 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122635226 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102196914 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088764473 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113031362 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106286489 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099554577 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118488837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099959397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095612164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102116465 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123119904 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098716624 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089055517 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.112836586 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095514406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08929732 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117511215 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102737522 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094664704 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113575762 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102461118 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099958219 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097004788 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.120052725 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091059313 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10301509 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114410222 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100344123 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090060557 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109541339 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100927245 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100947484 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094782689 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.119351188 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098174908 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09783696 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.113031177 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094891309 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099124413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122236391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101974002 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095760876 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115040014 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100895742 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105817789 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095975617 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116392498 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103779868 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103897257 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1173776 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09681505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099221871 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123639195 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098795573 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102195364 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115357844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096873514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103065953 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124149932 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106469924 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09542193 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110989544 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101215254 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093712121 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110505026 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101848083 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102520802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121144264 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097582855 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092809241 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1043089 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123805101 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096407091 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093965519 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115754319 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10092629 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093057119 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120522986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094202606 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103426182 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123438518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103895006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104253271 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109399095 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102869902 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09778523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123937831 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098783273 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091072226 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089767519 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12094293 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103194745 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101942339 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120406945 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10143669 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09920022 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097690933 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118416346 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09445586 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102699055 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.121885762 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09839234 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097388134 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116878296 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099589682 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097674927 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123642757 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104440369 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097020883 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126464619 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104025804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095599614 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093512745 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117873916 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09861247 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096699247 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124555785 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093499382 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090423954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12187875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105184149 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095860972 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12468717 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105100428 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094224406 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120379727 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106018797 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103105527 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097961106 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119746858 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099918274 seconds)
  done (took 62.472156387 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146692311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103631966 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120290821 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099377349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116344248 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122431959 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099521165 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099907886 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120309083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108417601 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098074896 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117949819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114227338 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119835916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137932046 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107716894 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119206112 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101778542 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097792679 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099575595 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134458273 seconds)
  done (took 3.294028695 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116738125 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111534394 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131778302 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112959613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104878376 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131766432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110708777 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129788049 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114290776 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105841346 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133193944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109583069 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127155935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108723543 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106214181 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12973811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113603497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105615578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131558114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111347684 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128788398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111825175 seconds)
  done (took 3.493291344 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129308258 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102180325 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096704855 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12113123 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102380002 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09870658 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122606183 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099710809 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107772294 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092931423 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110976187 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094130774 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096527892 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119647728 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093507986 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098278347 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12725715 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103083786 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104083165 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097935661 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111810001 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100090464 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099405256 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111045466 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105353722 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102917016 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098314219 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123929703 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089968131 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101180719 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120844791 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094342077 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090568907 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110908172 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092318318 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103047517 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101359464 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120660439 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101630708 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090756258 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119340467 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103896381 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089731341 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100025366 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120641537 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094239491 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101497377 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119258185 seconds)
  done (took 5.948384899 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129986599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155577841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104133882 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12606371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1354813 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108752392 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101158697 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129665478 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100383849 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123517805 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116016695 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112632107 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126924013 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107166649 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103766637 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126686171 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105839359 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10162415 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129251435 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104070955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10749279 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125202095 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113744373 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132768028 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106555124 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102498934 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122024393 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107996589 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111609837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128334352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106837335 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107625077 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135473363 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104572415 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101864846 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126558741 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.361295406 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103099798 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125376668 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100968781 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103289534 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128778734 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105175481 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13522406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105648585 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104067235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123929163 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10281868 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111064976 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123480149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11045177 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112333115 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126605327 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104425417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106035413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134674152 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103726689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101427953 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127407997 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113028224 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099003938 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126958567 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113598906 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102568994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.132760422 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113128383 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125750562 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105948409 seconds)
  done (took 9.128818821 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134525493 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105645403 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137428726 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11451506 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105957689 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128921315 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106662521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105611966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130187021 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111259062 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127393614 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225623633 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126058893 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11157381 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105344911 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130178537 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106309216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126956701 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107641824 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106917347 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126872362 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116603748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106079858 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136426043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119104564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102841855 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129235167 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106333149 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135787132 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107497129 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116767925 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128588997 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107670923 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113885096 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139618861 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107572919 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121179614 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10832211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106528573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131228792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104817434 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114695227 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127318631 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104929376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107180577 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128883201 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115462612 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138739297 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114232224 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111857865 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128284862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115387687 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106903854 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128795565 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115611614 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14345311 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116858147 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115068196 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127724556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116311666 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135553463 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123653564 seconds)
  done (took 8.385931894 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101091028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100231737 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099558688 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122758465 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101774788 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09909787 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098938549 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122583176 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101196437 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10024857 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122476922 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1015422 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099323873 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099816273 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122278812 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100519556 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099848985 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.12231625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101964555 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100483394 seconds)
  done (took 3.043321216 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110001528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11723976 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122746361 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109306158 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101219728 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127444683 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102607529 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102035075 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102317152 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.128012199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111626081 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131181959 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103592412 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109022816 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130701988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109749349 seconds)
  done (took 2.7454611 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11982797 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118289458 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212466931 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104605515 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124894067 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10999373 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10216244 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126913192 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102909293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107449215 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128494934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106989609 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103491083 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103136267 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125495271 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105960954 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101248406 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.13007992 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104316273 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217350948 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106123085 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103877414 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127053545 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106861278 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103579763 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131790885 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109307051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103119818 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127500676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104762722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105656196 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1334405 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102589054 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10699353 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102434849 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126689799 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103347115 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103246067 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128044539 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104231982 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103960912 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.127275985 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10421688 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104910075 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123052094 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105619345 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101597401 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128081403 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106653345 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10520873 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102069792 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130486827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107665195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110215516 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131747589 seconds)
  done (took 7.318241142 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115942245 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105188476 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136622829 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103964297 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104113632 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104062735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126376496 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105486973 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10412324 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124565975 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107030355 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105920888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128230172 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105681045 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104132001 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124946511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102589771 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105315641 seconds)
  done (took 2.943129438 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109160421 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103390807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106080313 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124908171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103575268 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103093434 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123687059 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103741535 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10195369 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102505012 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125533566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10374345 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101854289 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125230229 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103667238 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103467801 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124835005 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103680732 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102807921 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101165683 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125380166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102608336 seconds)
  done (took 3.339917397 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116005182 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.212568925 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110702598 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223918986 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100498662 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123080868 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111642823 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10026018 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139838917 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10067977 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098872052 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120769245 seconds)
  done (took 2.493320518 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131914685 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140276925 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127196566 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105439108 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11327958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131206541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110022107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107217193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139579274 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120144398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130188237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117491561 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116314458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139771939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113646964 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1340855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110784308 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108165808 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125194442 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124698506 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108844685 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14133252 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109004715 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107755778 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131999233 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116565426 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139216507 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119347051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108312626 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140656997 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113501917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129826788 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118440376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119953123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127203738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117318744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1085065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146743207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112862108 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137715458 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105233198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112466081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138112586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113808868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13726645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10950263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113761698 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13119668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10858844 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128597544 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137131394 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117223983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136191639 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11796124 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115465603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153623308 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118992522 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141182806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113512851 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142835318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117875218 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112287174 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139141607 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118536334 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136584917 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116742612 seconds)
  done (took 9.070658412 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144051081 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104783399 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132077159 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12102375 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137694331 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110159608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10872708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130676164 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110083062 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105087318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174235743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108971167 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115982848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140994189 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109359417 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130890605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11012644 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115909069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129169699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131445126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130643525 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117339985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116443818 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142561822 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120634934 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136041023 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109952386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108627953 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134890846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11001298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114029165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132157827 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119208782 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105523282 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141164613 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109398313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130539939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116416987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109436151 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137760605 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11816284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122979508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133430158 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108630941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143609853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111059707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10868794 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128987522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110251901 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104322122 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143405788 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120501642 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145550513 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117767971 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108053453 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133500478 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110965112 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108029031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133828913 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115148698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138360363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110507344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13066506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131819255 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10976596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116860396 seconds)
  done (took 9.022503448 seconds)
done (took 171.186385932 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175321505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217358457 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200653942 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157969989 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095259103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15392051 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129846621 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199283028 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096662048 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095129977 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09438796 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.123036667 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163772227 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094704844 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119380415 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099657238 seconds)
  done (took 3.151433769 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197917941 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.348581751 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109870686 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12212843 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101980716 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100151549 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122513492 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103041757 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099598794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131394862 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102148186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095916276 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130519687 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097616721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100143592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122558187 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109090401 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100224613 seconds)
  done (took 3.243130364 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122013038 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162693481 seconds)
  done (took 1.236179954 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131933995 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215308106 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295308634 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172892602 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122241391 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14120159 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151013832 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135981085 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191010746 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136817333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113659466 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097789269 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148777549 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106703696 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138994674 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099297956 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128643771 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137212061 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.1149045 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101881035 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146243963 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105462966 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105519106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136875023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181937849 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135285375 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10539275 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103672998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125175756 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114891302 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107786643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141369528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112686367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180755179 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104211984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177915983 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106892216 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123226982 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114571796 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099917395 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.128437316 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105029794 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135078555 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099472794 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103573623 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128777227 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105425759 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103418697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130771884 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110061463 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108078888 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.13027098 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175536184 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110443943 seconds)
  done (took 8.036948733 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.883616085 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148566126 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099610891 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.026726786 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145532831 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114572225 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.874309729 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149566865 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256832319 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893775545 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115395138 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107587815 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264037575 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259723313 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.285853373 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362920452 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.735820287 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115770077 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130563024 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165530991 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105940816 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141735828 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11737437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515471102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102265734 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100009594 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128323051 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108857348 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182038066 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101720115 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103959684 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196757814 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293510545 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213778931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100544351 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122201227 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10089869 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186623409 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277494426 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224731307 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174066958 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120505322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100818488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104831583 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138199824 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097439661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181318625 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191165167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168517338 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127767235 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10924174 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108602994 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12697866 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176777273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099345579 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358088983 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361921708 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122278195 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108549432 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112802292 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269849143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125627131 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240446829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123823009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218463323 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122995236 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845498982 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162797941 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123236768 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10545287 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10472213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130474171 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104965058 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190015067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475695835 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1306443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106085602 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099956638 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247828188 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123728489 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102298685 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182930364 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10282021 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107459287 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132425175 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107733633 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190276661 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269865285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109447648 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107002083 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129496657 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11441146 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100912908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236129358 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229606248 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178302607 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231048179 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105601921 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181050981 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18701084 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106672983 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188967729 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106640143 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112231767 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128396548 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228031967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15609514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103760724 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106111317 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128932261 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139071927 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104502777 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130445984 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165126142 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554810523 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187140466 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097683792 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128927341 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107847362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183625844 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109112596 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265864836 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129779624 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163922028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128670166 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099479762 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106830075 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181538121 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108841881 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130616345 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104998111 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131252597 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260207398 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226195285 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132805721 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256436744 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178114636 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130346819 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168412735 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130267498 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188438688 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111968138 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105397257 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124836228 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838265775 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112837093 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106808569 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131082517 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182229308 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123679517 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105170904 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100856743 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120877441 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816863739 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106493271 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099338272 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103687721 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129854759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108573362 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10960622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130107859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178367291 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249083654 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11028183 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128516434 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103586261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180704781 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104757646 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102100282 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12432343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104400239 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108427752 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127721607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106725433 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191466891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154994718 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231176196 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.677149437 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105014757 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102202922 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242545605 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123646682 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330324317 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10806062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238039146 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187014696 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098065923 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.383888646 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165085151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208600031 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104371453 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193575611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099555008 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12922061 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15823023 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125123824 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110144669 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177067988 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111313628 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108034698 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.306089442 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103319984 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253749702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10037673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189421125 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103683613 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105821555 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350155594 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102954825 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11313149 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181224878 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105980302 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125618304 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.625689495 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103808949 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111175089 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129872353 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238237348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185433558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109362884 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107977967 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133843059 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156664565 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231569817 seconds)
  done (took 47.907670181 seconds)
done (took 64.520173915 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265715518 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170450986 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376448177 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178652925 seconds)
  done (took 2.035809438 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.270299287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16928603 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254993761 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100035097 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262503755 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097744955 seconds)
  done (took 2.126930359 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.18093161 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172177535 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150084522 seconds)
  done (took 1.483839526 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210771476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207870636 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349237652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261478816 seconds)
  done (took 2.094288289 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.284278696 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119074081 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125967231 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237710033 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.253887801 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208767528 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125459335 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176870908 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130497231 seconds)
  done (took 2.680772095 seconds)
done (took 11.395590355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.321757909 seconds)
    (2/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.39093602 seconds)
    (3/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.322627915 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.260800019 seconds)
    (5/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.157957628 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.225904475 seconds)
    (7/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.09884732 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.27808773 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.373199426 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.138928705 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.168567679 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.228555258 seconds)
    (13/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.145266573 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.31350953 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172748152 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137538044 seconds)
    (17/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.266585095 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176106317 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122441963 seconds)
    (20/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.165737287 seconds)
    (21/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.406097833 seconds)
    (22/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.28188209 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.149185755 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.240616475 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106004445 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105051761 seconds)
    (27/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.180709143 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.154610589 seconds)
    (29/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.147740818 seconds)
    (30/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15423838 seconds)
    (31/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078950673 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.18597339 seconds)
    (33/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130880962 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119547834 seconds)
    (35/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.105260371 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.40550189 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107427079 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.222683498 seconds)
    (39/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.142555277 seconds)
    (40/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.166771098 seconds)
    (41/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.229882539 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.172021603 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12573303 seconds)
    (44/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.110070615 seconds)
    (45/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166623669 seconds)
    (46/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08024931 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112501569 seconds)
    (48/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.162766337 seconds)
    (49/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.254251111 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148708241 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.241943053 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136505376 seconds)
    (53/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.15397582 seconds)
    (54/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.236331137 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104133403 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.131749319 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109368437 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103852278 seconds)
    (59/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.147175561 seconds)
    (60/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.156670932 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.1340277 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120614682 seconds)
    (63/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.113440081 seconds)
    (64/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.277676757 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130342811 seconds)
    (66/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080172628 seconds)
    (67/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.187793268 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106076852 seconds)
    (69/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.182917059 seconds)
    (70/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08873191 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103674366 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.220949974 seconds)
    (73/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112964149 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157463347 seconds)
    (75/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.139029721 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125280674 seconds)
    (77/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.333415019 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142078563 seconds)
    (79/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.108635685 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1204685 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082863037 seconds)
    (82/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127036292 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105652991 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121773053 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086269345 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128679027 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152877115 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123365775 seconds)
    (89/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.107461347 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113181757 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10698798 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128729945 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126514332 seconds)
    (94/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111226536 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227228343 seconds)
    (96/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084326058 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110584471 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112801414 seconds)
    (99/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129974617 seconds)
    (100/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089227897 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104131811 seconds)
    (102/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.136056224 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110098682 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082707504 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.215384215 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.103247495 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087920203 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111157529 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169576881 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130122094 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086582177 seconds)
    (112/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081661278 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12960066 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08221522 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086400646 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08667404 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110976662 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087704145 seconds)
    (119/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103348095 seconds)
    (120/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080638182 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.199268842 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087066007 seconds)
    (123/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090629352 seconds)
    (124/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089787975 seconds)
    (125/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079505848 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136492722 seconds)
    (127/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10539366 seconds)
    (128/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085183052 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08272636 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159477156 seconds)
    (131/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175775878 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101230577 seconds)
    (133/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106438775 seconds)
    (134/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.139704823 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111897802 seconds)
    (136/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081513033 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.149588883 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125395711 seconds)
    (139/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08647792 seconds)
    (140/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.110844093 seconds)
    (141/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086721874 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10903171 seconds)
    (143/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113085737 seconds)
    (144/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079971784 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138536797 seconds)
    (146/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082572351 seconds)
    (147/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110722969 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.106535083 seconds)
    (149/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088503526 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088456429 seconds)
    (151/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114125172 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.142670269 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10449425 seconds)
    (154/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080541039 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093998715 seconds)
    (156/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136086318 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106404769 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101884075 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134596964 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084266452 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134140347 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104816848 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.127723889 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111820708 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109966073 seconds)
    (166/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.137540368 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126179007 seconds)
    (168/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082460958 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105117504 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.112851714 seconds)
    (171/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083247449 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087197366 seconds)
    (173/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110386462 seconds)
    (174/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.109377994 seconds)
    (175/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082761132 seconds)
    (176/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086694237 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081857279 seconds)
    (178/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087279426 seconds)
    (179/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.106610074 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126498093 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086858008 seconds)
    (182/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087718325 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127848837 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088931985 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102960733 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082907721 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087094017 seconds)
    (188/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106401158 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.085297652 seconds)
    (190/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081111057 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104867125 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130143552 seconds)
  done (took 27.592403226 seconds)
done (took 28.577291852 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226487212 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13125115 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11266612 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112125655 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23367881 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118984555 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154412824 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114377559 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121608772 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137427461 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103077602 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124265011 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136731516 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.208957046 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14134637 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104882331 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102463799 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147987028 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128220054 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128695286 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.236613655 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104598431 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148323079 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105147144 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237503595 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106077293 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111459828 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140462143 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127028316 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112393666 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140045563 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105118097 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128685262 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151844746 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105317847 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112883481 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103421109 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112904194 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114530619 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113637531 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150323739 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114749565 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112664023 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129879234 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114773544 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113006497 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128272148 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118837701 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102132666 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135612535 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108250555 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129166409 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111104984 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127963327 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102512307 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104842975 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.148632365 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104601087 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125784584 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127513541 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10684665 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10350525 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139009124 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105552319 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112919282 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103725787 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138399688 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11500107 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112178157 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131128629 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105768465 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114508053 seconds)
done (took 10.224006606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109309911 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148631391 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235784032 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239081007 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132464002 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146339236 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11927709 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128534421 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144421611 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124208245 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14209244 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162690818 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243164575 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121710226 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120543168 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141730238 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116259849 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112448221 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.239079812 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127933333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156192393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12097268 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159421971 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121282158 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108543188 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16745834 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113195163 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116615764 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133461995 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119094329 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12811787 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132820022 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112603395 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126278902 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150240998 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119771056 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118912212 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.141449448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10897075 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107008644 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142136597 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123838591 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107801799 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146014455 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115884654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.147179036 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117323843 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121427727 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109341791 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140907981 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110574795 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157201775 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121672421 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123691302 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144948308 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122224303 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120740208 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145738569 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112798445 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121398049 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13126377 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109054999 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109736992 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153238804 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113871753 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120850861 seconds)
  done (took 9.925110671 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128957554 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139311014 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144827169 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120042054 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113189849 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127879448 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102958203 seconds)
  done (took 1.909621768 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104927654 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245359809 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220585391 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245125665 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244410086 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256015176 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127259189 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103170671 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167090155 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114481384 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248905126 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275998233 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113789555 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118427549 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.250251285 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130184255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223345647 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131342919 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119185537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249043301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121003872 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161481461 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119203853 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103972514 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241454267 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105019686 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.295133245 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148629212 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114275612 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118695859 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143921724 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187010868 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242992248 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117991437 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138670768 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218595059 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.243982463 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11820222 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.261080865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135962546 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.216695327 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14592354 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119685266 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118965254 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14714926 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.207447501 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150780516 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1194446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117279025 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254067147 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141346376 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219336546 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.144171271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119475783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115451859 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147847287 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12755943 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119661166 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.253086562 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121536515 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246525245 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.248693488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.248063501 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248115292 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129337102 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248106598 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207834276 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146210983 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113637973 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121623083 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.250130087 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143455094 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118162466 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238434176 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123231212 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.2526258 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.248454831 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117139528 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117325425 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134063004 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120474944 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104459664 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241474955 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118107143 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115713141 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151115071 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118333136 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146009108 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111793059 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128496424 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.14525318 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117547038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123808372 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144978416 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122550098 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253667069 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115331993 seconds)
  done (took 17.24967082 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108766781 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105866229 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109262649 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133756124 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107292926 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106099468 seconds)
  done (took 1.732088739 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144322944 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120252512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154216228 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121383284 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167724696 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.255458009 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260836347 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113268996 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167155245 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132549808 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255660807 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258635488 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25609973 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124831126 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261941981 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122531481 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263848905 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118586692 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126698813 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14451823 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120402594 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149307562 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119385915 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245840675 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121965186 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121919231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140619283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130055578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126042877 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.142235771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123881815 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119280657 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.139050456 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115001475 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263858008 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11257965 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143169684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125220679 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123136883 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147535235 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.233345968 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146513791 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127447457 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122928521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.14187269 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113274607 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122747506 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.14101337 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263743077 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123889523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123009331 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.148159884 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121817334 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121859036 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140204202 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115773705 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122641507 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262858662 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150512135 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114443283 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120660338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148261104 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116175298 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123782976 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148735626 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123304904 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132822637 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147571698 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117708592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120004272 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149198749 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122287065 seconds)
  done (took 11.989563168 seconds)
done (took 43.831371247 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.747090533 seconds)
  done (took 2.802994996 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.125909696 seconds)
  done (took 2.179856803 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.900217954 seconds)
  done (took 19.98771857 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.447539897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.485288611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.172222549 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150641454 seconds)
  done (took 3.312250131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.858166023 seconds)
  done (took 1.938167096 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347042335 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257224747 seconds)
  done (took 1.66681521 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.742219145 seconds)
  done (took 1.818187245 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.5815043 seconds)
  done (took 2.647647059 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293606628 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.251827643 seconds)
  done (took 1.625504678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.651440097 seconds)
  done (took 1.726891997 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.34598977 seconds)
  done (took 20.425120707 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264832891 seconds)
  done (took 1.346376165 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29530878 seconds)
  done (took 1.377158219 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.730205229 seconds)
  done (took 4.812885421 seconds)
done (took 68.735533512 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12212569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124741957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122636715 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.148756297 seconds)
  done (took 1.587437651 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125989309 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12020676 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149211675 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121397983 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126154573 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119203129 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147055956 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123159682 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120383605 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149302657 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122070402 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118886319 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150519016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120485518 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116910502 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150011692 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124941382 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120889156 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149454685 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122605258 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121448655 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148136754 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125151247 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122600454 seconds)
  done (took 4.198534331 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116910379 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110648176 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112477986 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136071377 seconds)
  done (took 1.562216147 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130488343 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13175506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15664273 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12876753 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132037295 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157902492 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119851536 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117990285 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14527948 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129432456 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136612556 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160710372 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134182034 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121855684 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158334234 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11552413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120717315 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158177163 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128113663 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128477258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148122166 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128527151 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124382171 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157352818 seconds)
  done (took 4.353095476 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199143641 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133322972 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180239708 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166008677 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181972792 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118837469 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148690936 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15345888 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12879865 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121375619 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150477946 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166938271 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153533549 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1228868 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120917774 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15350597 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134112457 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125594723 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194197769 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126046864 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153706555 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.134109269 seconds)
  done (took 4.353722346 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124280711 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111461012 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134478009 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110369173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124388817 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137435598 seconds)
  done (took 1.831480507 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109987314 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105805101 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104848469 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131338282 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109397933 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104748921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102887854 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133591374 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105994762 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103925813 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131415752 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106410587 seconds)
  done (took 2.433377642 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209298527 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148137878 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259008845 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397624423 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192355306 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192108988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287782611 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194807045 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207779748 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141029079 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21421527 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164458154 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182368098 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190091046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167071331 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162674816 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194095114 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210249186 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172955625 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243728607 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160154717 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203886812 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19097792 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179825524 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140807932 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191810389 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12073435 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12893097 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197505642 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194602502 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180423607 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181211015 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143322699 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22386685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263638371 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207332686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273871149 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137197661 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197764343 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192272675 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264669255 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170732792 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196613332 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184189997 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13106457 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217780239 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154442477 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.218312688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135175709 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175484524 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216831872 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183692276 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20236176 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137335986 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331730649 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163667767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147206933 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205630616 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19293408 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230442024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210425703 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124703284 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201843246 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218789395 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218459561 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171242711 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165941786 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153174944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167660852 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237094436 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213483575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163750688 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241596636 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160889146 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174504392 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199940845 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157152529 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236471751 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202870548 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122372751 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154262111 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163523874 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127366465 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216993317 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123644919 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24612391 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133593177 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343519344 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207818092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158211062 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190826188 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161706294 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193042942 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148928782 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131247955 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14640248 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188290559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161967474 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128983618 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184880492 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140943189 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154474813 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153239261 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122528713 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200432787 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135059702 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194465951 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200675355 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135597205 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20628741 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150869053 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189991292 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171416248 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222439291 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132933425 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161442341 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222535096 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199410006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137315651 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202951183 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226163397 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152998242 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16293704 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167886348 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224411888 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144766856 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229581995 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140059187 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16578912 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143426862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201554441 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161457385 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189657865 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129164316 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195076704 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221394291 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129149492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141776094 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212615927 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134920157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154978865 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139480015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163448919 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145182077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148917517 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.169741473 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155482821 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196835393 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166199268 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188442972 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134551741 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202509352 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131795734 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19812912 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14920835 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.147740584 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17705338 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227908269 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129805317 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211422773 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190940402 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186833032 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204148068 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129681599 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21420339 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129533696 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.14873297 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165843871 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198857217 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165598357 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218082696 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205906055 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168723208 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192503462 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1507638 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199651319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211670862 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159504238 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.17345607 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176838453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199581953 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121977516 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124525864 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.157299809 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140171245 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159464425 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139910051 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209772754 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16731641 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207522394 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197812463 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139185069 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220651811 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126519075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191843389 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17693141 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167293854 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189530395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21947745 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204805527 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144119448 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190811494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123534593 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127515458 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.164416686 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163463699 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1654051 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137987608 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143374508 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22033991 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202142489 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150514604 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218849108 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197127891 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201053713 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150033782 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162994714 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198166514 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170556481 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.213237567 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135684072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162213976 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221758922 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168185968 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194345722 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197533451 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179053741 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227015817 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19369307 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132155888 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147949424 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192103567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138271156 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192553979 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147610564 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160216837 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154785855 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167073226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142560156 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220233595 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144075883 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209710692 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157193844 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204201295 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125996078 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171538256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200289648 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148408106 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106692841 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20161117 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224597471 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152702377 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185004185 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176532531 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158514716 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320200314 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220125322 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179298308 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167901408 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140615295 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202501057 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162860743 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1938199 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186479388 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173043428 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239550108 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174304328 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172108135 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132566921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148889961 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17997877 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141967049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.182573539 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163176402 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.174133369 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218962073 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138615244 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19891833 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178762179 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174162951 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152223812 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141323968 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25593665 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19985672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175834901 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194914152 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1644056 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215329795 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124327252 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15532947 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134354251 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215334505 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13296375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206982663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.168266242 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215439094 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206631995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163176562 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171050321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129233081 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19615503 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152195921 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21229001 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136949276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168182591 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191533621 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158718625 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13167012 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189437399 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288095724 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179321001 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172615523 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.137325853 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286936392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159628479 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134422881 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189206142 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174537657 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160982815 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186109053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177361845 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171248071 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162994387 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165623798 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207206907 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185100086 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197802893 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1773474 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17664254 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162690666 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193696477 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204813203 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147041136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175326604 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163556817 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224386956 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178391439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160223633 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170324395 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19846865 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171937017 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206355228 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139717495 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216010458 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12904826 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19666551 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139675249 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125854234 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193084783 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193237318 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132064779 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208668111 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171623223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162516707 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129246585 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175976712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169916779 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14074536 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15821316 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217607238 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131127025 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210984362 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213586408 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159036717 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168928392 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174094207 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132077898 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139371216 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173140855 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131691689 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175953697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210628094 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130390379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207941577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195591901 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167106863 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188852683 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144874301 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.296143928 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129036231 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221838052 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152094176 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228815988 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151073461 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206304936 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169983557 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182291278 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165470304 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179515134 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220894289 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196589555 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.196260351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134291457 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143326431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169744387 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136033979 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180814901 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170912847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172215843 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138777057 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167729879 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176808158 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147877661 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171572802 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202240634 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181793517 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220155596 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190251676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169380617 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178585065 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208539039 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129337039 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196335335 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173730469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17554464 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153423927 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.165613088 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139496772 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247069003 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127019953 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192136865 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17654199 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200694653 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173385798 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164645514 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179787645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172023708 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178058758 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158076402 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154448003 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19753429 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135761684 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127675958 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203060494 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162345657 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194203973 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142840727 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205843114 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19726355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153305657 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135662762 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314929895 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163916243 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227770332 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138305034 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167927434 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148607975 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189375246 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170653649 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201292443 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132223508 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129573434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175596846 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16060842 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172673864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170441678 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21226065 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162466697 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216960129 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135383415 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286743386 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142931068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202875534 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118589347 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158096114 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143441332 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135296335 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173780552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210057993 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218665914 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.193403014 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149691184 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165827071 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128945275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130714749 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195176249 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153134778 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198862403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148245127 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.134127044 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143276297 seconds)
  done (took 86.580068229 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234060928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.170731889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174241729 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226206497 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201154846 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295153885 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23445282 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250476362 seconds)
  done (took 2.958740958 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122334116 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162473683 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144301101 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14726799 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111784714 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494542216 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162062922 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122979012 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162470461 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154918755 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138482966 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.581990214 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119497625 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147512517 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124606163 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13853855 seconds)
  done (took 4.200588746 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.339178375 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55790425 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.223491474 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292380496 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.273801194 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215961562 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.804996678 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.212278674 seconds)
  done (took 13.091423877 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.17798484 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171515548 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.464690613 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.317739977 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185788772 seconds)
  done (took 2.499840504 seconds)
done (took 130.72106648 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126691141 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125277331 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124379729 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156291389 seconds)
  done (took 1.698936049 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199458816 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093549894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095906691 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121701792 seconds)
  done (took 1.687569908 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.470555164 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093193633 seconds)
  done (took 1.7714106 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153389766 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143857308 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168884646 seconds)
  done (took 1.660457467 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138392012 seconds)
  done (took 1.318399544 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120637066 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131966313 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.28175257 seconds)
  done (took 1.71985084 seconds)
done (took 11.042003184 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122374899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933741534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438789816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135272085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716178385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.432241763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.464767145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179199953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176922855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140702601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135813973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692825615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.476742669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882581137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.437078533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911101059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698942616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11478517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152043098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114695356 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.442140644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140349707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116107927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114616582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719665489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.435180981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112230898 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917246429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111673547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116854632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431845941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113364699 seconds)
  done (took 21.302570827 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115420023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171404195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15062071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114029253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11572127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143209192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125624943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126402909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208146015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113184013 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163065019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112297655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116825836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141446911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138979276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111857497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144151818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116692187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12093651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140619611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136217716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116793311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114215371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144440256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113348518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133813456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142229655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12543998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111415583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147912043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117236616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112812755 seconds)
  done (took 5.397704953 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162205893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179217509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151309085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150647711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193277553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115622808 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229041398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153266885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208619157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114895032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134943367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14117254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154867694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112690803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167938435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112924486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115365534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144281226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121619831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114443521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16525379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113490773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114460417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143485599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113801852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135733617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14228472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127595631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112974404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146536099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11892554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112506794 seconds)
  done (took 5.718181185 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12750491 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127254616 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134080451 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165840058 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121387971 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125202364 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157272039 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123101846 seconds)
  done (took 2.277586585 seconds)
done (took 35.882491106 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137825608 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130336122 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133535167 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158068758 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.256072141 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120398742 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130114156 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119644946 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160671467 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13568478 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111889477 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152251643 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134907737 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123700703 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.25951574 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127202329 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264832881 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261603791 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121247916 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127266568 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.151364942 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234341466 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156275673 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121563173 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.257744256 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116952692 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251420863 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123317613 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122798776 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.141929834 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231952458 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154300556 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121407615 seconds)
  done (took 6.534224745 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.24322997 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154166542 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123142712 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121129123 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122212719 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151715371 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248892948 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150910506 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120819325 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120734699 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152974924 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229477313 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158467312 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117889038 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122619505 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112829363 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.28230284 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122601771 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146511823 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09615096 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117210516 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.15087587 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262101407 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148149917 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122240056 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121402481 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123352919 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158717902 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123716066 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124157646 seconds)
  done (took 5.75673059 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128748242 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135214832 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139931379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220875389 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152179157 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164917735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142215743 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137543742 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175737362 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116063495 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130780863 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184295512 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131982902 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126012385 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146055722 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135152383 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137662683 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147592335 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125971068 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133444041 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168081153 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13427065 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139875537 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155713508 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115101539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122605808 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15581217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128528272 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122748099 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158037574 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119040392 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120894233 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117159031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181036259 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116950568 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157770576 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142328908 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128580617 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157942736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150634461 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118250653 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146558 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143611254 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170712884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147000215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130025008 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127576245 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159515981 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.116266585 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134301516 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187574639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117624024 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136443235 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14243325 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115329635 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124051636 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114903586 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149568847 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129727062 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117884572 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171872227 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123800639 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126713693 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.146976316 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128679352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114944611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114727514 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150407285 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142522474 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122709575 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.184435149 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115856404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126313215 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159515485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127964436 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128142097 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.145293066 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128529372 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12792251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.150733093 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130543433 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118867213 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117184559 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163956047 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.137162369 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159265837 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.1292665 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128910732 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117705775 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148978254 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134278155 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115700019 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151203902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129525836 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115169428 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149255266 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129492519 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128306226 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142357879 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142848986 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118761879 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115107351 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.172165339 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119766266 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12034563 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.156418465 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157542816 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114459981 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157475619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129459939 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11541499 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153686261 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11908039 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114294399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164578587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132410032 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123243827 seconds)
  done (took 17.359994653 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.360721319 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347783367 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189395429 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.437857341 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129935725 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.278119233 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.34824474 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.351019556 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116109467 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182601153 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179345803 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316308833 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116193666 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.180269925 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350853677 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.407866767 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180062437 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153026664 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183958218 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130998415 seconds)
  done (took 6.157910886 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138667717 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15227019 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170205107 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144954142 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126416791 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165453446 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116626738 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137234018 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159268449 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126928138 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11804979 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.164008117 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130835914 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133017475 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.163016439 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150040304 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123436966 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152748149 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14023166 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120899863 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13539717 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143023214 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126473305 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169047934 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135611486 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127239273 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14619888 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121883326 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122947348 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155127802 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122112958 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135236201 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153744008 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108745123 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127652305 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130920142 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.153641765 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119944402 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121091351 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149882726 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131559051 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129373262 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154180576 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103798763 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135889206 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111669013 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.15940128 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130654912 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110515192 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135114186 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.161100942 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.132184878 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12448408 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.169625664 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123422308 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132879357 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.158919064 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131414781 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121489843 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144844873 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115309837 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120042219 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124155541 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162195708 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128537322 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.166646044 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.134467174 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116612617 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119918221 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152960774 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120669914 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130956797 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1681872 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125279257 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122720635 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15967225 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125103248 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097520379 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154953851 seconds)
  done (took 12.019054565 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143422147 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126619758 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13413435 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184060199 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131174309 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122631916 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157879628 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139340807 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131659047 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167427031 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132946901 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129744757 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170243578 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12814788 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126516086 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164563951 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130836515 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153314666 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.166220513 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144075751 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162506854 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122231454 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129193403 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127671687 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177863725 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128223749 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171777169 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132811091 seconds)
  done (took 5.266412584 seconds)
done (took 54.291287815 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.350523512 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.585780664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.330233191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.329714888 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.327959406 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.362353047 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.330141758 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.332674102 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.982945994 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.301821076 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.330769687 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.328745972 seconds)
done (took 30.118502779 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.48435585 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.472601877 seconds)
    (2/2) benchmarking "String"...
    done (took 1.636900035 seconds)
  done (took 4.336894635 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.325898959 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.322365811 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.570461467 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.322319475 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.325016909 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.347252544 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.327369304 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.33705864 seconds)
  done (took 16.770599384 seconds)
done (took 27.136024123 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.382131039 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.524083993 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.614207982 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.314956183 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.328911978 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.326286273 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.324777605 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.351767065 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.332570628 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.308956142 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.765841412 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.594659998 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.33888266 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.693831945 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.314119796 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.334810627 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.33957609 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.577491265 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.321696846 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.360454011 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.300831232 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.304440708 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.359871903 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.324572748 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.331943296 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.330809381 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.375332214 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.32183047 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.520372259 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.329108662 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.35802022 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.325378772 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.372590143 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.335047373 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.323382028 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.339591027 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.51680652 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.332851225 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.307396345 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.351467308 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.589090523 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.325679661 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.334035256 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.334212699 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.311448508 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.387681351 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.308250388 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.45968486 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.351361981 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.336006828 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.360278773 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.692953933 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.336339585 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.326973737 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.330769554 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.561645693 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.351731479 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.391183619 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.346307782 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.327482255 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.33576334 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.326112975 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.372262074 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.346932441 seconds)
  done (took 151.877190171 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.325271614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.325796958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.325248224 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.347611486 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.325092138 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.325237428 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.324923697 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.324582965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.327560551 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.327258599 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.324897812 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.328794674 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.331021078 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.296759089 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.336694608 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.347708674 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.331366194 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.330844588 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.356474491 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.327670234 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.346355435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.328742929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.344940768 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.326964766 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.367168299 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.416005573 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.335066728 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.33125168 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.337872666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.328262739 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.326923246 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.374891162 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.982003028 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.199309213 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.348438022 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.360465488 seconds)
  done (took 84.869460908 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.328534406 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.327491398 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326386795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.36187865 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.329264086 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.945213891 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.952790239 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.304460164 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.573147301 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.817604438 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.33223264 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578562311 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.328903911 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421233568 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.339219779 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.328486398 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.328744802 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.42221035 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.354383048 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334585643 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330927735 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947261987 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.345508316 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.454919032 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.510778651 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.345456193 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364220378 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.726037538 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.330302474 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363697441 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.669898978 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.380692954 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328856351 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.673495861 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.84954053 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444164655 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.332089477 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36573338 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.332716511 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.61738409 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330020943 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.33221944 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.331584923 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970480398 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.329349091 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.951483931 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.336555429 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303478246 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.330939312 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.330768318 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.535453602 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.047239471 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.331500207 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.330606863 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.334227115 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.33047893 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.331167617 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.364412566 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.470181919 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.335515002 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.209248303 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.332844111 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.335349062 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36536231 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.33571379 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.654397649 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.330330476 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.317872187 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.388132649 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.441991685 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.953831159 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336855555 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427405649 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.45237472 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.332490531 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.33131446 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.332671074 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.332182106 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.444950057 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.33345987 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.039155674 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.516065026 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.350049871 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.835509972 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.436169304 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.332397526 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.695728274 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.333045399 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.332819326 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.075627206 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429709944 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.333292802 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.332593027 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.334132723 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.035788201 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.333740038 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.953085024 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.645737823 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.335013447 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.063891678 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.337488503 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.208219179 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.942026142 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.986091418 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.334581917 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.446786144 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.516185425 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.352467088 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.334409617 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.76125003 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.335161498 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.390493843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.334740326 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.737481041 seconds)
  done (took 393.685920596 seconds)
done (took 631.651294671 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.199084393 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.138789117 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.299157778 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.155100778 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.126405238 seconds)
  done (took 12.149436323 seconds)
done (took 13.379453352 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54021244 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.542540606 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.407121879 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54691762 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.371958867 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560872743 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.525366058 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.359184223 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.45212844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.427956942 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.451199872 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.391827789 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.372413747 seconds)
  done (took 20.180441762 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.645444787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.34498228 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399980209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614907351 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.380450688 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.636617883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.680669333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.347315928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.49917741 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380221786 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.3575972 seconds)
  done (took 19.519575125 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.62879872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.345078772 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.421909416 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627753828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.381514492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.639017975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.673458253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.347650318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.510364741 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.359092042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358194414 seconds)
  done (took 19.526218694 seconds)
done (took 60.456567831 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.376827943 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.447815324 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.377080638 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.355692147 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.355607711 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.355134317 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.356204377 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.354851487 seconds)
  done (took 12.213214328 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.352755339 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.352760328 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.351913205 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.353339612 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.352708137 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.35265292 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.353706821 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.355113751 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.353951263 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.352868514 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.354994142 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.354928275 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.353153573 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.352463347 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.353726369 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.354921573 seconds)
  done (took 22.891734808 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.355016588 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.354588897 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.353189438 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.354014556 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.353003747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.355154426 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.354658562 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.352901704 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.353031348 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.353676709 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.355369418 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.355817103 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.355180131 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.355428768 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.352606193 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.354887307 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.355522572 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.356254929 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.359111482 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.354680802 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.35573427 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.36117498 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.354650522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.354709367 seconds)
  done (took 33.754836607 seconds)
done (took 70.092777479 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.340170298 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.360685862 seconds)
  done (took 5.937523271 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.415543541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.413148618 seconds)
  done (took 4.06577327 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.358828982 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.354416805 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.357886829 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.356905397 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.355622707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.355756009 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.355740107 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.356318285 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.35680559 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.355095032 seconds)
  done (took 14.798671674 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.357339083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.355524245 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.355654671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.355861843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.357650576 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.356659346 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.357353703 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.35703439 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.357306558 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.354981148 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.357981952 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.356858883 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.356970256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.35835079 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.356281464 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.359799745 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.356935144 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.358734721 seconds)
  done (took 25.664568708 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.370631505 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.376473405 seconds)
  done (took 3.98387604 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.484821364 seconds)
    (2/7) benchmarking "second"...
    done (took 1.399747913 seconds)
    (3/7) benchmarking "month"...
    done (took 1.4608254 seconds)
    (4/7) benchmarking "year"...
    done (took 1.454380411 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.398478934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.380745586 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.39813842 seconds)
  done (took 11.215333998 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.345938597 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.650833637 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.83059664 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.501266025 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.336505488 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.361179948 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.322470142 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.361470274 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360865964 seconds)
  done (took 15.30888745 seconds)
done (took 82.208010019 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.344457734 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.427808357 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.365552971 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.36606623 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.697724463 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.393428144 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.351204475 seconds)
done (took 17.18364292 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.323688424 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.327889949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.34600819 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359170822 seconds)
  done (took 10.594614836 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.344788634 seconds)
    (2/2) benchmarking "read"...
    done (took 1.673577296 seconds)
  done (took 5.257762188 seconds)
done (took 17.090842384 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359591533 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.360117791 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.360646658 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.358286014 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.359994971 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.359766645 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.359486825 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.360551412 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.360703125 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.362590172 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.360713253 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360697899 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362212664 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360298419 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360974753 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.360299507 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361077362 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.360218467 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.361163684 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362971733 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.360271449 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360617592 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.360228216 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.361120263 seconds)
  done (took 33.893783176 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.362725423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.362696729 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.361541249 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.359968922 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.362053913 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.361869686 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.362786062 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.362061686 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.362191571 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.361786565 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360590946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.361799263 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.362545478 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.360889792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362650144 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.362601604 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.36028305 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362978996 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361367632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.362100862 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.362358575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36236518 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.362006866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362314301 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.3633344 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361111729 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.362363767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.362869347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.361604566 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.362336594 seconds)
  done (took 42.10319947 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.367773409 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.369849004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.363034333 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.362943293 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.365117646 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.36292049 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.363726559 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.363167994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.363769628 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.363213961 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.364098964 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.364139264 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.362962221 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.363008985 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.364262851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.364804288 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.364171034 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.363835391 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.363013324 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.363952147 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.366236288 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.364798475 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.364491077 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.365304253 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.365419751 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.366295644 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.364687279 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.3648801 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.367035511 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.364374809 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.366037617 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.365888654 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.364601907 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.365753376 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.36601422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.367684833 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.370092796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.372655361 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.365885436 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.365557635 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.367074647 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.364923995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.366457321 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.367589481 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.365437103 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.366764157 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.366295483 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.366306586 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.365175591 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.3671822 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.365756427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.367588526 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.366306835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.366828112 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.366541049 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.367670735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.366631574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.367408462 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.366805671 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.366653922 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.368351985 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.368291944 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.368647987 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.365898286 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.368817432 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.368299671 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.368980729 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.368160997 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.36836365 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.368839106 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.366901573 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.36740147 seconds)
  done (took 99.600059898 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.369403688 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.369494084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.367906206 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.368827919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367711547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.367156897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.366927883 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367279214 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367969073 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.369406656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36488671 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.365350132 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365209717 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364297227 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363686216 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365396144 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364314602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364086114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.364844022 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36561787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365576845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.366580203 seconds)
  done (took 31.308652093 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364120442 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.365883996 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.364360628 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.366611485 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368198574 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.367635371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.366108537 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367337059 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366215404 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367984512 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366054691 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367112743 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368559503 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36548459 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366613566 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367776892 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366816695 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.369289283 seconds)
  done (took 25.847346236 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.368661449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.366830911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.368814179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.367300699 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.368354419 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.368060745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368292707 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.368765112 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.368481526 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.367291409 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.368177912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367826214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.369481387 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366659689 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369627813 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.368628917 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.366970583 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368689735 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368267173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.368155757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.368208083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.370038914 seconds)
  done (took 31.346902062 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367228877 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.370717643 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369508643 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369766953 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.369036368 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.368343434 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.369973551 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.369638721 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.369133972 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.371326576 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3692917 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.369295739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.371076186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368695815 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.368935119 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.370274448 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368838749 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370144028 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371356522 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.369470953 seconds)
  done (took 28.640091338 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369173056 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368759966 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369655686 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370915758 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369227765 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.36970709 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369253413 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.369614555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370234097 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368924583 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.369725272 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.371491637 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370488374 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.372775075 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.370537593 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372757082 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371780867 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.372331049 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.370288099 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37143608 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.372292844 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.371044722 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371265166 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.373256636 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.370429317 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.37150543 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370211538 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.371302883 seconds)
  done (took 39.628375223 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.371086782 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.372797144 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.370731862 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.371925009 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.37173681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.372018086 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.374119901 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.373836875 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372942567 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.37178235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.370693472 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.370749391 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.371794437 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.371197461 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.37257511 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.37293629 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371917134 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.372008755 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.372150204 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373230369 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.372140188 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371507119 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.372945657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.371630471 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373336617 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.37255362 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372152212 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.373440945 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372085693 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.373656426 seconds)
  done (took 42.418332249 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.391297091 seconds)
    (2/2) benchmarking "in"...
    done (took 1.390598928 seconds)
  done (took 4.031938665 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.371837529 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373492559 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.374119467 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.374831736 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.374939508 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.374659358 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.375040575 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.373029065 seconds)
  done (took 12.243456428 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.365145814 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.374593016 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.375909376 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.37322499 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.374361228 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.366059601 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373398745 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.378649111 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.36733053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.369472876 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.373766419 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.372381036 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.369142058 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367371843 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.36985613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372095513 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.378737811 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.375355773 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.37495699 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.37556916 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.376158106 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367954613 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374303508 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.379791395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.36854851 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.380031335 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.375318908 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.381059004 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3687235 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.376011462 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.372710916 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.379150851 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.376842757 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.376233028 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.376518377 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.377121591 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.378399537 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.375643682 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.37736046 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382523397 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.378600837 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.377068356 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.370739274 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.372459889 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.375524338 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.380800695 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.377272511 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.377482912 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.37155557 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.374783686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.382632531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370532113 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.378761172 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.375107118 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.375604005 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381775322 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.384431799 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.372024316 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.37813018 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.380127295 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.386876187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.385834538 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376885315 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.384837493 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380263959 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.390712302 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381751848 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.387104923 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.37933489 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.378087518 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.378340512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391275404 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.390462758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.383564048 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379786112 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.379898052 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372760681 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38496561 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.380100251 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.383605492 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.385315684 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380769561 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38157411 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.391762432 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.373971409 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.383359005 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.379226703 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.380552869 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.371928442 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.383083635 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.387145676 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.381334091 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.371908542 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.374631781 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.375601531 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.381464923 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.371835461 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.375910486 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.383399651 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.380286151 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.381242171 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375231329 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.381696606 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387887295 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381579013 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.381320578 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.387745775 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.37323592 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.38483007 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.387403121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.38212782 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.375855827 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.379565297 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.384722432 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375926427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.383622569 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.387737608 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.379005795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.388336858 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.383536315 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384372538 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.400990611 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.387776797 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.382898493 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.378859211 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.393667287 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.382359145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.380226236 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.390339206 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.381821436 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.381988994 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.380635225 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.38909984 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.378363001 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387239611 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379455891 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.387288334 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.385609132 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.383695464 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.378123808 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.384342835 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.380854846 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.384073945 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.385147294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.390096551 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.379291249 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.389455948 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.38535226 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.382860424 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.386727443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.389748633 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.385799273 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.380370247 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.388844624 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.379969117 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.386483903 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.379224817 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.389059176 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38417213 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.384567428 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384795231 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.376323721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.382697887 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.389360167 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.38396906 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.384440956 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.388102453 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.385245574 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.386423789 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.378872954 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.387406921 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.377845115 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.382561851 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.393229821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.386491903 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.384726609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.384114542 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.392270685 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.386282123 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.385950591 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.380872214 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.386326793 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.390832984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.387438083 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.393869736 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.387480217 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.387299247 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.380724429 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.381499723 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.390367432 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.380878692 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.3953832 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394155389 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401341677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.38459548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.391196701 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.380796741 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.390174304 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.38603786 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.395100919 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.386704499 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.387833193 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.379312934 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391368815 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.382118482 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.391091226 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.379344276 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.390490968 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.38922162 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.388938375 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388754721 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.38161499 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384947327 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.391327813 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.389090969 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.388647357 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.381751291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.391257489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.381651289 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.384989259 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.392162788 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.38992434 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.391581285 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.396856551 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.387510176 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.392922133 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.391448014 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.38456525 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.393184013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38958323 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.391578074 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.395604146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.391686685 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.387003331 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.394737461 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.392186573 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.385928262 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.391528492 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.399287698 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.390869187 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.384613526 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.396846712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.39191482 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.390574177 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.391546299 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383848149 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393740499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.393963912 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.400063643 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.38573877 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.394830557 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.387260642 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.394802977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.387167453 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.39471061 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.391074488 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.395236183 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.400267966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.392540849 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386669306 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.396212387 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.394477926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.391360871 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.386669606 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.398918318 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.394401082 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.391790102 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.390653358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.391580624 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.396031838 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.384288157 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.393698071 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.387550074 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.40141963 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.412133086 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.395499901 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.396798286 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.396808606 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.395290859 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.396443638 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.389401254 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3896121 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.391188991 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.389780774 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.388746381 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.3981716 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.389644697 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.397631129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3916004 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.39606525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.398402748 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.394013397 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.387978594 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.397173784 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.393801745 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.392757729 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.387144737 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.397924625 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.389262577 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395583799 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.39450782 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.389954365 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.401869086 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.400641596 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.392496679 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.392034767 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.390559991 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.388073778 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.392776246 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.400989216 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.390274626 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.401440194 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.390460376 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.395246977 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.394194128 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.402317247 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.405526748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.390130932 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.401974637 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.394465864 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.387461059 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.389615819 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.398271771 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.39960663 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.407552368 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.389977386 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.400802402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397621515 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.395968912 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.397884561 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.395600861 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.396398961 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.396792101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.40233862 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.402329263 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.393660097 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399428748 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.404989109 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.39716853 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.397182784 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.389560057 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.399115935 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.408204457 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.394385371 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.396411822 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.39504585 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.398852943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.398477745 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.397068906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.396624771 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.399651605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.401572904 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.404772049 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.401890413 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.40010069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.402114077 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.408287285 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.401593177 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.411231444 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.393676398 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.404015454 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.397243132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.393086851 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.393337627 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.396305256 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.402552814 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.391465957 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.401686632 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.400510433 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.394971623 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.399490525 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.406250738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.392620618 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.400923268 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42020741 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.393444885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.403045323 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.39902095 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.393722723 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.405519183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.400684329 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.391325396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.395584256 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.399606869 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.407097999 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.391932354 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.403622189 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.394336499 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.40483107 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.399724328 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.400100311 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.400393714 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.40097308 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.393565786 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.402957347 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401073685 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.411679068 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.395423917 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.401179954 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.395639116 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.407620969 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.411893686 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.395963434 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.406662371 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.402234378 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.395042446 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.399697207 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.406943017 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.394994293 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.405055128 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.393851597 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.398801823 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.398845373 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.404526126 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.404833395 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.406067964 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.39424751 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.397829459 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.404273153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.404616511 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.402790653 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.397841993 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.412569649 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.396464478 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.396438 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.4057787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.397601022 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.408909803 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400002053 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.401678726 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.401967916 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.408522208 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.403598891 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.405237819 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.394910566 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.3972828 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.410173746 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.410172012 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.404683878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.403722581 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.407142719 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.397674431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.403579256 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.40563207 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.401590786 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.400403226 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.407513733 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.398652842 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.400788079 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.399910782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.407484785 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.41043284 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.407909012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.399424373 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.412053341 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.413762994 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.411237424 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.397402752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.40162678 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.401475449 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.406980914 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.406205877 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.398604007 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.412585187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.412729398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.411569171 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405849555 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.405685667 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.39967453 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.409929956 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.406545668 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.401283315 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.412558268 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.401854565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413435425 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.406987812 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.404613996 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.399502813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.401534212 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.404413487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.403762119 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.408585416 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.407262049 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.40984269 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.405683399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411895387 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.406345199 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.408371366 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.407036841 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.400394586 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.409385639 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.398754361 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.410249718 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.410527251 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.402084775 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.409722023 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.408256804 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.40119607 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.409548896 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.413939334 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.406922241 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.399812829 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.40537507 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.412664896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.418651312 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.407931137 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.401136564 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.406394265 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.411248589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.407691863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.409475862 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.404967261 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.421003 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.42134191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.404310907 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.406677278 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.414035918 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.419372849 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.408629685 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.409242242 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.405719984 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.409626675 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.416438532 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.410140004 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413899244 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.416504223 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.408521566 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.414306122 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.405811008 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.411725813 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.412991502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42301877 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.409642397 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.406739526 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.422836589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.422731228 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.413667412 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.434210971 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.415973509 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.412030616 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.416905655 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.402884484 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.414110426 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.406739891 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.416567571 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.411346443 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.411225209 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.411111807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.402951506 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414407837 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.420336919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.422485649 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.411868241 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.405942978 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.406870244 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.414505451 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.41379161 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.414747385 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.411606913 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.4137363 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.412992505 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.4063506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.425411134 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.430109678 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.421430088 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.413352218 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.415067242 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.413690525 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.41897696 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.413184395 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.419799301 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.412564533 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.41374865 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.410338541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.422939289 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.414708657 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.406400541 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.410052088 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.409010957 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.416079821 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.422025343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.436631264 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.417321336 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.419152178 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.41588874 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.412921679 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.408412205 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.419275946 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.414071923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.409322585 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.412725127 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.419433837 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.414886531 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.415276845 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.409104014 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.421720028 seconds)
  done (took 832.66480024 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.415850797 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.4145617 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.413482651 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.415215462 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.415371491 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415400891 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416123891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.413974615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.413284318 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.415046064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.414990042 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416268117 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414811605 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.416990744 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.415611282 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.416617271 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416526548 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.41722135 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.415169037 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.416600079 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.416971336 seconds)
  done (took 31.010240544 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.418013316 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.415634731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.415708877 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.415278141 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.416799858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.416350207 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.415855769 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417354139 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.417285102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415548082 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.416049343 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417259942 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.416992405 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.417523146 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416553393 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416206329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.416883357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.415839425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.416318918 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.418041436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.417230393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.418078114 seconds)
  done (took 32.452676726 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.417995584 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.418800313 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.410025678 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.42379326 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.416296375 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.418702588 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.418041763 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.419296719 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.418165673 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.411693156 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.413670682 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.413410738 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.416763983 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.425078721 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.416005266 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.423943512 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.419464755 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.417980524 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.418752336 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.420179432 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.422060452 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.430969449 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.419227546 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.411542479 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.422538741 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.419073436 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.418079236 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.418772936 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.413203937 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.425061482 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.42052174 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.41264942 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.424691526 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.421729839 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.41450157 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.421297813 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.421051348 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.418703906 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.418863564 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.421048576 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.441186135 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.42032747 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.422694618 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.432406499 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.421621282 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.414075963 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.427932445 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.420759257 seconds)
  done (took 69.442654816 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.420119021 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.421087055 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.42139774 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.420911931 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.419787026 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.422439984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.420357507 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.421305683 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.420803897 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.421559491 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.420845592 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.435969758 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.420949526 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.423418148 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.421929131 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.423769205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.422068534 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.422385213 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.421752006 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.422213699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.422273108 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.424786944 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.422224782 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.423014334 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.423124467 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.422630339 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.421560984 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.42436618 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.422901952 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.424760363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.42480145 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.422676377 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.421554404 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.42426693 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.423939594 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.422686723 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.4238486 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.424194234 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.42375545 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.422189141 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.423168048 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.423305181 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.423915547 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.424224826 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.424653651 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.424924613 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.42341673 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.423618586 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.423851967 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.423933087 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.4246381 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.42465302 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.424662481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.423677308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.424162436 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.424098328 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.425381618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.426380933 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.42462754 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.425457224 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.424378708 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.425045188 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.422924376 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.425599513 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.426426891 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.424375884 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.424929805 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.426549508 seconds)
  done (took 98.08869276 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.427361234 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.425651231 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.425228462 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.427244592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.426421181 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.427352815 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.426367812 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.426533044 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.424634685 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.426087013 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.42890609 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.425711904 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.427347941 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425459385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.426617761 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.425585356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.426505364 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.428033323 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.423951299 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.426216485 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.427342417 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427896564 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.426208131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.427857297 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.425768209 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.42728965 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.427514144 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.426560753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.426314722 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.427735666 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.427726948 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.427874361 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.428013709 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.428806131 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.428338484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.429320502 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.427690817 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.427327132 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.426922495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.428377203 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.428154128 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.42889269 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.429763268 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.428617729 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.427762469 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.428241084 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.427731834 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.431619162 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.430041106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.428687473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.428457502 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.429315784 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.428918949 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.430702166 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.428570411 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.429754267 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.428758763 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.427972414 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.430165281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.429156187 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.429546182 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.4286543 seconds)
  done (took 89.812900195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.427921052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.427847627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.430656727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.42764413 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.428204525 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.42741281 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.430826033 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.429603861 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.429915231 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.428580417 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431173799 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.428728113 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429582924 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.43022054 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.430221206 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.43144471 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.429357105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.431470534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.432380106 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.430110745 seconds)
  done (took 29.891084746 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.429823215 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.430580503 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.431744026 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.431127007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.43218941 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.431535349 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.43236036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.432076663 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.4313118 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432501116 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.431433738 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.43209558 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.432729704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.430074862 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.431955809 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.434491932 seconds)
  done (took 24.206136529 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.432480549 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.431011573 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.433393417 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.432105848 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.432984311 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.432705279 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.432586953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.432030913 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.431979036 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.43280174 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.432331172 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.432647179 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.432462887 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.433827419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.430579777 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.433819809 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.431544627 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.432600405 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.433223948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.434335305 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.434461484 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.432939234 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.434924908 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.433473737 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.433542258 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.434806062 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.433390261 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.434276645 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.432836227 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.43374411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.432480854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.433904412 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.43227949 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.433500825 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.433726839 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.431921676 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.435015174 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.433900394 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.435316156 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.433824738 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.434139165 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.43498837 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.435677965 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.43394085 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.433886489 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.434852665 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.434405638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.435147848 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.434198408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.435125711 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.435744648 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.434834847 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.435375586 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.436123669 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.435934148 seconds)
  done (took 80.150787115 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.438081237 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.434276524 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.436514641 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.435632428 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.436240411 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.435741832 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.435469734 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.439784768 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.436085783 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.43665105 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.435324635 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.436598634 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.43665487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.434502219 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.43566916 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.436424766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.436218155 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.436207719 seconds)
  done (took 27.153714495 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.437073381 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.438018355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.437095701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.436705041 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.43660752 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.437909208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.436404758 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.436164061 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437826277 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.437695811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.437722593 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.437197721 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438996546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.438290249 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.43853667 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.436627803 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.437481179 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.436580004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.43695996 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.436988342 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.438467016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.439178355 seconds)
  done (took 32.926681975 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.427032235 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.427745137 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.428567036 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.444621453 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.444212218 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.427292536 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.429106952 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.428266617 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.451563674 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.473921648 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.469176152 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.444304112 seconds)
  done (took 18.599223556 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438774009 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43822968 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.439973401 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439687798 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439538976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438135506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440867079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439951616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440261959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439705658 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439512284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439310402 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439729158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438429308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44021732 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438795587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44111224 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439738053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439776577 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440433151 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439563346 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441432707 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441490663 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44151589 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440804754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440712235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440912001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439709115 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441798503 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441454684 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440484933 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4410956 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44114666 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440629031 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440546323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441085888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441246588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439623201 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440857863 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44099581 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.439906599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439336026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442749397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441195217 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440924548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441202582 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442057828 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441840106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440943213 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442625756 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442099851 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44107108 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442140475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440753513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.443084238 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441763244 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442645407 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441904321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443784648 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443482476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443408113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441762926 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443044137 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442712845 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442268929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442821042 seconds)
  done (took 96.407195277 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444801599 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.441798528 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441260652 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444142619 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443037614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442930954 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442114654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444233668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443336001 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443384475 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443298999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443601816 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442772364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443694259 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44249207 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443710193 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443633527 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443780595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443600672 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444538891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44348621 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444723752 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.443780522 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444225473 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444252154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444675705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443204186 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443968105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445913966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444193788 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443793768 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444104189 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443016602 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.444214668 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445278054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44507567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444139505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445779928 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44440284 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446403824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444842879 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4449521 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445840018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443717066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446796357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445228787 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445412211 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447149944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444628864 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445608427 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445772265 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446624872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446743504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444350987 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446702455 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446223296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44620356 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446148587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446217565 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447927032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446744591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447660246 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446047259 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445931929 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446897453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446675016 seconds)
  done (took 96.663058763 seconds)
done (took 1951.770476958 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.601745386 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.557237196 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.436437451 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.451615669 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.436616252 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.439140331 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.448474399 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.438985779 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.437772769 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.4381426 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.437515876 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.633106558 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.473736167 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.440684627 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.436819545 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.534547525 seconds)
  done (took 28.954448172 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.46843286 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.44638179 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.57693808 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.447984407 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.469284431 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.658089857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.510260964 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.44664978 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.645863335 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.467746362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.445239344 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.47333169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.458483044 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.432559748 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.465575481 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.660122359 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.737892618 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.44233629 seconds)
  done (took 31.566615623 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.962523309 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.448985672 seconds)
  done (took 5.725232875 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.46640209 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.45091784 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.443365041 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.442671128 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.436391725 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.436987627 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.442986583 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.438890297 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.441045328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.593879389 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.448588162 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.45612406 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.442473131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.447995675 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.45603342 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.494002213 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.598109174 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.45865731 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.451261844 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.451826914 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.443758442 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.549174277 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.491387321 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.456492937 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.589591724 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.445363735 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.453859527 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.453540969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.573533648 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.459304872 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.445328704 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.447575339 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.447406621 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.439658893 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.009376881 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.438946744 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.472894659 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.460602826 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.456061323 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.609037664 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.452238948 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.452126653 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.448193998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.02143601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.579934134 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.587364721 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.444326227 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.452376539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.450466308 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.517379509 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.451857314 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.447225151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.508357078 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.328159555 seconds)
  done (took 91.909637964 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.493463058 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.441241678 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628767202 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.467815007 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.440965965 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.464373647 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.464485339 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.782637595 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.470694105 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.440899698 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.800663308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.124204428 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.453502047 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.510260926 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.475430615 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.489578709 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.441100055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.478969823 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.446586643 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.442345706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.050873908 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.445695837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.466964777 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.527919313 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.483207495 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06364221 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.447373087 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.446343841 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.449780844 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.440736728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.092925511 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.458356585 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.491793914 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.443664386 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.762866233 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896394372 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.846942454 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.450047617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.475920025 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.443892423 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.464981521 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037581743 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.86967348 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.441012059 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.447627404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065178976 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.442581029 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.447094463 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.447772872 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.719977483 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.448286892 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.444734302 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.442827025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.4486762 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.442885374 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.488731431 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.495743073 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045793605 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.44644575 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.446643064 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448937472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.446830031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.455639079 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.447199652 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.4471625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.893233713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706232548 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.450944997 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.893331913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.089602753 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.448449097 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.15795489 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.449009654 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.471647891 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.482012868 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.457426479 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.445453088 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061828908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.484700006 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.444688462 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87106532 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.450552612 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.778751807 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.468102025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.444999377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.068625647 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461190994 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.486519618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.446160893 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.450670385 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.470702824 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.446341925 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.767702108 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.498410485 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.443555202 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.44412768 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.458522006 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.445314625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.447672029 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.446381905 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156623356 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.46018249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.444865452 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.473181173 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.444558803 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.451929634 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.450036156 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.445956533 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.7358324 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.451860181 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.454310057 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448342553 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.447151518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.452491092 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.522898589 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.456974577 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.806729954 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.450453019 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.446351729 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.471460995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.447623036 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.4840109 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.447976794 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.448621924 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.446774381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.828861433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.470483384 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.451341072 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.449552182 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.462127688 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.470204716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.457445849 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.504042245 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.449129485 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286807726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.491825625 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.495650183 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.449206582 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.46340517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.449397202 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.460055062 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.447709413 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762115118 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.763619276 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705138076 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.448613874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.447028626 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.311230566 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.489920112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.637247779 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.470744366 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.449203218 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.752061899 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679764691 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.449393114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.456709895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.449808765 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.736032245 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.4555404 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781683963 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.111271637 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.455440193 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.458419589 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.282460571 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.300401671 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.453894203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.453767829 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.77317441 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.471920593 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.450822136 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.451274807 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.451827661 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.452229748 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.458642518 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.466608813 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.452470738 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.452172685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.79348775 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.652023183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.472300201 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.453129501 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045295854 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.474951676 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.453176693 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.459813169 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.454022926 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.452447662 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.511640399 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.453348015 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.488357445 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.45379629 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.456736359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117998933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.451533965 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.460750379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.651440753 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.25145756 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.457039478 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.455894692 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.458444937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.514219612 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090792804 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.49782852 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.828514614 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.46269883 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.49702851 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.471334901 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.465650029 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093741841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.458037803 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.450991117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.260137073 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.456970416 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.876195692 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.453308615 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.455175425 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.186488359 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.459769417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.45627228 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.452246766 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.453444397 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.760749257 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.460357439 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.481239201 seconds)
  done (took 527.682875606 seconds)
done (took 687.14969228 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.459041107 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.459336174 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.460388501 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.458919687 seconds)
  done (took 11.166678468 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.472653365 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.45992214 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.471340843 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.458213426 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.47281942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.459448916 seconds)
  done (took 10.126049762 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.453390508 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.459827216 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.460188257 seconds)
  done (took 8.705070811 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.705244977 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.478177496 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.884786333 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.462027675 seconds)
  done (took 9.862363122 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.471346081 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.472424662 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.471603676 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.470943545 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.472648329 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.472837335 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.472659762 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.472669298 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.473197752 seconds)
  done (took 14.579064621 seconds)
done (took 55.769330193 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.636627959 seconds)
    (2/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.442562198 seconds)
    (3/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.485898776 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.562632488 seconds)
    (5/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.523023037 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.533537913 seconds)
    (7/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.528591568 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.688051075 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.770010913 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.499012037 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.639323482 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.672035312 seconds)
    (13/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.546365154 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.733066195 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.627966272 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.506908947 seconds)
    (17/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.939236381 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.62472948 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.596578038 seconds)
    (20/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.551987664 seconds)
    (21/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.545633924 seconds)
    (22/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.552128213 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.629521896 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.488516841 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.776829789 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.632710836 seconds)
    (27/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.581857868 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.543501497 seconds)
    (29/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.691604841 seconds)
    (30/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.736771453 seconds)
    (31/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.545054692 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.737547353 seconds)
    (33/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.547366482 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.622862086 seconds)
    (35/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.531517792 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.440751545 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.549474465 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.442993855 seconds)
    (39/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.503502405 seconds)
    (40/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.439840072 seconds)
    (41/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.600389557 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.440962788 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.546218539 seconds)
    (44/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.574182108 seconds)
    (45/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.449858593 seconds)
    (46/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.471525826 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.531321825 seconds)
    (48/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.549728819 seconds)
    (49/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.777829855 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.750774804 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.477780465 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.613801988 seconds)
    (53/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.658283058 seconds)
    (54/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.534998251 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.568685352 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.449754027 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.590761808 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.626068902 seconds)
    (59/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.455935673 seconds)
    (60/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.539448115 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.624679172 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.58321153 seconds)
    (63/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.442256029 seconds)
    (64/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.441708671 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.596882732 seconds)
    (66/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.459413035 seconds)
    (67/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.473115505 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.440864756 seconds)
    (69/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.463235541 seconds)
    (70/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.456368563 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.564000882 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.634527912 seconds)
    (73/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.545050939 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.561125499 seconds)
    (75/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.804767372 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.552442434 seconds)
    (77/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.80889006 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.569877823 seconds)
    (79/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.470296056 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.479175328 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.822173553 seconds)
    (82/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.667190329 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.734558773 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.468026553 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.755512839 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.600235432 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.695967044 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.556429973 seconds)
    (89/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.772589926 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.50475184 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.589672189 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.468969034 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.565130223 seconds)
    (94/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.497725479 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.443270906 seconds)
    (96/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.443119292 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.519048817 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.497173022 seconds)
    (99/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.463411859 seconds)
    (100/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.485939892 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.572850913 seconds)
    (102/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.501489903 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.591249659 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.547355205 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.863405016 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.608430884 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.053812122 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.503942368 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.689839903 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.549903211 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.698875531 seconds)
    (112/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.571807555 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.59167741 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.445241675 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.740878459 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.05812169 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.624365076 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.629755411 seconds)
    (119/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.535341965 seconds)
    (120/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.494619912 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.451084294 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.864596643 seconds)
    (123/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.453297452 seconds)
    (124/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.445358492 seconds)
    (125/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.445563757 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.528896439 seconds)
    (127/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.479881942 seconds)
    (128/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.700383766 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.667590559 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.576050815 seconds)
    (131/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.700961916 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.570604904 seconds)
    (133/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.471690392 seconds)
    (134/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.497251951 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.499053941 seconds)
    (136/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.577245137 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564671357 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.601697138 seconds)
    (139/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.443628358 seconds)
    (140/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.658302131 seconds)
    (141/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.591717059 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.592060558 seconds)
    (143/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.550938366 seconds)
    (144/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.446189164 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.551825526 seconds)
    (146/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.777388187 seconds)
    (147/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.506365082 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.589194372 seconds)
    (149/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.456206913 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.791218971 seconds)
    (151/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.664649488 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.474197259 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.635134675 seconds)
    (154/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.503396434 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.826546868 seconds)
    (156/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.507078076 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.467474672 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.577353003 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.509202509 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.659928283 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.707215042 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.639956484 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.592951356 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.517353359 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.506267312 seconds)
    (166/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.532045403 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.583720369 seconds)
    (168/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.464062407 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.497852121 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.457497495 seconds)
    (171/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.643408565 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.871889203 seconds)
    (173/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.504603236 seconds)
    (174/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.705892831 seconds)
    (175/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.459059345 seconds)
    (176/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.709944784 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.507237476 seconds)
    (178/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.87666646 seconds)
    (179/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.665112931 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.674856316 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.878161282 seconds)
    (182/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.462834519 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.492700294 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.62822013 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.599058919 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.599332516 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.4843338 seconds)
    (188/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.613514413 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.750084931 seconds)
    (190/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.455029508 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.766219619 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.609260792 seconds)
  done (took 353.928718135 seconds)
done (took 355.260440797 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.499664887 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.575704791 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.478976739 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.478437334 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480383381 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.471801277 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.505194746 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.479035758 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.492609024 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.494750937 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.472656248 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.493660129 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.495054193 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.491601933 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.514836708 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.481791379 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.48000169 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.490303085 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.494060954 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.495817109 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483806568 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.481336113 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.508556851 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.48136435 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.488960018 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.490197898 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.486491328 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.476668058 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.488311524 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.49557942 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.474744552 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.493855188 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.496881399 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.492458381 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482161795 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.492520219 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.483992324 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.576323599 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.502001907 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.492557723 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.489315339 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.497384147 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.487030225 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.486403842 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.492900601 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.51123282 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.490120151 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.497524831 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.476273284 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.479148082 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.510818506 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.494790493 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.49232496 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.474716851 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.486508231 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.497619765 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.492727057 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.503761264 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.491228801 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.484614594 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.517159212 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.502829242 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.49473275 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.490854573 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.491452881 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.49752918 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.493246628 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.499730915 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.490458698 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.486123316 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.484824039 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.491348976 seconds)
done (took 116.858381837 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.607567269 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.479245972 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.642505191 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.490966886 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.650834551 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.609462144 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.492774203 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.49298379 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.493441209 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.280085861 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.492781335 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.493328956 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.48117587 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.492534319 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.603693806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.491959536 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.492782459 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.179236604 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.493113685 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.624071092 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.483525309 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.493412573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.49305402 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.292931448 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.480842713 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.477494252 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.625716919 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.493971177 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.192029168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.477857562 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.481704643 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.191857884 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.627553299 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.513317155 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.503811355 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.502470624 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.652891186 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.502509882 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.610381435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.61025155 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.644382495 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.534049307 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.479137721 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.484707227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.497960236 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.493606931 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.494215216 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.524115931 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.482856486 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.496489806 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.180871956 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.503413568 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.504555183 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.496823651 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.496817505 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.515612114 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.495850901 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.497182364 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.628452061 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.497138505 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.611257721 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.29517044 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283016236 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.49631079 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.483328909 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.496285546 seconds)
  done (took 118.756431797 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.555267443 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.563819216 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.611939549 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.493266643 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.536672049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.612945319 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.49239465 seconds)
  done (took 12.219094328 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.49363617 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.498245605 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.536346139 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.534607848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.497345841 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.660746893 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497744043 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.498445489 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.497710725 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.538861739 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496892377 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.498383927 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.506446625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.487641344 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.535058644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.501005825 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.609188169 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.489680335 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.497272471 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.644433889 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.498798486 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.507190969 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.538952345 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.501873575 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.500405479 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.495213615 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.271583635 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499613152 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.496958976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.499402149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.498099741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.557476406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.501201712 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.488410303 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.498008909 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.603610562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.499328542 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.498203033 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.500303417 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.491335465 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.500805719 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.499159282 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.501438994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.498964229 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.500122674 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.512467884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.498776354 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.49948813 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.499584995 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.500473626 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.538563571 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.500403717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.498743874 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.496496366 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.545572963 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.508657101 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.501306258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.498941287 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.498968091 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.499025488 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.64492642 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.539364081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.5003402 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.538148029 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50027441 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.500870415 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.499355713 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.499740632 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.583016313 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.499883812 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.538221565 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.499456049 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.674370498 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.515569569 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.50289749 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.495746441 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.494586345 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502101658 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.487770363 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.498278968 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.50160522 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.492592687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.497942969 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.502465229 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.501220223 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.651141269 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.600413698 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.501966684 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.508603723 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.500043174 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.503564749 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.544970906 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.500871978 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.504082117 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.543344448 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.611777926 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.543690453 seconds)
  done (took 153.444404339 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.506984297 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.505797016 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.49513542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.520540963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.495086022 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.494601313 seconds)
  done (took 10.375306434 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.496489535 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.506926388 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.503857558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.5058374 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.503803495 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.505392996 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.503941521 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.497237372 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.507726695 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.505044706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.504072456 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.504308327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.504928557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.504767464 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.504098594 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.50288657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.505380914 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.504775801 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.505629983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.504734755 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.491962917 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.504299845 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.505317414 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.499151107 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.50880224 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.506145977 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.521003984 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.504704155 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.504160699 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.50276529 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.512017993 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.507671216 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.499902187 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.502113746 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.509358663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.500116342 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.509581039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.508462572 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.505258208 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.506480863 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.507915303 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.506589208 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.508269875 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.507032344 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.500676751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.503600258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.511610549 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.52307303 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.506922069 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.509414126 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.508348879 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.507653556 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.508325534 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.50817162 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.499748065 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.506416286 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.511862293 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.508495586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.509243462 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.501253803 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.510632502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.508459406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.500748403 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.510883736 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.506869233 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.508592053 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.500422438 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.511665098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.508412489 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.506730061 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.510872547 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.508868991 seconds)
  done (took 110.798177277 seconds)
done (took 406.938162161 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.826072768 seconds)
  done (took 4.189191132 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.698386146 seconds)
  done (took 4.061886594 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.130219892 seconds)
  done (took 27.500390997 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.510214824 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.525837749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.51725822 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.506941509 seconds)
  done (took 11.420664857 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.868445069 seconds)
  done (took 4.230251707 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.501135053 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.51083453 seconds)
  done (took 6.375206624 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.848744767 seconds)
  done (took 4.210504155 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.921210675 seconds)
  done (took 4.290667542 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.528247223 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.504711583 seconds)
  done (took 6.401737055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.470867314 seconds)
  done (took 3.833553769 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.798677396 seconds)
  done (took 22.161968922 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.525667901 seconds)
  done (took 3.890861348 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.563012584 seconds)
  done (took 3.926380148 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.769413993 seconds)
  done (took 7.132983138 seconds)
done (took 114.988530141 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.492138636 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.496684716 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.49593217 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.494566633 seconds)
  done (took 11.343777342 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.573530755 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.573987438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.580090675 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.56915574 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.566675375 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.576265991 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.535984014 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.535671512 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.567363174 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.563492087 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.579956883 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.567734848 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.575955824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.535737076 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.564642686 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.579644593 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.565691819 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.584279281 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.53714627 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.568991167 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.513068373 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.570493456 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.56395547 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.511830516 seconds)
  done (took 38.82694511 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.999960691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.576369266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.656582514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.554883043 seconds)
  done (took 8.154714316 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.617970362 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.617485493 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.633795355 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.679231805 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.704062149 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.630143753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.538598448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.535432034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.520556507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.616980119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.695510101 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.61714138 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.833619179 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.512533963 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.832085486 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.512920042 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.513857332 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.61685416 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.666745318 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.702162602 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.512930416 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.618974729 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.625531643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.61707568 seconds)
  done (took 40.339465204 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.521009974 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.532077746 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.515628079 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.528437541 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.514393739 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.516367991 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.516572007 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.521404069 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.514781161 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.512413965 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.516981226 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.52955909 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.515152702 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.515074307 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.5214802 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.517714489 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.516051489 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.521778228 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.523675014 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.516440654 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.517564557 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.522509032 seconds)
  done (took 34.795469124 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.500145107 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.499163174 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.850403485 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.765714263 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.501128047 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.501022059 seconds)
  done (took 14.985728052 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.589144422 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.749910627 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.50754814 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.944429797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.037346649 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.512144049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.507454065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.789034024 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.181208016 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.179281731 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.579606076 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.589111641 seconds)
  done (took 22.535487043 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591919299 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51091475 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.525343114 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551486267 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511674866 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.511978303 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.57345265 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276786413 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.516491648 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789526893 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527618623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599560417 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.759955815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521294591 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517817262 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.484210471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748321523 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107654774 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51739305 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514648276 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550170492 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52095362 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.523064508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.775222859 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520785846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514310712 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.774647686 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51176772 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861122344 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843990348 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843615203 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523665864 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789875186 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215269705 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621303211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767400864 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522807374 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512444417 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.514299267 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.52480573 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523084013 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523064914 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834912483 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521083029 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512464912 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513936069 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291763286 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.520100188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.515095365 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515442901 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837945733 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604354572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.52124725 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515942157 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602484788 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515123655 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.521576771 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648364205 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153405703 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514081657 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536275175 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.522487116 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.532511076 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517140498 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294246578 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.528989356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.521981825 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523830375 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514499854 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526949438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542984219 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516215682 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.539824176 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515748805 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445165394 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53829529 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52464691 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151682083 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525226492 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.524586591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744005957 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516622221 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517082728 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.51702854 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517243447 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398871946 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528318353 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.486503963 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579500427 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28045218 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.771672372 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539871995 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546215452 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.738745169 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.485588799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518031988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.518741527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546353467 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537464579 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287798756 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515662458 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.52298807 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766361832 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.730238558 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516786558 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.51675919 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069601474 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522250357 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.544935016 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.536667549 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.780270487 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.309785564 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854237907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530859864 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559185537 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518498774 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461079923 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529050607 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.529646762 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518361604 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850593838 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.498451886 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525880008 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59117624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519989487 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520146518 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530466919 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529952719 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520719404 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.752274363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528160258 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859150741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.524821854 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519427496 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.535322912 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527076303 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.528221999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.742202274 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52394906 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801563982 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519759215 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520653141 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522141352 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.738599969 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.532351397 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.526809551 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86131189 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536405329 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.542684212 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84730017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560205724 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633250025 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553095673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.535750814 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.777606174 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.526897839 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.527229112 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533234576 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531303324 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527715983 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.529480722 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518184664 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275058759 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512199473 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529071743 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522620803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.537781656 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59672983 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530823534 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778998599 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.528067566 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514580571 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.531063286 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.53739665 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752529936 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842090908 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.539710142 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701860918 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.06494493 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276688047 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544002119 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.523430305 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.523642753 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.52415094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524634409 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522672282 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524582488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780686377 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856083931 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529458868 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302433169 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530729529 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.538689036 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.536904654 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838341701 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.532975484 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524451169 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.523420735 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5486846 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540922816 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.850576721 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751121292 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.540082588 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525827631 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.04499364 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532141015 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52544056 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52625579 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554428333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.540505153 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459133309 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864650345 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518175264 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841031877 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539410149 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.550242642 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.524618665 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525755487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547853203 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.541878152 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533153165 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.784937496 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547133893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535003368 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163107328 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461727599 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193116369 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527231502 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.540269473 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532499807 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29987583 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525622776 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527219824 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81452565 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305708269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526708978 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07180091 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.533047268 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.438648613 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856318984 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763785489 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528530127 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.527657093 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84974463 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.742831651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553782309 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544162277 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534086256 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.497493633 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157715703 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525902927 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713261806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299541153 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526813979 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536439718 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.584008886 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549477539 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979449553 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527907441 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528830336 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.530319178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.537610455 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461248943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534899263 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530417267 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281435876 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.53018002 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.081644199 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5290346 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787522782 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85781465 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.836733284 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.536748188 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.554068881 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.782996684 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858780195 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539434903 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532785772 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208294914 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.390004421 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.536611851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532337926 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447480705 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536171202 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889557402 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.552845077 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.539980349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541853893 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53282809 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53084174 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.532039553 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.538716942 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515519895 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116509101 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.529494353 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5492184 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.567647625 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53953333 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.780987316 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.547808431 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289937822 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.764863805 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523646931 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566493292 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.53785513 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537682269 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.509476721 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.533183449 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53214351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625956404 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.757927084 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.540536359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.501616742 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.591293455 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743756526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.535372663 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.533301994 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80937553 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.537972842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.55009743 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472170261 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564194188 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.534133498 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54080316 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.525100167 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593885746 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607663327 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791334923 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.86648427 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865847305 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993134753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533362278 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542064629 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.549878993 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615457459 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533572312 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.568681408 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.541081115 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286999831 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481318693 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278322269 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865110997 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.542057082 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545344272 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534908862 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776218709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534364375 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810683592 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533685764 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.529301197 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557117309 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540598396 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55612517 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752144103 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809853804 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536172449 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540414039 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542389513 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.536304493 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868880603 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.754994664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123755284 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173407321 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53635997 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544781427 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315612759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812699726 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53575002 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539125098 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536347998 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.560814908 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53702618 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.544830958 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543967007 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76744392 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861858593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251943574 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864224557 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.575354102 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.537804223 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538358883 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.791732956 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370236441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795427241 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284076184 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414328065 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794029982 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610461099 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798160992 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.543553912 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77529745 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.543495375 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544438364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538682435 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539049551 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.538638862 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863104066 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303566617 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800317244 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.546220299 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.544607569 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57449952 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.798784525 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.769790945 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421327668 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762669618 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869731282 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.555588251 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.540282263 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296802962 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867743964 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548276676 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.545686803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811028252 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546266918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575496036 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.418573826 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.53878593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182894788 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.751092903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560998335 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552044937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441545902 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288728426 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.553311417 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133234022 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540518713 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552618385 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822287716 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.547327762 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.555597823 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826755966 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.547025103 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.543230222 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809040832 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.299896734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.467566904 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.547151769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58102725 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.551375787 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542426316 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601914021 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54297586 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543687205 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.998930721 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.542406633 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543905351 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556860524 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.550300995 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562057118 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.550169787 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542200719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.550790138 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.525856791 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.526705857 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.563926244 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682941478 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176239593 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545743104 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.154988557 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.881817059 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.791740781 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.558718034 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.518480178 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.549400207 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544025753 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544278526 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543982673 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.54310638 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209149542 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.558064199 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.877278596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556684343 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.757873931 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755547173 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546410551 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812589695 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565632802 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570685428 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.514564924 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546052823 seconds)
  done (took 1065.93149932 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.560360885 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.619717435 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.580870927 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.563588569 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.567240605 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.615316717 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.584889524 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.659151624 seconds)
  done (took 22.150944876 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.535071192 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.551325562 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.550576056 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.551853493 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.536691095 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.125042531 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.556289664 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.550070938 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.559001399 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.550196078 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.549344817 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.294088019 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.553168096 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.536215806 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.547178218 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.547543016 seconds)
  done (took 35.501976213 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.81355098 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.746683405 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.152573024 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.621017713 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.593915631 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.573690637 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.922701037 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.546791041 seconds)
  done (took 29.371262423 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.551466606 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.550992317 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.552107546 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.552446109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.556289196 seconds)
  done (took 9.163828956 seconds)
done (took 1334.46592133 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.553391916 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.552928932 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.552304066 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.552950195 seconds)
  done (took 7.611086114 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.517901574 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.517522426 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.517058201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.529535533 seconds)
  done (took 10.48392528 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.40526009 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.186056696 seconds)
  done (took 5.993097911 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.124676035 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.124548759 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120701171 seconds)
  done (took 7.771141695 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.855619639 seconds)
  done (took 3.258319771 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.539071239 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.565176833 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.563213692 seconds)
  done (took 9.068576469 seconds)
done (took 45.58597666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.548354717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.310436727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.69823785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.544687301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.701416319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.698385837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.859826878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.540181877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.550391626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.546413594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.543443462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.703549742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.84910169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.308099333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.849179215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.308008128 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.701897992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.541106997 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.541152798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.56068001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.860340384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.540298199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.548842597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.542228547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.703703857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.722640359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.547616921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.310969916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.552618715 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.550722093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.688884546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.54152959 seconds)
  done (took 88.418045598 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.540126017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.55586589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.542540009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.559793006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564983263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.550227904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.563884459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.541831015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.541697254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.541052393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5424599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.562124678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.56329822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.542297079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.564994849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.541974355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.577440287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.548240158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.556853398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.541911381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.561303212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.543349431 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.556059293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.541316816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.55045599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.541211461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.561157272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.543797699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.54118962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.581587108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.548493673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.550370978 seconds)
  done (took 83.068635267 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.542604861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.548825459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.550203233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.548194227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.56974558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.550273697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.549565108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.549750962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.565742584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.560963352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.546686886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.551499152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.551638104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.544495801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.551076114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.556930351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.550213137 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.549853768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.550118177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.564867178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.553442997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.549774758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.585420103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.549815168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568995048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.549829051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.563990203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.546511256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.581206271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.549296539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.551157228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.572449173 seconds)
  done (took 83.181603578 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.787651589 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.560359675 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.561882738 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.555309998 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.565303446 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.561555026 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.554716713 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.791077261 seconds)
  done (took 16.341957109 seconds)
done (took 272.411314933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.5547347 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.125028079 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.583346598 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.554963808 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.572264084 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.583444178 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.786446792 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.583069376 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.777274185 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.560537191 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.570727403 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.565437714 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.532587224 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.708748548 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.466142244 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.56677445 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.547340236 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.558046823 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.237694426 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.815531405 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.583100943 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.554549216 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.517725686 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.569031757 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.531754473 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.631155689 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.639286077 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.731497167 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.691438471 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.636750719 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.1627371 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.572465765 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.557039131 seconds)
  done (took 71.038189229 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.554065371 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.563497492 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.56383025 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.56455704 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.563629939 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.56517385 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.553400507 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.565277554 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.564000613 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.565981682 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.566967424 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.565625813 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.565935285 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.565317007 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.564868726 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.538385913 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.555992598 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.562816928 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.554685456 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.538181248 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.56532973 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.565172382 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.566765105 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.565880025 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.564847432 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.566531896 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.565544592 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.566440066 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.566676605 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.566712141 seconds)
  done (took 48.273511624 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.566688516 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.264700455 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.414983638 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.564706024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.558280064 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.561157418 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.920329211 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.572542093 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.561290906 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.560790411 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.120477252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.575708056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.594885065 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.42660504 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.566526639 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.56820902 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.566834473 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.557156548 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.266494687 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.572782421 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.917159561 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.57273517 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.919452752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.573212252 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.561694998 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.559362927 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.565342462 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.465286291 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.592038776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.139797471 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.54271991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.916363082 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.390022246 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.504477575 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.540174129 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.575720079 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.569108196 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.132533045 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.569087311 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.561233584 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.917335013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.567204324 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.448688433 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.278123668 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.581892195 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.568745889 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479900337 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.142062717 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.871853754 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.573745711 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.50916959 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.571184964 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.571437634 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.562766121 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.864945461 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.570089726 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.561204653 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.515442521 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.567453174 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.918378576 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.576623632 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.561934911 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.273926181 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.569008702 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.276997818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.570325105 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.568457217 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.562953346 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.428538227 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.567550635 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.307271398 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.584615562 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.569396795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.133177582 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.275854023 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.562778174 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.59190773 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.280895494 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.452690596 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.948644641 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.574594629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.459488814 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.951744561 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.573969363 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.574123606 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.572614292 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.570117919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.678555284 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.917561871 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.221247899 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.297915535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.529089283 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.927315304 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.579897295 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.565163487 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.524435577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.573136264 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.573284067 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.455332604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.332341803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.592679176 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.573002118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.301782971 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.59301826 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.926693889 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.574961184 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.516306342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.570885514 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.639943341 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.573866437 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.569858796 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.569331042 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.926338146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.574882744 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.574830098 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.278894122 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.17196896 seconds)
  done (took 220.231788644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.561835935 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.579581088 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.557817343 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.578425122 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.559555338 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.56792423 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.559405003 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.561366799 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.565657923 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.559900763 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.560932681 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.569163238 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.568192 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.561266647 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.567170286 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.562163983 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.560939263 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.575274721 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.562314384 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.561573875 seconds)
  done (took 48.719755763 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.574894352 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.27405804 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.235543009 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.584197962 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.576806568 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.568869519 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.636721995 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.584257094 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.577097639 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947758423 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.787816112 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.583412674 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.577336598 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.578034514 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.228911644 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.555999869 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.9483201 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.284248177 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.585653139 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.274823625 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.555535639 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.577654045 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.566648062 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.274754584 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.964623718 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.933051868 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.646389468 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.282435919 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.584877308 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.580795829 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.276756248 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.587296905 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.571561268 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.264987691 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.58643579 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.59419627 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.578265808 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.641284175 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.64806331 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.954517187 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.289925219 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.943967999 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.597985896 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.745741887 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.581711081 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.551266442 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.291188773 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.586309712 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.551992224 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.580847418 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.584389141 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.246608431 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.580152883 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.24554415 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.585950052 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.580444993 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.278450623 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.25149899 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.241429933 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.791361353 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.576490571 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.930454046 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.586203453 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.291884929 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.587727283 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.581789416 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.582369164 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.788310402 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.289209741 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.936763832 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.958197739 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.958456496 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.588513447 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.654609545 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.587698883 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.950554572 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.659747712 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.997540999 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.947483271 seconds)
  done (took 144.619488208 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.893637371 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.707644766 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.040204435 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.244358793 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.144667786 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.733944339 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.702769954 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.864213226 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.60303162 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.693322824 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.370732997 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.688905231 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.422218331 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.651369736 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.69981701 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.720064802 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.060310341 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.575114612 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.332571173 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.357553497 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.601298497 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.690949983 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.140890252 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.791640986 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.58341235 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.210785973 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.590210964 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.170992414 seconds)
  done (took 59.71164123 seconds)
done (took 594.002456578 seconds)
SAVING RESULT...
DONE!
