cset: moving following pidspec: 32663
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.560674923 seconds)
loading group "string"... done (took 0.516859041 seconds)
loading group "linalg"... done (took 8.750949252 seconds)
loading group "parallel"... done (took 0.178927619 seconds)
loading group "find"... done (took 1.40144708 seconds)
loading group "tuple"... done (took 2.074806874 seconds)
loading group "dates"... done (took 1.35680518 seconds)
loading group "micro"... done (took 0.214139465 seconds)
loading group "io"... done (took 0.611642673 seconds)
loading group "scalar"... done (took 42.997641305 seconds)
loading group "sparse"... done (took 13.327159925 seconds)
loading group "broadcast"... done (took 1.147188137 seconds)
loading group "union"... done (took 14.888207524 seconds)
loading group "simd"... done (took 5.109689323 seconds)
loading group "random"... done (took 10.148429767 seconds)
loading group "problem"... done (took 2.24809394 seconds)
loading group "array"... done (took 24.512812218 seconds)
loading group "misc"... done (took 1.15239518 seconds)
loading group "sort"... done (took 3.6122761 seconds)
loading group "collection"... done (took 21.3043428 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.616875981 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120790924 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151781188 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.180521229 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.21191441 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141870582 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161136085 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.562760724 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.055197423 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.218998225 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146804793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.563506259 seconds)
done (took 5.884505209 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.289539048 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07467376 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129206502 seconds)
  done (took 0.880733536 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075933597 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174071464 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09583412 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113897976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113408291 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112456459 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09683717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113158234 seconds)
  done (took 1.500281804 seconds)
done (took 3.440659771 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.818785183 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.82826036 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.532839995 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.127137165 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159671682 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.133995261 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.323148795 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.172402221 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117934986 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.127812562 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178815677 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.391062575 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.436836523 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.00956828 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096762159 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132218878 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082891553 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69729586 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084953949 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132372925 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.5353467 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116270587 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121058584 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.128106307 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.21909265 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136406691 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.193160148 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103536285 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691192759 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104513274 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188666501 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101572424 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163182182 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.220566413 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.085335439 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109589781 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674616314 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192235725 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115226549 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098980745 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675970085 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083301821 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197011768 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110164043 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113919511 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.20122465 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117695737 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079181879 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107554083 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107673483 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16189425 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455835081 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109258142 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.152318562 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109254037 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690537497 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097450467 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159261249 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127796694 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11237308 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.098573886 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120912238 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172322525 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.13678629 seconds)
  done (took 20.100814102 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116665328 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143771971 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096379827 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14284412 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14323641 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100150388 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086671599 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096039846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.11118546 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18743731 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141694046 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146752564 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076148731 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099719416 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120144568 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.234087797 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123444076 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123308327 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083431914 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108791458 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127127098 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114171473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111369561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096014395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172769664 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210026016 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124595809 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126958697 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096889669 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101674335 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144817099 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.167352826 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077001337 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09619614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1849484 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123266057 seconds)
  done (took 5.254515535 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205650744 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118881924 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197001377 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184043144 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154518122 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.172034504 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122525786 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272682596 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.194192365 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166559882 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132594598 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114991847 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081596466 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099181148 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.165268742 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078923762 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.804628898 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188219631 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154103673 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127702083 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089836896 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100372637 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387684506 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101721252 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082931193 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104380471 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072802377 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179968256 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105526957 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.231976981 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118768005 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106964851 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114283289 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209503354 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130807006 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125199558 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105726323 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082694647 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.236774991 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09110297 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09981791 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076263733 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123246964 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131579997 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113902761 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100188773 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109966281 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227112021 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099481839 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11806179 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.061054068 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200359349 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097355399 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099894917 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337280112 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116560128 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086585759 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098355873 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.310984749 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137009288 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084086271 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078623465 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105995727 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078361218 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.418619523 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092758582 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.01859402 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098855861 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160535988 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101420491 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104580841 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082378042 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105001419 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087824582 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122006242 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081836881 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097762633 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082312395 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096542092 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086742936 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117713537 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086396018 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098480733 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148780556 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118556664 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11908991 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110255323 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.111555646 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080442095 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132521315 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097569224 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082786958 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145566106 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105930405 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100237477 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102482124 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101024 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128533298 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099700118 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.2112656 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082876462 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126814688 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099847488 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112859284 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120086381 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098445112 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084235409 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094917017 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081168745 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161028095 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082383384 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080382716 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103085899 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113723236 seconds)
  done (took 24.014140807 seconds)
done (took 50.047184057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.427242507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113487664 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114887437 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113672956 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112822119 seconds)
  done (took 1.634599457 seconds)
done (took 2.362571839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.338767822 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.208240667 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101739471 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.20117205 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089380396 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.207126217 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.173574888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102466028 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21822735 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083531698 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196540266 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084897055 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108180405 seconds)
  done (took 2.873165348 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091612255 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119515029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082080086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10982183 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076643321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091311331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110711236 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14099616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091826798 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085756778 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094676899 seconds)
  done (took 1.82510242 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091524164 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116437495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081719231 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091932935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095313333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090917759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10983427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10321011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110483008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086055365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094503703 seconds)
  done (took 1.802701812 seconds)
done (took 7.225795128 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.151786467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.933010804 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.125098519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.178695503 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345712542 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.225931733 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.660673388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139260363 seconds)
  done (took 16.672533374 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112850183 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099361113 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098716539 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101883416 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.080346479 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.1003637 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082178126 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099002132 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08401493 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100415461 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083830859 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098039221 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083568609 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100236186 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080537261 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098118543 seconds)
  done (took 2.296956914 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116723969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116397615 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106219596 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09093679 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105215852 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10385573 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087991396 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104347585 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08394472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102629212 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091532851 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107386113 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105789856 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083799724 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10461964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092210218 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10170805 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087484314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106509471 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088069313 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108553737 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102952484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088672455 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108177642 seconds)
  done (took 3.235948453 seconds)
done (took 22.936614495 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167603799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086593449 seconds)
  done (took 0.986581096 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101212977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122591787 seconds)
  done (took 0.965932138 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10649603 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099179279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1398408 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117787935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082947066 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082680182 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134283687 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100345342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082776299 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100827057 seconds)
  done (took 1.788903767 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084898343 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10306213 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091162938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122252959 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11260312 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084539483 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105599374 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086328637 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106852937 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081902859 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107730572 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102020621 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108349698 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121954597 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.210359109 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107238678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10963119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086542928 seconds)
  done (took 2.672936403 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081023262 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082661079 seconds)
  done (took 0.908383781 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083384994 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096801804 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085058994 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102271337 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08014198 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098618204 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080590682 seconds)
  done (took 1.371344866 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48827824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258525977 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31972176 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117634473 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136752001 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.362597584 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137540541 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097344659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115386332 seconds)
  done (took 2.840281116 seconds)
done (took 12.273757116 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090759388 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.135410885 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.489648352 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117928027 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080052095 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160849534 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.269321061 seconds)
done (took 2.090916019 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343410069 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125633772 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089961675 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080826869 seconds)
  done (took 1.382334816 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078382796 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08522978 seconds)
  done (took 0.912621909 seconds)
done (took 3.046905083 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077898559 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078026348 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111692818 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097536581 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079484343 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.076723995 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097310415 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078816954 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099734248 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078636833 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097142715 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078828407 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079170933 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095035081 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076769947 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097061163 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076446961 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095045929 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076481487 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078742715 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094857953 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078965288 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095193079 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077327528 seconds)
  done (took 2.874472954 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103987611 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098295267 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085931457 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104064938 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084379357 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104137329 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103448307 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08150402 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103752391 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083038582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102919792 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084555825 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101152647 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084977589 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101299087 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085461962 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104212981 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081232755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101244308 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084579223 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103099607 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08118704 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102784052 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104790452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084155717 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102324076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083233446 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099344031 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086558209 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103182849 seconds)
  done (took 3.58645656 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088154671 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077181032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097779062 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089554559 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095588783 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081049987 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095717298 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08133736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100670208 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078451874 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101521856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077495907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080569009 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101278115 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082013369 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103832131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096076854 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099291704 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080866037 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.10152537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083691563 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.099312862 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08129268 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077784701 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09663801 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078031649 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097348241 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078137198 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096948189 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077791288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101813779 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085127405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078121424 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108997771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085152072 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096307698 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086339015 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096533103 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082971273 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096677531 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077501346 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096469299 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081658683 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090383486 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099789296 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07918642 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.099651922 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083484322 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.102007481 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085303533 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095998425 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081640291 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102173303 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08456438 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08421805 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097097533 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078666574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095957478 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082441671 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096880229 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077733067 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07793642 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103271326 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079012634 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120309057 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10817148 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080654932 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083810946 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100206342 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085777213 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102589516 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0972137 seconds)
  done (took 7.260157785 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081249451 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105420016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079875533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098715929 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077065382 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078908393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104215019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078558012 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098468322 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097327869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097639737 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080201053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09823266 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082602414 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097461228 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080228581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10722786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076354204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097551365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08229633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097386157 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085598918 seconds)
  done (took 2.742019903 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.2250055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10653698 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144242315 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116339172 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09989188 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11637606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08581177 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105400767 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103804 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089180525 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108662823 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086182239 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117216044 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107686168 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089942385 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108992498 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086998993 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10893371 seconds)
  done (took 2.767103793 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092523612 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099372942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106054931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100777434 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081768868 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103476146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08823766 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1162934 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087266914 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101076787 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110901513 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084857763 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102428058 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082147442 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101694852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082150703 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102197186 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081828177 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111479493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088021023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107418662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093193578 seconds)
  done (took 2.885886131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096496033 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100861829 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103323309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104915482 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081728768 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102921439 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090397861 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101000123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091440769 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102585078 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082549838 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101351546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090336265 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100918175 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109532341 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082630877 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102501134 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083104865 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102137044 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081073894 seconds)
  done (took 2.675761877 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121847037 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115607316 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09782379 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128015495 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116727097 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096694238 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127606736 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09761324 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115166774 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128822183 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096702788 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116108025 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127323988 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105168803 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115594958 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109424486 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126754354 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127498541 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097292377 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115748412 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130238874 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097758259 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127851152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09696075 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11600528 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115111758 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097599803 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124644774 seconds)
  done (took 3.957129744 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079160796 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081428665 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098763404 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079171491 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098068761 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078972293 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078928708 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09854484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080979383 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098248497 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08126476 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100653702 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081993763 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081124417 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100215706 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081909195 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100684856 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079370931 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097756943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079259582 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082077402 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101098303 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081313331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098151927 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079319034 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100239114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079450577 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079216894 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100966888 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079807543 seconds)
  done (took 3.405335034 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087656484 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111015347 seconds)
  done (took 0.9693774 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077970314 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11821751 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079578819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103884213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088483799 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101687904 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092565764 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107086519 seconds)
  done (took 1.538418699 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105184645 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.123126172 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090046605 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114555159 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10238936 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120812752 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168138951 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089395227 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10969844 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083204737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.122506344 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082477816 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111750512 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088296686 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110345682 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116842126 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083643993 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093383338 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109297895 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085531931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108319363 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11827627 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093668833 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109645269 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085821254 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114048423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097340037 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113649696 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088280892 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114364059 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090199546 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095421236 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08804119 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107296211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084131073 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.120528303 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120329441 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088290797 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112254745 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090305831 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112085722 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080835543 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113249346 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090119949 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115491816 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088790135 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109244209 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081770495 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10272931 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087533436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100784038 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086457746 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096540585 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093106881 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113073641 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10280138 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104985404 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088418941 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106896151 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08679763 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110682703 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087914748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113336283 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086977859 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113162011 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093538337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111051326 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082073731 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096610153 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084332527 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112508888 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127848526 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095838212 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109106733 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089981668 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103970448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089253453 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110079443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091761387 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114003267 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088630806 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110553561 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094786821 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106008744 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087582093 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109794864 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085814623 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106210451 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084432304 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124118141 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086891308 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102969218 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084015541 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113710366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08883173 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106571995 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084296149 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112629606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077471631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109160108 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090468998 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109667272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096916617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110418192 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090429669 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11294765 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.114615396 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088584633 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106990568 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080170242 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090786998 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105965115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092060495 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097317875 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089359434 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106739803 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.091350309 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112914773 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086272342 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.109255907 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114358568 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096300177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106343401 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081043854 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088788931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.108419121 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114234099 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096014064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106010218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082319172 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100832991 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092396203 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107949344 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090783933 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109570809 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090666147 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097378708 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085387802 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090015597 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114006752 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106463577 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090243771 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113401072 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091502069 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107538852 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095216979 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107378016 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084178829 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113154355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088711962 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102252844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094798891 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107939804 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086834434 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108455903 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095002402 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108875237 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091203372 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107672718 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090365258 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110368029 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084285499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108971421 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08755278 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11641446 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088493687 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10240022 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08169204 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110370423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085560528 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10804855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08438369 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108258443 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091207324 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.105051618 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088608213 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106863914 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110483332 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118166621 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091170492 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112075696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095695563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108707529 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091439392 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.108338249 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09131158 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11031994 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094399536 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111805506 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090443003 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108463751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080162101 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110951354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095197508 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103983563 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085643102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104106835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090557449 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115484834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088811165 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109869554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086745138 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111011997 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096056872 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10820794 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08873467 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10423215 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089447706 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11335923 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090678071 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110842484 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096585978 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110156367 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082390724 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11417129 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086354353 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11230026 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083970717 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105228373 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085588778 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110624538 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087612931 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.1079325 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07860207 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11415264 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095330306 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109194262 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085123542 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108918027 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099789014 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106909804 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095875175 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108810332 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092866931 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123056393 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085193267 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108724702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116403827 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089406265 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078544915 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112044288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087776961 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103506243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087467373 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10721721 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090694089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11166478 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090725503 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099285457 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089388702 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107051848 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085782656 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102685693 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096247013 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110197439 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089866946 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119527325 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092384618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110912577 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092051972 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109069787 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091759074 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111037837 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091008767 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111559596 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088104104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105633735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089659195 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10507004 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085953041 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10846048 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090578789 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110881721 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0923818 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108671699 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095915628 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109378006 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090991869 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127632053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106558114 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085938964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110424394 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092545687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108874906 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09000432 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103830366 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09499818 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109605774 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096164957 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108474857 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081420802 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109831363 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08921233 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111532429 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092053041 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111504764 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088718113 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108782493 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090001298 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119103217 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086284833 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117079998 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093011291 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11187418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090605665 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111098478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088287448 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104523921 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09028512 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111640079 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091244704 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109130797 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092413537 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110424996 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090079841 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108277286 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091674001 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.11056665 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092953409 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098990504 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085813083 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105185558 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090300606 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114666422 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091524489 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107786275 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088172739 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112340075 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088963854 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101350769 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095539194 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112669276 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092524807 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119503966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085573907 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110233716 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100789933 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098784822 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087828579 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106229281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086570309 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116602763 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092239584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116391884 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091407147 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105782211 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082688889 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.112034987 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088935586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099152759 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087651396 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113662047 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088136919 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089137808 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111292598 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093218054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11312727 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114572965 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090867757 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109862304 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.091864419 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082942441 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107528977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08566761 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110173931 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091925442 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106123012 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082803423 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110690998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090941619 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110420713 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090969921 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109535515 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096730879 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110604717 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090968878 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116977179 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080342432 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.1107499 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090085163 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110183189 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086494012 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111839355 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093132779 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113608329 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096002856 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.111307727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093410712 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110499484 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087500234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.110642827 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091460381 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112002912 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086569418 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112981103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097374929 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107437121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091865344 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11178238 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087757154 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1131519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092440228 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110819726 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095251661 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111161013 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091356637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.115844179 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091018388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112406436 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092826977 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109332959 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095662034 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10625394 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098057402 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111645728 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093029335 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109491368 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087244944 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110925263 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091217812 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109899035 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097715165 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112649687 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086555492 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106351614 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087448611 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11056717 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097108071 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117335632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091166573 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112039717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086217289 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103587878 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093254171 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107911223 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089692314 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114764413 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095517567 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111300343 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088291249 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109678363 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097011118 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116256008 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09392012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108050627 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09331951 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113395583 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090583046 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108733585 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091155286 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113888063 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094378388 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110151809 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087300287 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12033751 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115549576 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09420683 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109601466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094352929 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109741944 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08504212 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.092791327 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111030776 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114650829 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092609226 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111370735 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102186126 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106988997 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090757183 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117033757 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091349189 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11800062 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08514733 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111745219 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094042115 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113966058 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085728716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107584027 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087626366 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111833548 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087147327 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105575711 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102358233 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117425781 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091565616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109929308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090145613 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105701992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085289367 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106145565 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093920762 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109808625 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099971803 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107158918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087688736 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085241232 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113133217 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092633103 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114892763 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083807062 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.105847526 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087888843 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112247031 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098166681 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112119512 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092271676 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112869059 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092189124 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10934382 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098398723 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.105145087 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093430287 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123903262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.113029331 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095345295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114856337 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0987633 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113489448 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08594681 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113770867 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092858289 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113291038 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.094029163 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.115029485 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107560387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114445822 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087799875 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.110571859 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092118986 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108407142 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100638835 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11487243 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.093889523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113915462 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090635003 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114939471 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098925814 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116168047 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114989873 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092732396 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.110667768 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092230309 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089833756 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112309898 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09419028 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114203919 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091594792 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116173444 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087992728 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12356204 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119528621 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.094123129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083759826 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107926179 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087736381 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106304705 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094223106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10596574 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089926154 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109822824 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090910732 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115587515 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095109805 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112657695 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094477053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.11285181 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082229958 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116341068 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092945769 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116063607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085438563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.113641705 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094409575 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117442669 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09957921 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110896716 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093019751 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11177684 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095369029 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106720031 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096236018 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111273073 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091772578 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108621304 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092988835 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114064579 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094390339 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114513557 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096005752 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11309614 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096651631 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116328188 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085131552 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104831642 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096172279 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108687046 seconds)
  done (took 60.878050879 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148331192 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09051749 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082677062 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106390776 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132299067 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087751531 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10344346 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088192623 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108343541 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098311844 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103984257 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083338912 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126924582 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132922945 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130673757 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099520235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104334509 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088560092 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104166166 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088485828 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12603122 seconds)
  done (took 3.05172724 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104555941 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119132101 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120910612 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10823608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116020998 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123690033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100261179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123083054 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128549732 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097246594 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127571488 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122519097 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095998512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.119351179 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117421827 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100009057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12744273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115259867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104032417 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121880864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120539761 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10161561 seconds)
  done (took 3.332468346 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093643004 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092082895 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.117485066 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086441839 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.112268373 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.085944206 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119185683 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088214813 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119782631 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091844344 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109458647 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092136202 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.118378759 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086294251 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.110421025 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08893774 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11831897 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092658084 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11435555 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086574986 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.133265741 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085563297 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.107532556 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089885734 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122094507 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094140041 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112668261 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.091995006 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110278735 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092977816 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.109294191 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094664727 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116145431 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089947845 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110276116 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092559772 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.113208764 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087598264 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089139595 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116657515 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086804755 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114419144 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099554539 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.110217442 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088675959 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115721635 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093638123 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.10718346 seconds)
  done (took 5.724619479 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.119437915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163604738 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091091948 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153833638 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129901573 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10238947 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.114866054 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152790346 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085792806 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113608126 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.132401326 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106271631 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117277166 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118720665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096336709 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113796928 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.095510795 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108527647 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.097805775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112596102 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118673521 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096480433 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127936897 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126257321 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097834304 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111967933 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089060443 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.118846219 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12592961 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099844651 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.119261998 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09986071 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128538997 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113547756 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091841983 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.116094786 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.132059649 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092826541 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116086899 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087381011 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.116434248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097931525 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11767448 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132008278 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094447249 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114863279 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092209307 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10834526 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125130333 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096715857 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.123689105 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128078468 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09800598 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11470923 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09900411 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129054495 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113720267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.091074868 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118282664 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12614172 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087333004 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118688488 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.106584307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11606675 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12361506 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107422426 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115114364 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097211881 seconds)
  done (took 8.617202786 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116604431 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114053077 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127939934 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110870533 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119117246 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.097501998 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121361358 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118720476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098714897 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127232151 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098444236 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170233662 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.116998139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125604775 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099094921 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120916519 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.098539855 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119511247 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118824331 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099805476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118683877 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111389723 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122659553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132033353 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13306875 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096308993 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119633334 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099351141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132141995 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120399394 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113102932 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122210348 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119668373 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111393649 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132750216 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119883826 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092505607 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120289875 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.098980961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120683296 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095373679 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132465273 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120255765 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095836201 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119800847 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119520072 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111095689 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133157712 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12674943 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106209789 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121107804 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131021357 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098956214 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120315858 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131258529 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14132404 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111382364 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134275838 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119792465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132775032 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111858525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140386427 seconds)
  done (took 8.146287463 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084897796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084946721 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106224684 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086718397 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111257232 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087854444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088986539 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.111769273 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089647566 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.111446105 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089809313 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108320575 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0876926 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089736996 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108785805 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087260872 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107940155 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088433664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110799914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087769132 seconds)
  done (took 2.762919085 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093462648 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127672706 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089388011 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119913384 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092899419 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120818462 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092353076 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115185196 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092963027 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11498607 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12481116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104704682 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112128172 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097516252 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125443376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119406432 seconds)
  done (took 2.581787655 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105857874 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128839188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.137712515 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.095492244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109787262 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.098265914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114392451 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086710699 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10789516 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.0999527 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.118404897 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097804444 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114669264 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08869847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.090419359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.119459332 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086172118 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.116261994 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09283489 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.14020288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11800787 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093650404 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116056751 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092751324 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.115287413 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096896762 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.119213819 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088517381 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111061236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094078237 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.115637663 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.098581675 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109364631 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09487986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.112728411 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087517912 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114846469 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094172815 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11928485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.093951898 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110607888 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.093068427 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.115773352 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096316473 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.109281793 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.095509699 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108235586 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097837702 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.115260104 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.094731237 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.115918617 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099507646 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11951771 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102494906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.123268406 seconds)
  done (took 6.669636605 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101347258 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111935632 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097114956 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110375048 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095625201 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.121423886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095732398 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115431788 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094246024 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110260723 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093875254 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117841651 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094171061 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116935527 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094246051 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118101796 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086375191 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114349299 seconds)
  done (took 2.728185529 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09055456 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087552178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.121809751 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091069225 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.115010346 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092960147 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109413504 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089589334 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111384635 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091510168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112354348 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094017673 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111052393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.094129531 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11256268 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091199025 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114237546 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090194583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090864507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110325359 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094125566 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11095414 seconds)
  done (took 3.065403791 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102219042 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.138840239 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105550185 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.156498455 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.117471853 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095402248 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127377437 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096733309 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135694714 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.094807651 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.117237615 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095376628 seconds)
  done (took 2.222273272 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11083444 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146705643 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09223401 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117405627 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128585812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09797472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118699085 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09736742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133551898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132915221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097393659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132841412 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133136337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13075246 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106408033 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127843556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118998062 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09767214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113916356 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142584676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098243529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132565308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097252989 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11979983 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118543027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110055298 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132811177 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133137179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097271929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133107278 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128012442 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096822543 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133614957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132212313 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094455634 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135505312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11929045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142541693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107020087 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131209891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116015554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106627876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132664947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127688053 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112123997 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121450305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126964659 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097768377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120434809 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148138941 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128239173 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11068911 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128290063 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133633612 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133151206 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149237449 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11236687 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13225836 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12828013 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133657252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110379672 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12894289 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132085696 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133669438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107504897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131846524 seconds)
  done (took 8.861844578 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126010441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110956293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097445901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1325178 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132365241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119695907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09821668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119799764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097803816 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.358047132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161912456 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097894324 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131406283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13179183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097756292 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12067338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119683348 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110053814 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116569016 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150142599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097332234 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13205539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132235744 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132527262 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133415632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107239958 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119176624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097807325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1207437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119740975 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105919086 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119064349 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132188069 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09456126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132339865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098622772 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120200135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127025504 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097341048 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128901276 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131595153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142517868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098495519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120165673 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133262825 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098563406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119995315 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094213261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119461905 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094671061 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134362831 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134486816 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133961523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109478055 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122459274 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118602096 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097918263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119870983 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098010548 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129104487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130912385 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098097083 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149678643 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120226868 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09722944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134206286 seconds)
  done (took 8.907876112 seconds)
done (took 162.961991269 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103853009 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1488832 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.107284727 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178107322 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085898527 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144590723 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119483975 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125040828 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092396149 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114695888 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093255941 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.117712444 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158986714 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107530717 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089952981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118257993 seconds)
  done (took 2.748761983 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181509422 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.297410462 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114125795 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121773128 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099338037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118538854 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09854179 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122200952 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094622286 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129218576 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095380244 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.119338491 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127650379 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096634795 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116326579 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095895601 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128242294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096586903 seconds)
  done (took 3.102730285 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117133384 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164681164 seconds)
  done (took 1.137815598 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121854737 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187369432 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312815523 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148105513 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.148039306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139388575 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.17176034 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113355011 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.227451372 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.117752987 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136550355 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122406425 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124367435 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.127917468 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124662793 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101554707 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148582465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.102532065 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.12363446 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102124349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14756053 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125527528 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106471547 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125074589 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193652958 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137015065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102699672 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123183704 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102481479 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.123433947 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106882183 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138011538 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.139397771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181366458 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128530681 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177881433 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131141055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100754088 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124061817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099992668 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127727473 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.126648193 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115902519 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12360481 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101629225 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130866029 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101398222 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124317939 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130447106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110463832 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131618851 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129014075 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176471263 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131681313 seconds)
  done (took 8.126776553 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.805897429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156989323 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091882261 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.904079974 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14612848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105992868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.807622497 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136372803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246070539 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.822785593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106919883 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128629687 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2390469 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259835423 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149491326 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342454615 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.679368206 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105142962 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145101351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159034584 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120955589 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120897255 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133570756 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.418152817 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115125119 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092784496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121151475 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104946876 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191842725 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092480842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118290259 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189586855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270778343 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211695778 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092150491 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114493765 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090087452 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.201072363 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.252066758 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2275425 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180289627 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109463243 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091591171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127216564 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112128405 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111965587 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17169967 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.203512568 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182162936 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094998249 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127805123 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123378262 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10393446 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.191344295 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.089899187 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347699413 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349319321 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090527878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123782302 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133279216 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.252253158 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115461723 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234790114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118331335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222627527 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112741145 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769399031 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173869041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114666179 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122482226 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098986313 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120338287 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124227076 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150144626 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382289324 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13003395 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11873406 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090684132 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233465138 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092758118 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11264524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17505445 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092087658 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123212797 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131138949 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105462847 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.201611693 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25819845 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128274944 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100122064 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120302901 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125922978 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093567731 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218075085 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228056112 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165721824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.242148878 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10542377 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194758139 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175039735 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126638469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179925554 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098891749 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135072863 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128930506 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223917935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148590167 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093355603 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11936363 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100466842 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151756438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116595504 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100340938 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176310572 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471012156 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173496287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110180092 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097115288 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12370797 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170564152 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120910815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247232055 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123841055 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176582089 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12204148 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089112244 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123306419 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172874521 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128881781 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100726309 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128550422 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123401926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260041056 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230433287 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108595359 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247497532 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184124567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123992969 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182979521 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122583506 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179217313 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101322864 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127541568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115384775 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771446265 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128398095 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121988513 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097846003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192662433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114336558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093693859 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113556183 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089384131 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819168137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095325152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110726688 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093934091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12459476 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100388479 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121339544 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096503796 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192833934 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242066412 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105843623 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12198547 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091297719 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.19151118 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095087853 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113754598 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092732254 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09128133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125132456 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11939092 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094180123 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1807063 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.190274095 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.206499253 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556242961 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113938077 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093144858 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242177597 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091790253 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314800814 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122228211 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.212585225 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.199034058 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089406996 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344839529 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176814155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19209572 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.118690268 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180607298 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110715057 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099528902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169008727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114681179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099092475 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.190187152 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109130011 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129377241 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155444336 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091602679 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256924236 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088586752 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177452147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116579077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126701621 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301199911 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114332811 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134096656 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170767063 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09602683 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115413083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.61254974 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115438318 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101828738 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125668897 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234150881 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174074093 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123165276 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099604403 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129878121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17045119 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.243772672 seconds)
  done (took 44.996543099 seconds)
done (took 60.96509454 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322634902 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270652397 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.300758866 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201660071 seconds)
  done (took 2.045428405 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180022772 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15644528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12800781 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112120769 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15864444 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090937161 seconds)
  done (took 1.702872933 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.496707166 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38358523 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.353448923 seconds)
  done (took 2.113935711 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261606656 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.294687128 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325148292 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.438095322 seconds)
  done (took 2.305098468 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215077007 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140731134 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105407144 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145430955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.181880438 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.194649625 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150739078 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158407892 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133126134 seconds)
  done (took 2.348395412 seconds)
done (took 11.395115987 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.303719415 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.165291045 seconds)
    (3/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.151497514 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113726025 seconds)
    (5/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.255101921 seconds)
    (6/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.135279576 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.257878594 seconds)
    (8/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.13349305 seconds)
    (9/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.262476197 seconds)
    (10/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105732517 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.135576365 seconds)
    (12/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192042048 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097941564 seconds)
    (14/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127910113 seconds)
    (15/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160029044 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117839293 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.144930828 seconds)
    (18/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.230635336 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.170341553 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.232975262 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.205523098 seconds)
    (22/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.241419253 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.165369031 seconds)
    (24/286) benchmarking ("sort", Float32, true)...
    done (took 0.234787526 seconds)
    (25/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.105582503 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.249268072 seconds)
    (27/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128479346 seconds)
    (28/286) benchmarking ("sort", BigInt, false)...
    done (took 0.234444122 seconds)
    (29/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099699661 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.246670178 seconds)
    (31/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.174224374 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133940121 seconds)
    (33/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.220350462 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.151616085 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096060886 seconds)
    (36/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.155701471 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.164692162 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.153507959 seconds)
    (39/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.109349133 seconds)
    (40/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.250854328 seconds)
    (41/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.126146042 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105139271 seconds)
    (43/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.209286191 seconds)
    (44/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.129339683 seconds)
    (45/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104914496 seconds)
    (46/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.210401217 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120419512 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099058394 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143018714 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.102262748 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143058582 seconds)
    (52/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.141930305 seconds)
    (53/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193193473 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137749821 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140961916 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093081737 seconds)
    (57/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142359028 seconds)
    (58/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.219612127 seconds)
    (59/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.13318665 seconds)
    (60/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.129264966 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116155975 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103210798 seconds)
    (63/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.103837875 seconds)
    (64/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201939282 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.139396808 seconds)
    (66/286) benchmarking ("sort", Float64, true)...
    done (took 0.24167251 seconds)
    (67/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.15460906 seconds)
    (68/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.213350156 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094067572 seconds)
    (70/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213616071 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122429862 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.150676166 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199271731 seconds)
    (74/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.140078543 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12051663 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096951845 seconds)
    (77/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108548483 seconds)
    (78/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.222228591 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.214088761 seconds)
    (80/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.208306621 seconds)
    (81/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13774022 seconds)
    (82/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.107523517 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.089526375 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118585408 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095568303 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118061639 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101528671 seconds)
    (88/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119553029 seconds)
    (89/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108192583 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.174653032 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14029116 seconds)
    (92/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.186742816 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079602847 seconds)
    (94/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196306802 seconds)
    (95/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092681564 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120644765 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.240386802 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.212991297 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081145037 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119227553 seconds)
    (101/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100908499 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10534127 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133002437 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095122432 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120505766 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081231366 seconds)
    (107/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185595048 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.174580611 seconds)
    (109/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.135323987 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119829196 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095805244 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.182293437 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104867629 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.114261486 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183889309 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.178471201 seconds)
    (117/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097496512 seconds)
    (118/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120500063 seconds)
    (119/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126263633 seconds)
    (120/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103170897 seconds)
    (121/286) benchmarking ("sort", Int8, false)...
    done (took 0.198054754 seconds)
    (122/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102158279 seconds)
    (123/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097693451 seconds)
    (124/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120129023 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106516002 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119822363 seconds)
    (127/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079296153 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.12017606 seconds)
    (129/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161879505 seconds)
    (130/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101488452 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097374896 seconds)
    (132/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.152065136 seconds)
    (133/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161200918 seconds)
    (134/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104430619 seconds)
    (135/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.108151567 seconds)
    (136/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115252439 seconds)
    (137/286) benchmarking ("sort", Bool, false)...
    done (took 0.188084087 seconds)
    (138/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126686918 seconds)
    (139/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.176221024 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099293542 seconds)
    (141/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121974642 seconds)
    (142/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102252106 seconds)
    (143/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.205577489 seconds)
    (144/286) benchmarking ("sort", Int8, true)...
    done (took 0.223171668 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.127808235 seconds)
    (146/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096141813 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119529172 seconds)
    (148/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102367129 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119311125 seconds)
    (150/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078469429 seconds)
    (151/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100800892 seconds)
    (152/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095892942 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11363972 seconds)
    (154/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.189006564 seconds)
    (155/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102753647 seconds)
    (156/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.101478456 seconds)
    (157/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163646885 seconds)
    (158/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204148379 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121882982 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.145369066 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.187086232 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115836882 seconds)
    (163/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.078087253 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113284711 seconds)
    (165/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098776535 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078495997 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102436656 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120511616 seconds)
    (169/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.089079211 seconds)
    (170/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103107675 seconds)
    (171/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12126397 seconds)
    (172/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.128881513 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104178653 seconds)
    (174/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.129865513 seconds)
    (175/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102942042 seconds)
    (176/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101541897 seconds)
    (177/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.129749544 seconds)
    (178/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.119451893 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081485314 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121198333 seconds)
    (181/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.104920296 seconds)
    (182/286) benchmarking ("sort", Float32, false)...
    done (took 0.18057118 seconds)
    (183/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129550913 seconds)
    (184/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09594066 seconds)
    (185/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.10400294 seconds)
    (186/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.105871702 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121586402 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078307827 seconds)
    (189/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.104093497 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.104558458 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104167068 seconds)
    (192/286) benchmarking ("sort", BigInt, true)...
    done (took 0.250213624 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098617169 seconds)
    (194/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.104459131 seconds)
    (195/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09855385 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119945854 seconds)
    (197/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078141836 seconds)
    (198/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119817281 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082457744 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 0.224592439 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.108908159 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.094888427 seconds)
    (203/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.187384008 seconds)
    (204/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.08471553 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.104702377 seconds)
    (206/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.100364219 seconds)
    (207/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119832574 seconds)
    (208/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.077585682 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130215307 seconds)
    (210/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127197404 seconds)
    (211/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107720801 seconds)
    (212/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127485992 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.185548173 seconds)
    (214/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094317372 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.105336768 seconds)
    (216/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094070927 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116902429 seconds)
    (218/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.184385461 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141591795 seconds)
    (220/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.129267391 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094319913 seconds)
    (222/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.11603898 seconds)
    (223/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079662723 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090636883 seconds)
    (225/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119982413 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.112982569 seconds)
    (227/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.102550191 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.152441177 seconds)
    (229/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.085670022 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.189892183 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098384539 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.106695626 seconds)
    (233/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095832285 seconds)
    (234/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10563141 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079504308 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107794328 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114842482 seconds)
    (238/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114675936 seconds)
    (239/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100135524 seconds)
    (240/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117423158 seconds)
    (241/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095279127 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114997554 seconds)
    (243/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173050116 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.186647678 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102916997 seconds)
    (246/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089439238 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192985344 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137800694 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098368752 seconds)
    (250/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078915885 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121167783 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12875221 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098002855 seconds)
    (254/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.101949409 seconds)
    (255/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095175451 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090207526 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114902115 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09635019 seconds)
    (259/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.106055352 seconds)
    (260/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.090132544 seconds)
    (261/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102148938 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082378639 seconds)
    (263/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.109813282 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100463235 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114582459 seconds)
    (266/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097316005 seconds)
    (267/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.103582491 seconds)
    (268/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.085585841 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081813051 seconds)
    (270/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115509986 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.09306871 seconds)
    (272/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.10287888 seconds)
    (273/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080509222 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12824207 seconds)
    (275/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.086075186 seconds)
    (276/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.103737189 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091563176 seconds)
    (278/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104301513 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095576833 seconds)
    (280/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079131526 seconds)
    (281/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.107698808 seconds)
    (282/286) benchmarking ("sort", Float64, false)...
    done (took 0.17660774 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078605627 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117612148 seconds)
    (285/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.098021295 seconds)
    (286/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118072303 seconds)
  done (took 38.842054016 seconds)
done (took 39.728162943 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105667139 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155374026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10235311 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145708849 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128002275 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107383183 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124751138 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104566073 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.1292864 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107249991 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.128215273 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.085049065 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.126551518 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125077653 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103453618 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145883593 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104841618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120601634 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.094390921 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117248932 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093389016 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118588325 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095888548 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10975961 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1028635 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124094665 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097338169 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126354949 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094597747 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118318971 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092913739 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121538871 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092632915 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12843622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097340403 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117921769 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102518907 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125099602 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0969418 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119161461 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09877448 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119380878 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097685751 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123777004 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095583577 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11810386 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.094273541 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130670685 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145919464 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095341083 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098486811 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.126703826 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.127027253 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098752379 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117155563 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095434464 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119276955 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122079289 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118351488 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095498099 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.14196178 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098607238 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117654157 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094016988 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118466007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102088264 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126019124 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094415188 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124535617 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.097157091 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113498905 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094688986 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11665776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092234617 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123789844 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101366343 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113240696 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095512858 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121681488 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096328387 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118353995 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09286102 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120804921 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095849547 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092970394 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110288097 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092441481 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.121568873 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093850178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117966119 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097038447 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121135186 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09673835 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126053322 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094322838 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120820821 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118315672 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095224367 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119859538 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093570683 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113198186 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093261354 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099167894 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11631227 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095745862 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127307947 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092883564 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121002546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094019679 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117971879 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.132195214 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101121066 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119186469 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095829085 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090947962 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123832262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116722118 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092879209 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115505779 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095154967 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119644956 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095082075 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092475693 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121563375 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129294489 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09095439 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117731111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093008134 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094924573 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122673675 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095253671 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116137344 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094121613 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113659573 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093460492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116438177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098004312 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117683993 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094208734 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11948537 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094496383 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119875114 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096133977 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120903919 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092577069 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111471486 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096704398 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117321039 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097240075 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119502965 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095613509 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.114474968 seconds)
done (took 17.596179658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102016407 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191670984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152730704 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156862418 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15157503 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112374449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130556406 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15092264 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.103676376 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.149034326 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15005297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116590885 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.157346509 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127106228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137395763 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.102821849 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125142381 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111594119 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.161088593 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145305607 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153354463 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103228122 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148854455 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146803505 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100625771 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156646127 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.1290718 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102633636 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129077546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111862119 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142947657 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129401038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.103737367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138625829 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109778 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126846896 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137429752 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097646807 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126725928 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10152263 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141079293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13738038 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098840087 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13409038 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126674827 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105952059 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12505111 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.100694603 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126732919 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096386968 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131193349 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148073949 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.100591892 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.129305744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126445794 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.102824532 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128655363 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.105649111 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128347145 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.105179619 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126376028 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12971937 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106974362 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145428623 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125083168 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104447827 seconds)
  done (took 9.301367521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116466135 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152994528 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132665208 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108919149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128936691 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091144359 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11497238 seconds)
  done (took 1.79161769 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092471554 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148426224 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124996262 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150078225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141356946 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12875351 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134156602 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09225201 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141469827 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126065286 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121324184 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173404122 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118423053 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.105276043 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152045619 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092241413 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.152504658 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116765608 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100074103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150133581 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097913122 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.140019512 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105842127 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118883339 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139233021 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094347553 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184054827 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129449186 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092451823 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098623938 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122315043 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187797806 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140767609 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103219108 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118557761 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121083276 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140619349 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124691299 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117139794 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123103572 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.114675144 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124570033 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.100399221 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123752717 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099859822 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133343096 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128757022 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.100973654 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123402123 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.121536155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128112556 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115417801 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119961458 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096968023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127501949 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124029933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107824413 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122596306 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121295308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12610829 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118403709 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144093528 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139480489 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119139862 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135874611 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140749413 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.114984278 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123199481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100654822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125599657 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119057655 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121451254 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128910605 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108023407 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126635398 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120165978 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145950488 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097373431 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131810322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096961677 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121543999 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093213841 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133939707 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096625085 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120481765 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110168481 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130834671 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124637732 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097048584 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140554385 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097404493 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129781054 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128994429 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097354559 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134890653 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121504753 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129573297 seconds)
  done (took 12.835773067 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095523152 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095478207 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125127195 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.09541969 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.121161735 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095161707 seconds)
  done (took 1.584834852 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124916671 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122926204 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1102031 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126270757 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162567079 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.119708773 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146671941 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128927887 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114831793 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13490611 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.118668102 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145358712 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150576845 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101414936 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142586743 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101873164 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143961723 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098265857 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134718806 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09818956 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138169675 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126855392 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098091792 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141702683 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102530287 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127558976 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100659613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135230823 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133701063 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105015076 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126929894 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102457382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127155125 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.104042191 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144861211 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127461193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096977307 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130298913 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103052706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12710283 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120356405 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124136165 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107803862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130231706 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129836986 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102814806 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129796254 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101265079 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14370383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104543062 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.130162711 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101800796 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.128164961 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.10413742 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127840168 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129741808 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.105547291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144647558 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101820774 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127760916 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098302185 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.128522612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129773729 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.103677213 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128426712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.10514848 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127246354 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098139829 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124381822 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101753116 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12950247 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098956164 seconds)
  done (took 9.660204851 seconds)
done (took 36.11050141 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.678577799 seconds)
  done (took 1.634109857 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.853112187 seconds)
  done (took 1.809371272 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.006583271 seconds)
  done (took 18.9880256 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507011985 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.604228338 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00494892 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168225588 seconds)
  done (took 3.241287111 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.971493004 seconds)
  done (took 1.95121405 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.313880303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276254244 seconds)
  done (took 1.55169916 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.801802882 seconds)
  done (took 1.769593668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.552534861 seconds)
  done (took 2.518058542 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363242218 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205387533 seconds)
  done (took 1.544714325 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.582531788 seconds)
  done (took 1.55529026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.386002676 seconds)
  done (took 16.361815616 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247540639 seconds)
  done (took 1.235523729 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307352966 seconds)
  done (took 1.284157361 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.692734816 seconds)
  done (took 4.667794113 seconds)
done (took 61.079280554 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104584259 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133601101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10743589 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130163337 seconds)
  done (took 1.449312541 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109615616 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128095102 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106061135 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127654494 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110413459 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129144574 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101081402 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185663151 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127027557 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104131653 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12828611 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101324376 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130393417 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101146159 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125442754 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104488154 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132237701 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102839067 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129988016 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129181599 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101049745 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128722712 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105484074 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128227788 seconds)
  done (took 3.851821863 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103832703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098376525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126230818 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097370979 seconds)
  done (took 1.406865705 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107763647 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14052556 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11361031 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134154848 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114752629 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139714648 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123787397 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097709318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125685149 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107382184 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124037512 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118270022 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140344049 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093002656 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135280946 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095299203 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120519713 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14001627 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108438725 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134885871 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098243949 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132379182 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105278559 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137810372 seconds)
  done (took 3.875772242 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181921566 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.137409861 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14757514 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105298277 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174855371 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150726668 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096589426 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.149919933 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.097797238 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147492214 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12843344 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.151218748 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.142401083 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128627847 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099265744 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130997833 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.140966225 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.119083972 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.126731223 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111408673 seconds)
  done (took 3.650063775 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105871843 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123963526 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09363593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.09720466 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.13096699 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10065496 seconds)
  done (took 1.641910717 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094248963 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09273549 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119695795 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092225611 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123087069 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092936152 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117744922 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092417814 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092330132 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118773313 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092489142 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117988798 seconds)
  done (took 2.235753346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.387001627 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123421786 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122141107 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097862457 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129807454 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09712617 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.136336758 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096061849 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.153454609 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096922576 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12262772 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.100307267 seconds)
  done (took 2.649804348 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215861598 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102122456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272724994 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.430678648 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162037851 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172785604 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.332915328 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170321759 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.216891544 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118985535 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20203446 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165370011 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16147913 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186973556 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147819961 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183784469 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183569798 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209867738 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156784161 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213945649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1719691 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175751942 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187324545 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159737045 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143770142 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163630058 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099128508 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13414412 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181177689 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179100544 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182273882 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156833944 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145515478 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210817852 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221226124 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214459919 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.368317938 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138253548 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198070042 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188437697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261544531 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120477695 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228739979 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162771806 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111010093 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18962462 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164038023 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188514745 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137958746 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147101665 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191311321 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184732604 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186622846 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144475327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374764963 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128456642 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152114924 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195712831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22211598 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198470498 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175125167 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102217425 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254644518 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189396016 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187140956 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153103987 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174921804 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103934997 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212215095 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200753757 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184638105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178423163 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.19066423 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13986015 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171480568 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17615411 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163007895 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185793999 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16932374 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099844732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158748678 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14376895 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106896119 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193595903 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128899487 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211122019 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115449215 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301734903 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222628397 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165908402 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169714753 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172898593 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176374104 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155413324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098321186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154894892 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.168046272 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167298619 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111682426 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164244164 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154750948 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134023175 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133885331 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129966399 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168308772 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112822812 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175281165 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17320187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135646333 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171822214 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157168798 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165669313 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180639537 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194132654 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111191368 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140393273 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201924688 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166367717 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143685153 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182065455 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19374853 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.171984271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116271022 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204564844 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203994777 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121361615 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223909151 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121186426 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140645736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.159150501 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166796755 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16500935 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134648696 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135915246 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163623817 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201485322 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13376078 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115236217 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183243052 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133851064 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13549331 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125055159 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143764913 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149500578 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129365702 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145986974 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165030201 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168443181 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161593746 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167477636 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148467726 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202433331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139773384 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.140409165 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155705474 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125614797 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188984117 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192160298 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10761275 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222384556 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177570024 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244684325 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171105005 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139237389 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188668901 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136431016 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099087792 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176373003 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168774742 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170600678 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189702256 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269709043 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174801626 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161004712 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157614306 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175517875 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181471429 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165026113 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.125032464 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170815664 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176100505 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129708704 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10265097 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133420448 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15032803 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110153694 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139577212 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191343746 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173013869 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262837775 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168529221 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148965211 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18964683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105066552 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173940546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180508002 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146948836 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191872266 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190323809 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176368029 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15093247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18435135 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098026569 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132339235 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.1413078 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172601106 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112148827 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141320602 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122079504 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217064069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185408581 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129029173 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275547006 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174753087 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229036103 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101319642 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171601177 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179770502 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165896841 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16901555 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137288594 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169662051 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185647489 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150377524 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200364734 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171568646 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177995029 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208135504 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165380182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137823895 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128737868 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177204869 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148053184 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168788189 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154195697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114465792 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163033486 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143402916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13296267 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190708689 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152249637 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188544579 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.164252161 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182363504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104200912 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12277183 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168465837 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15425166 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095784615 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178352637 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224443539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151298099 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138897839 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211733454 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108726042 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.36136664 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223641946 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193863202 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144137559 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121658057 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169111463 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167473415 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17401092 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189943893 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152863972 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188427809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16674784 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150550221 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113789935 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155994323 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15817454 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158872765 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111969155 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161499132 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152939514 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195003956 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153188604 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165958201 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17392786 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125995739 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16283964 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151196282 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20974364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168026007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186554773 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164828729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17556828 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197323328 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103142279 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135637005 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105195668 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189876999 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140798031 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16783997 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.256801438 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253065557 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164982752 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1796473 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146564859 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101686185 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168799517 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158275006 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274650753 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148057792 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.115084405 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229198366 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130224705 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138666444 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17256706 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345689069 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149837916 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182747299 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129182491 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.324883426 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131799248 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110488634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167991885 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178771452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.146526172 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166230313 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170342478 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153927152 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168885585 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146200783 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234674175 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253102515 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179959384 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186161226 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151315485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167185067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173240579 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185994055 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122067991 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152105326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172078414 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191633899 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190392069 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141168972 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173297234 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172311432 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168266173 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182421308 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112389619 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195978782 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140103457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175578808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149185605 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102763575 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169514733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.258610671 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139139941 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185448554 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166357585 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111215807 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134086399 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158420492 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139418451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151640393 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13705301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19000417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105950406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171217351 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189090156 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138616997 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163350351 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124168321 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145347714 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151650574 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154204087 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113431791 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179817032 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191345316 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138389596 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187684614 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187672306 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175381478 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16982607 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151516765 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641013257 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136277479 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191017045 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155330504 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195587805 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127561942 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177227001 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169251057 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159025947 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177895031 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158734004 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228096353 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175528882 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167361287 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10881362 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152719482 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155027241 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.10949189 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160006335 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172214165 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149765626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144297101 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.13790599 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153310129 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153755812 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145993451 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192101982 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127257083 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221892722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191280127 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117015695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175412952 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182537869 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138449641 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169704132 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181379473 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150616873 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15819648 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10925181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142769442 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18962789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102177114 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170812112 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170909695 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173599321 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173120272 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141652022 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140025205 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150951974 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171340933 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138220636 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161240031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136294584 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139026865 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134625183 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135008959 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168763905 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167391054 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134721158 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15272514 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186964497 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133478095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112301681 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367714552 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169065121 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201086516 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161041605 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141687282 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123743207 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164522199 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162997187 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169217573 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106925094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14036944 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139199264 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187680337 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133667689 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165343603 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203361494 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171120818 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198219333 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.144030098 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273394598 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118174068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164600091 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137949336 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107958414 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151252781 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143487208 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151940181 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234574707 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187631929 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162807827 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151849805 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106097138 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135505499 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111438594 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169448549 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164421183 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170084799 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152085872 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095800477 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153024004 seconds)
  done (took 81.504014787 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156412842 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153413302 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156211097 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203377329 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17352206 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250082134 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212557271 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233715654 seconds)
  done (took 2.612297101 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107128558 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164225571 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147017849 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131340548 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.097591976 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.338668654 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144549138 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.13058969 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154420686 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141369994 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.098713344 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572941506 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100812448 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132001521 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120669001 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096269598 seconds)
  done (took 3.744264952 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.378369904 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553440512 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.224715656 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254439449 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234378799 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.160142036 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.769973477 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192431137 seconds)
  done (took 12.843802831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130305557 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147013176 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145247116 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.172997133 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.129345173 seconds)
  done (took 1.804979592 seconds)
done (took 124.245853611 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102329809 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133389906 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103040342 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133601105 seconds)
  done (took 1.538802937 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115201149 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08696332 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119448788 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086043577 seconds)
  done (took 1.480928945 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434622523 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117624816 seconds)
  done (took 1.66473871 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122475759 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141384803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113044797 seconds)
  done (took 1.454962739 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110812308 seconds)
  done (took 1.19124292 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103879317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105775324 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149329673 seconds)
  done (took 1.440367089 seconds)
done (took 9.852937096 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118843144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.444893699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391440623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144536662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729235734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386483515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032681593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164636061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146668535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125652566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114403633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705586025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.053087199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350221831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036939823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.347099485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69620845 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12883767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130875255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100024797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009461673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096871074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09908949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129407016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697044647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430138984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096974219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387664768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125442742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102389469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415158445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0976209 seconds)
  done (took 17.104963663 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102979375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187137623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1051854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12896575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101231602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128849197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107037458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141210562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190830783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096713181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144393663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096541015 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131806617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097861875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147224469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097697854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128734503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099673973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134081416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098838914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14688979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09635851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128189206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098642862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126468041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109797663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126895764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110672137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12732082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101721113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13156193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097482888 seconds)
  done (took 4.957528733 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149079503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196904584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13611436 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133323537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179036946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127357806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.182771152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166525955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192840165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126952683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115970903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126184298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133160292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128315387 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117993778 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127173048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099958285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129081294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104742349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129961268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145750561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097875492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099334883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129319805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09802926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141404058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098158802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13995513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126056507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102702975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131608236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098751121 seconds)
  done (took 5.301890928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105556942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134949981 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115165801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143935182 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100965625 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134212559 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1061723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12902398 seconds)
  done (took 2.062731379 seconds)
done (took 30.510474435 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11574899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102817277 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141212446 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109600841 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.138267483 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.121676801 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12610363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109441614 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139899416 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106044281 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.144246343 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096907256 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.128335697 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097119837 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139911234 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103513888 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142269144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107467922 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147269944 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113376218 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128454672 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110309038 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106674104 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.148766113 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147887292 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.11885559 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143146188 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103901813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128925708 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099462936 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140846645 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120300266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129640778 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115101498 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133080916 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101854511 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128192006 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100285967 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142792306 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109641937 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133438564 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109868233 seconds)
  done (took 6.211963837 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125587918 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.170982026 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.098308075 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128691967 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.099058264 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166767369 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162044899 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098615912 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128756346 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123634529 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153596299 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098835425 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.128304531 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098916891 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.127635612 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099638236 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.151050945 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.12375379 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.158176239 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.129081904 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.172239075 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.159123452 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.132479226 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.151890702 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.169679585 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.162665522 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119868964 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.16386726 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124986919 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.12956293 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.158572961 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.130948967 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.127175991 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098731962 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168707848 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.13376601 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155582733 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168323907 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.157682811 seconds)
  done (took 6.454261648 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107229891 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141618838 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120289226 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19660178 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137878369 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143078782 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108773956 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147523783 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114861029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.130139108 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.108743904 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159279274 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144655896 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106104452 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105396435 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142518369 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148494731 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100144712 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132998111 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11803613 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146863226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111183362 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140805118 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109210081 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126939419 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107951395 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131561302 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113860545 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133723225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106445137 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131475279 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102775706 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.135033977 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110454384 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131314798 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106491853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150406194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108095349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13807048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131468692 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.141070048 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102610293 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150496634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167769925 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098609629 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135544164 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105691507 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10755342 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.127365349 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117192724 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139095169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098814459 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14446004 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127672978 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09780924 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113261272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130951423 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101404325 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136980578 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10522504 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149030789 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103245274 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14459134 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099558765 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134645614 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09895686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128699599 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103952448 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150324269 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102146275 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.168411696 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098777869 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.136421533 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105927262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134523947 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10783215 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.128493176 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112001789 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138793319 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103195221 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139397578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102616223 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132229009 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116716886 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143998882 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.107449425 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.136025793 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133900958 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102468394 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098603059 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14294589 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102184097 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132573338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116292342 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128979572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.10161424 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135650546 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103680036 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127717379 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11186486 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134117368 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098685872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139024689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100707491 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132946701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108584004 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132533936 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.100007795 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.13382001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.106335421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.128393368 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.102750375 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.132128518 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101492394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141780322 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106918576 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101250849 seconds)
  done (took 15.505437409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247462515 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.228429671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.2021001 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313542976 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.152089132 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125961406 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223605193 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.182038009 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130011587 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.139218459 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.186749656 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.198070512 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.186292963 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196315585 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188614934 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130795714 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11963734 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.182940588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227577777 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.310813569 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119042719 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.144840364 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170919063 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170581074 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.11837374 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.148017537 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153713339 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.120798652 seconds)
  done (took 6.133533139 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116892212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166720109 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.108276466 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157179803 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157444802 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.10121199 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.135502984 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.101141445 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144068471 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.115254947 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.131946915 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106898407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.13657883 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.110418937 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.130739353 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108351028 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.140924444 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108917118 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133721831 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103622779 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.14504435 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117758217 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136697904 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102027825 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147610592 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132703092 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102081545 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151980611 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.139137001 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.126802204 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127214171 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109428295 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.145173303 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099326306 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.102913828 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.13466991 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.102078827 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.132604997 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.101582396 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127962584 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.100058392 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.121542368 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102578909 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146656943 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106877004 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128628311 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105674756 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134622818 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107700538 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.127323718 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101378379 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102921106 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.135740052 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.61384458 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.134715369 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10690937 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.135591242 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.1009951 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.139789861 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.10191625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.128051404 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101363786 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136725398 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104206225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138359019 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105698692 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131614327 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101712735 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.136059823 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106618547 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.133635827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108225838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.127894986 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101632517 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.140635751 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108780781 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134616595 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101899723 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132934704 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10013234 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.088637289 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.130294097 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087233027 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135095898 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.099188181 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131602261 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102439874 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13687664 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116742514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140993282 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107776094 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131711305 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102309491 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134773955 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097892643 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134493719 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117945679 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151338482 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097976217 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.128475365 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11567342 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.133514028 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097884715 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122310524 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110788752 seconds)
  done (took 14.3149284 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142842072 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.181126876 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132126311 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11934035 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166224395 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.172706912 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108471054 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140162712 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.1014009 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119451518 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134330605 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108725843 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134237075 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115130789 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.172395361 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.140629178 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100812878 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14588095 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105274613 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.18528895 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150552901 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139549463 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170717776 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134414696 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.10624227 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.169404121 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.175108931 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.114120455 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.143224346 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142051842 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.145553652 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.175628729 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172423664 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105797381 seconds)
  done (took 5.898695173 seconds)
done (took 55.604654737 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.232093481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410688529 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.187202863 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.186726231 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.244469645 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.219570877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.192001379 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.194744468 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.961321512 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.182265126 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.18536608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.188077212 seconds)
done (took 27.498494251 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.233460779 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347512802 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480729788 seconds)
  done (took 3.939075649 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.187116573 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.187423313 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433484383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.197397144 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.188055588 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.204653568 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.188658136 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.19106598 seconds)
  done (took 15.701696759 seconds)
done (took 25.17386265 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.255392724 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.375033069 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.445128978 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.206884715 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.18971487 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.200666589 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191863813 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.231187415 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.198120579 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.187261104 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.189732518 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.462404911 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.20992827 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.55660653 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.202164816 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.201436022 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206861476 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.409413219 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.207418977 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.238710607 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.176049363 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.198458466 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.209370342 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.226170783 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.198934114 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.205307111 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.207916198 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.188714028 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.386200498 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.201335183 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.233373199 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.190270629 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204218188 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.207158984 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.303597042 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.217440675 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.373861557 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.203498371 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.179791843 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.191088321 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.378614289 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60526378 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.192146378 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.194518341 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.195725422 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.244532256 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.183389676 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.911817604 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.193506328 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.195106913 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.224644747 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.575474766 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.19226443 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.197408258 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.203057936 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.41915409 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.195842894 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.240080818 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.225666406 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.207085692 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.191991352 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.198869069 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.20636406 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.194385502 seconds)
  done (took 142.749477286 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.19187968 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.196967849 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.19778125 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.21682075 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198235746 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.198223478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.193397321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.193621526 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.197364262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.224866033 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.197405793 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192921795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.198961786 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155040035 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19464445 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.213347212 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.197175504 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.215195498 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200183692 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.194669163 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.19627143 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.197882757 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.21696546 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.194214 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.194928741 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.273732335 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.214256906 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.19765422 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.197462519 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.195113017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.24439978 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.220377956 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834739235 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05219891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.200736122 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.220492567 seconds)
  done (took 79.937128425 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194689722 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194863319 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193526268 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227710583 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194323546 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791158036 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800675102 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.935588769 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.371539559 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619602597 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478965934 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195695976 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290351016 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209447995 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199556711 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.1955592 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211145828 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.222017813 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196706847 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19584093 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794314871 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213774909 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.218020009 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391016191 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211508582 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229989314 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596539489 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195733529 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22939086 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532550156 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246108312 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197248004 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604329687 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.285379057 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312312002 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198499179 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229990195 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195545189 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.480851402 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196473084 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196196996 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197769234 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199815431 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89946503 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201949056 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794580889 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201145641 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.147466126 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197733574 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19713147 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.323807715 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.939464387 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218029677 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198775282 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200129347 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197187678 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198112729 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231716999 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.228663099 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314710553 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.1978453 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200833468 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233246749 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19985357 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.289018738 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215161708 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.130312316 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273321828 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309623964 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798971217 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203954303 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198987376 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29773904 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321049088 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198233998 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199061136 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199034596 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199923528 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311374497 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198934103 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.632867479 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.379622997 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21533457 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.629758543 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30520418 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200529566 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622150655 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207131842 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200228958 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956770788 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298288312 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199814958 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198493248 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19960602 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.632145533 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200397723 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801393555 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.461007236 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205257313 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.614279203 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205482267 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.643803763 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776466609 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.939446833 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207363974 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31664035 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380122048 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217464779 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200951946 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.636006683 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209508664 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259002565 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209210427 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601110251 seconds)
  done (took 366.025174436 seconds)
done (took 589.824814452 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.940818229 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.889661887 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.023829385 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.914836975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.879723791 seconds)
  done (took 10.772476782 seconds)
done (took 11.894879695 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397977546 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403006125 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271769735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396067219 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235240325 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.413428797 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380408777 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.23089354 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.308120163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.288089447 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307928414 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261148641 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23974911 seconds)
  done (took 18.256509605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560430019 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.203858477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283178686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542598646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243350726 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537950574 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403323413 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.220717255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429694494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219404708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215405858 seconds)
  done (took 17.984695454 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5394665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.204839628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287798735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545326198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244994253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550068925 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419266696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.22288354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45439803 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219590585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216495468 seconds)
  done (took 18.030029788 seconds)
done (took 55.394595962 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245270409 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.373623138 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2339241 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21657358 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213838214 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216306273 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219143741 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214824502 seconds)
  done (took 11.05860245 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211336906 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210571785 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211895322 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21191022 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210490745 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210244102 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212911318 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210055615 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213608711 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213424527 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212628976 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.210910761 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213183032 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212647579 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210001338 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210226558 seconds)
  done (took 20.512771387 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212616023 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209542752 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210304276 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211856903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210452168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209413546 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211037624 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209803217 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20982757 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210377641 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210842265 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210106412 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211209684 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210913177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209265567 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211038728 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210620644 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210657216 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21549198 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210343463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221238688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209840355 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210696366 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210358953 seconds)
  done (took 30.196603972 seconds)
done (took 62.892775985 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.205083931 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.235619094 seconds)
  done (took 5.567510714 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.270793236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.272568535 seconds)
  done (took 3.671921771 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213326667 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213174772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213432666 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213517404 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212369987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212309705 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214472704 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213679353 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213632512 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213258456 seconds)
  done (took 13.260588311 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212576707 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212942823 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210399652 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21344666 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21374876 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211305848 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214091479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213890002 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215662948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209912651 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212399326 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210795073 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212771336 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210895522 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211842062 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210730197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210513348 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210947199 seconds)
  done (took 22.945698585 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22700351 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.23344565 seconds)
  done (took 3.587074986 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.340306937 seconds)
    (2/7) benchmarking "second"...
    done (took 1.25320688 seconds)
    (3/7) benchmarking "month"...
    done (took 1.320204631 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320409241 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.252334488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231481102 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.25297792 seconds)
  done (took 10.098902065 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215004793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408244904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.516996323 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840094486 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214943511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218594312 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.195219963 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218068086 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218579341 seconds)
  done (took 14.172510149 seconds)
done (took 74.431047432 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.206616255 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.221184025 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.248405513 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.22119818 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.550305249 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.233407949 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.214656623 seconds)
done (took 16.024152049 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.195956466 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.199931468 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.234277125 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.209691842 seconds)
  done (took 9.965802537 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217779861 seconds)
    (2/2) benchmarking "read"...
    done (took 1.533815512 seconds)
  done (took 4.87992823 seconds)
done (took 15.972652221 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213074509 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213594099 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210532903 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.211620227 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211550549 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.21240097 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210881656 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212848905 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213408973 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214293845 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.21318336 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212417079 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213198421 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212473515 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210595294 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212617776 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.210638703 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209594398 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209875688 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212636463 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211199289 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212846014 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211259556 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209461986 seconds)
  done (took 30.212579098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21446484 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211233898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214297971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213978743 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211205733 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213254143 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.214451573 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211234528 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214309925 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213385089 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211005005 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211265699 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214704844 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212309893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21408531 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21195241 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214682639 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211262834 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213744596 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213006845 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214649459 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212111087 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211920743 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214405239 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212662906 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210924998 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215937783 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21263329 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214116618 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212259575 seconds)
  done (took 37.518670309 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219840483 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223334553 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215674932 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214798592 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215170441 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215912018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21455878 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21439821 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214617519 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215950058 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215243573 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214999364 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214943972 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214850909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214981883 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214952558 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214917047 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214998675 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215295271 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216508626 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21645853 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215311369 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216408525 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216084527 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217348081 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216793714 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216313992 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21662548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215812155 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216038358 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216933681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218274813 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216816683 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217638856 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216725548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217804278 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221089024 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224341259 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216497487 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217162414 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217263497 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216779819 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21725096 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217257226 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217584499 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217566238 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215926087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216353579 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217123936 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217686751 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217176744 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217383192 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217986951 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218690401 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218146635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218480931 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218020065 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219046338 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217383027 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.218748973 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219435963 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219315525 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218790879 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21890957 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219526243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219164774 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21872359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.21878522 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21909914 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220697941 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219583825 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219257182 seconds)
  done (took 88.774572864 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219143456 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217164448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215852245 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216478204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216264264 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218237342 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217243793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21953633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216729924 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220142146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219075319 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217435058 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21675397 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220696296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219977157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217548439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219911495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217803916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220176335 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221069366 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220182882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218180716 seconds)
  done (took 27.937603436 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221227611 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22260833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218040524 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22176376 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21921216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224303425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22396135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222042593 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221468691 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219694067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220935939 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22132951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220433458 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21997666 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21891472 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220780469 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220464435 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219968398 seconds)
  done (took 23.109906022 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219603624 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220331605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222003146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218755245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218580034 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223582695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220054538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222644233 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220887142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219940345 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222430624 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223525338 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222672826 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22027154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221993922 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221594263 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222557973 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218930949 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223512028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22098889 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22112451 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222577261 seconds)
  done (took 28.004063562 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221772487 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224691408 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220081269 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219741297 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22076795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223093435 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224052935 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220790136 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225274207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223872946 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220443214 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22359798 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.222025749 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220999998 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222123132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222230629 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223215712 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221223096 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225069799 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221837436 seconds)
  done (took 25.581634126 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225380181 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224958578 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225758002 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226103908 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22699267 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225079671 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226540461 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225310408 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225985139 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226355757 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225995968 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22641237 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229891072 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223997019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224526213 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225932222 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225488849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225559068 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225403897 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224785781 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227355342 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224221812 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226020828 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225781709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226012897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225951695 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224926874 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227164445 seconds)
  done (took 35.460755435 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225621336 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225239466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221438262 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22233832 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221524179 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222786626 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223848872 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22309786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226841094 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22161606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.22538576 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224865402 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22631246 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225504539 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225230072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224868675 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22790778 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223471936 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223077731 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222846919 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226090518 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224616846 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.224664792 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222765615 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224257554 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224880691 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22252385 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223057538 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224675392 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221760256 seconds)
  done (took 37.859921257 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264649634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265975521 seconds)
  done (took 3.6673454 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222345096 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224758524 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225186294 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223314795 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22247207 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224532221 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224913486 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224878465 seconds)
  done (took 10.928246361 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224799794 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226159045 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224825512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226011695 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226048954 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227380988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233915176 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24583375 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226879734 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228018009 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233433132 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233200553 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227554054 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225075692 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226376492 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228486744 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226544458 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226287631 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226128102 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225963837 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224754196 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227760362 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229723441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224439313 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227846558 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237791131 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.230370956 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227472777 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226647529 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230680594 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228779693 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223807492 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226453008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226856201 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227859043 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227984565 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235140711 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248120492 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235182097 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227116327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226737828 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225306317 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227722497 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.22765293 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22900846 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226967087 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228689381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229372797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225660718 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230880376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232225198 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226744567 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224491595 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229038879 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.228014643 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235787731 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246512723 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22962271 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236769762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236976237 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.240192474 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251558213 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23008479 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231345176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237776499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250620075 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233648403 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.244384522 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224251188 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.227532761 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233596377 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242767338 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254158851 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226824173 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228663887 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227640333 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228458656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229872753 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234741881 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250416013 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.227808433 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227251408 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23768598 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251560436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227886011 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.227794428 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228563297 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228339773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229064161 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237939607 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246618313 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.227464009 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.226415127 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226133251 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.227295105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.227190123 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225876704 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22769995 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.22459136 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228088278 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228756938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232027119 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.235603477 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228071435 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22801993 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.233864673 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.22735611 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227501425 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23256597 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.227775936 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227520477 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.229523602 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.233495487 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225610163 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23156589 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.235234741 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227817554 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229814359 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227726443 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228822432 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239101261 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25252159 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.227751132 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.228499672 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233077694 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240953777 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229043286 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.232206775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.228439753 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.226686839 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.226581444 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.229220097 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229340226 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229382803 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230375124 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230642642 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226380561 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228887342 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.230000685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.230354624 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230091289 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.229512561 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.231164816 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.231384916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231229327 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230893876 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.235302761 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.228583409 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.230637166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229854771 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227676666 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230028659 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231434687 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229986263 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229969995 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231237414 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.230692865 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.230729794 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231201998 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231583125 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232109181 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.231571596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235080735 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.231659602 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234927297 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.230043476 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.229739828 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.231141553 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.231525802 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229852474 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231431877 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230188322 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235249973 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238617708 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233895386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.232383363 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.234536496 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232985534 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23284192 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23279827 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.236595853 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.239465738 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.231597854 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.239787075 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.233597595 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232810474 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233782264 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2353661 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230512003 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233163306 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237123981 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240450067 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245417292 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258144543 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234150564 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.237758572 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234479231 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.23821186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236147505 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232200666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.23496023 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235054538 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234519162 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233623119 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.23545933 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.232973576 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233569139 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234424135 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234712976 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235589687 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234901993 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234327659 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23553052 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23130992 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234911125 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235489836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.234227697 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.232480661 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.232900128 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.233852274 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235764922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234748952 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240085067 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.232521891 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236075986 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236947598 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234514386 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.232985939 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23526647 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23629134 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234934279 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240337622 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25381116 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.235174678 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241134824 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252514105 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.233939021 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238725518 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235714688 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233489467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.239818244 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.243763238 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.235692967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236155244 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23622912 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23790536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235706593 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242200797 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.233639688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.235523401 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.237106848 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236889474 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.234082824 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.238754142 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23667545 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236581012 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239519297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237499483 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.236266149 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237991283 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.23731433 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.237965678 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.237086387 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241027265 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.245981507 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.241954282 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.237019008 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238037345 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238838688 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.241918512 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236812742 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.237333557 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.237775855 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249152373 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262251894 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243390695 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258284361 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.238670567 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242701645 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258077609 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241193796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23823856 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238688624 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23798346 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.238664607 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.236166577 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239302397 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238623256 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238804672 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.240189893 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.245533618 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237762745 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23886839 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239582942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.2395192 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.239654824 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.238117816 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238677831 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24165947 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23922957 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.238773898 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.239265437 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24520422 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25892066 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.240335881 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.238875567 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.239878263 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.23840266 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240692862 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.240755568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.244003325 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.248459437 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242627365 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.246954817 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242427678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248906498 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.240024083 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244100787 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.247757274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.2381836 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239652001 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.2405336 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241074088 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24680459 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260565818 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242015911 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.244933411 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240736923 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.240694236 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.241257924 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.241215796 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240929021 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241460133 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248846327 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263037605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245397677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242844695 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.238309394 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24186392 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.242230796 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241046688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244352106 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242884275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24306891 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242595656 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.240223854 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.241365043 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.243500929 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24301459 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.238339487 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242432544 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248431635 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263218933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246655293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.242609208 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249935303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244894288 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24954677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262692738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244421758 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24422306 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242251252 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.244501731 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243488253 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244128463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243253918 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.243854879 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247614041 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.243933954 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244720095 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.243605827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.24371247 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.243093131 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254220035 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267014208 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245753628 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247450954 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.241530267 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.244939722 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249248535 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243657052 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.243129735 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248147716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255376674 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253184317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244511115 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.244049472 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246420036 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246191211 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.246297305 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24531617 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244349123 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245752979 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.245680426 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24438514 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247676102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.244945157 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245986024 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246728534 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247319233 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256648597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.245494645 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246121745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245823602 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247881059 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245995741 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246347213 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245973499 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246722378 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245859072 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.246868694 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254443428 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253709496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.248236868 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.246371879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247246959 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247089236 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247625153 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246142903 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246270379 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247630704 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.248222745 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.245877802 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.2481443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245601255 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.248255934 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246397031 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248116217 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249357769 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255402158 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245799224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.244934645 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.246650825 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246909391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246299112 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.24675877 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.254260999 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251148769 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25917079 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.255286173 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252242074 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248825976 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250230837 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255799046 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248098585 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.249186497 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24836569 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.248935236 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249733699 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252321538 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249591861 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.255771498 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.249125023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248580925 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255897919 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271396545 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249737841 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.252049103 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252642096 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249584701 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246714899 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251004198 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249781965 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256117498 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.269658215 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250771262 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25556654 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250378122 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251363429 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253043166 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249813925 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.249630312 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.248561316 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250164941 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25252511 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251444616 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247793741 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.248715702 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250173738 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254216893 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257802573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.247549335 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252316534 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.249850695 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250516367 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251158719 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251110494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.24759988 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249789987 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250613652 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250571432 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251369128 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253220651 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250154323 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253528304 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253468853 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251519196 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255913788 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262782413 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.257992382 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249174198 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250315704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252122438 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254226012 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252417584 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252183304 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251947475 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.252594167 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252408104 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252151186 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25316369 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.255101153 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268206013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27295312 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253223964 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252946234 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254361891 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.251821626 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.24983511 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252600193 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255416047 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25647274 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.261298461 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.254524126 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259214344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270836809 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.254130374 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258398173 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.256014699 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260974701 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.254328089 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253960205 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253703261 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259533862 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270756331 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254128039 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26505067 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284467786 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.273900955 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254381665 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254775667 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254610893 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.254590323 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256029529 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255887527 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255131496 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254921649 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.254302484 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256130034 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259831234 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256453015 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.255661083 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.254647659 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.253972792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25497382 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.252573756 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255343841 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256170637 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256958577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254945644 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256020818 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.255507949 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267512037 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282099006 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.256176965 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25626158 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.253298164 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.258821681 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259471388 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268222248 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263496669 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256292679 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.25717788 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.257426724 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256888372 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.255727755 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257657637 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257223247 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256769114 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.253925392 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269898333 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282328431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261535852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257068044 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258616126 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258169232 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258384929 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258493658 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258765269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.257925252 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260857426 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263182989 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.25862389 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257962277 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.259979452 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264948672 seconds)
  done (took 741.693336423 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256159676 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256845982 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254967108 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255424627 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256759656 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255815277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255888897 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255827517 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256187143 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255905501 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256153919 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256329353 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256229042 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256541275 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255149029 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256774542 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256014911 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256432901 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255786844 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256356606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256310667 seconds)
  done (took 27.542602036 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.258904271 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256718787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255698069 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259778229 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257487413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259218577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256314714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260129555 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259190002 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256377682 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259360032 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260641033 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.257145848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.257748416 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256927197 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258970511 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260135061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256951365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260310543 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258043095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26038547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258104904 seconds)
  done (took 28.852051174 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260844784 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.261607505 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259742102 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.258670235 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260595344 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.257771201 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262620324 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.260944732 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26141624 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.262320781 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.259323915 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.262986515 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269125285 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.267152065 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.26290361 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.261003714 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.261719273 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261995376 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262923377 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.259749207 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.266230292 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.27972666 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.260094709 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.259727593 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262816245 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263769845 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.26199316 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.261983579 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.263746414 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26545345 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.261822903 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262506535 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.263470327 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.261820192 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.26444746 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.266721382 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.262280899 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.259656101 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.263882865 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273369392 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.283910761 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.263453975 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268667675 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.283705377 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.263924574 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266844281 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271812359 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.260837726 seconds)
  done (took 61.854202763 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263580448 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262884067 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261363308 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263162757 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.263588687 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263933204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.262977739 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264076317 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261322984 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.261463739 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.264141182 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262910305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262137908 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.263740923 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265441372 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261534547 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263150875 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262567119 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262891052 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262346703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262634909 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.26588393 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265321546 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263445513 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265156052 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262469526 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262906083 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265627956 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262153127 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.263110697 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.264749927 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26638338 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.265456383 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264190502 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.262783882 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267499878 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266942558 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264087766 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26710059 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263384069 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267131841 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267167094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266694798 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267485501 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264519383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263116081 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265119531 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.264349839 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264459756 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267367861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.267101424 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266085202 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266675267 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.265043883 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267740219 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268629297 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265207094 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265779579 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267845222 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266274826 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264637185 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267824558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265695827 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.268145958 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268437295 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266392538 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.265756845 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268533337 seconds)
  done (took 87.18292262 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266779596 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268219134 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269384042 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268820463 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268755403 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267784984 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268408105 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268215431 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267961818 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269106331 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269390729 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26794427 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267559649 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26981228 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26836241 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269075802 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269057366 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268635063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26953904 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268635844 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269650506 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269287507 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269242546 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268621362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269521114 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270766812 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269115329 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269351808 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269645784 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269884776 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270309671 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.269585008 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270487858 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269837251 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27103986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.269170631 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270434268 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270549034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.270303982 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271217035 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271484969 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27071629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271172912 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271346861 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271335181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271342872 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271304794 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.272433844 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271020338 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271527132 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.271035699 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270973252 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274775378 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272146015 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270278361 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271769479 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27287486 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271702494 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272441068 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271353712 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271905252 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.270899952 seconds)
  done (took 79.922673761 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271761965 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272563127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.269573659 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268856567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270708322 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268723171 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272527133 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.271857823 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271373391 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.272404836 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273830073 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27038578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271025433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272708855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269561251 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271753614 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270090092 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270049657 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271368506 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26970998 seconds)
  done (took 26.599972193 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.270285912 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273981562 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271942081 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270830673 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.273309161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271326127 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.273085164 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273952392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27030416 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273696992 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273828989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272450485 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270644474 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270742161 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274117258 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272098184 seconds)
  done (took 21.535177689 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.272343011 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.274871849 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.275450125 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273916703 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.272209775 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272200287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.275271854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.271017368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271789392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273737213 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.273346067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273968971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275497338 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275290833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.27283197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.275414164 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271910989 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.272261452 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.276303786 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.276651733 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274353653 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272157324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276510783 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.276252794 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.273357092 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274044622 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.273584368 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.274679544 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.273977193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.277459449 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.273131189 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.273413 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.272575673 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.273510713 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275452987 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273705473 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276136814 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.276057387 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.27673222 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.2762483 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.275773663 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273472309 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.276077181 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276339028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274159513 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.275539771 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.273393941 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.274776728 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273930051 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.273571133 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.276152069 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.279007099 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.278455968 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278615166 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.277099206 seconds)
  done (took 71.287555421 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27754775 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277412346 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274261424 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278321006 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278719019 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.275356346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276893675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277269483 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275974443 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277575732 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275890634 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279717667 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275747864 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277451014 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27667299 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276870586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.275831664 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.276737471 seconds)
  done (took 24.167922307 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276111676 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276750008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.279059843 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.277010387 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.275652394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279472381 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276698301 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.277963479 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278534128 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.276378058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275842207 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279782928 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279311385 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.279112444 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277290299 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277061735 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279533464 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27942367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.276961508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276883895 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279702211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279869953 seconds)
  done (took 29.299824993 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.279575718 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.279591334 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.279132656 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.296148076 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298139858 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.278638345 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.279333179 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.279353979 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.301521456 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.332261495 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32724124 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.29971914 seconds)
  done (took 16.716355818 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278138212 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281091708 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277206832 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281577691 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281415235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278586997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278797863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278262544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282245763 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280088628 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279339438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280923352 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281978639 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279595134 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281213241 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28249965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280660577 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278857596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281062396 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281951312 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279359467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281130213 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280161541 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280375836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280874486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279555191 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281400329 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279237977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281361205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28318313 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281826803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280276106 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282212902 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280052723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282979489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281519829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280127133 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282964442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28315237 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281151528 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282168365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283490533 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283529892 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28086314 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283558911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281134708 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281925285 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281584728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280984006 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285410643 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284349162 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280714259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284398305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283956435 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284229739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285168244 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281184568 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281454639 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284802785 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28275414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283287382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284541461 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282677862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283884823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285198445 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282694445 seconds)
  done (took 85.777248514 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283475206 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282571813 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283078081 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284109565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283120558 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283313854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283463301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282276433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284118117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284475274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28556641 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283984438 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283328209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28309752 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28333883 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284082574 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283489072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283185561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28345248 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286662163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28420626 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284206356 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283911748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283998336 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283670144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285636697 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284521597 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283889877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283886216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28424919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284672345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283665443 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284121594 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284930588 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288432777 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284035502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284327963 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284326984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2842455 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287340442 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28569268 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287628651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283793241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284686172 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285468101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284755336 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285022598 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285075059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28479618 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285472872 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28591517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286007579 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284479613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285340586 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28519686 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285098585 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285603885 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285666269 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286268678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28881632 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28516313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285240358 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288492887 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287003563 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286381037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285343051 seconds)
  done (took 85.986108417 seconds)
done (took 1738.599893523 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452930589 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405517876 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288142248 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.299526438 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.287929214 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.281851751 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.296529723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288571834 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.287978831 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289062314 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.28881992 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477056238 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.28265958 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287900126 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28790823 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383833945 seconds)
  done (took 26.381450304 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.317413571 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296117257 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.408551895 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315990041 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.317837204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47550586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352488724 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294734913 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.46454351 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.340094007 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.29213936 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320973787 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294492528 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.292294684 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.317561792 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.478455205 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.548040482 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.299010398 seconds)
  done (took 28.621783538 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.74483481 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328697532 seconds)
  done (took 5.269262011 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.315594074 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29553466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.296196507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293525796 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.284354486 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.286116747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293813013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.288719147 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.297213015 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.424744664 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30175984 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305720285 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315226145 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295538286 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291458688 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332520057 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461612068 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293974947 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291382608 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300272264 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295705693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.397608545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.336637486 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297158646 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.421494209 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.292751671 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298366339 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302674339 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.419860756 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.293578742 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295406947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294989141 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297669557 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.218645838 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.800083987 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.293400209 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.338948749 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305314981 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293456237 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.443357119 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297542323 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.304034097 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.287842765 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.80096393 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.4354498 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.416145567 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.311500571 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.296994163 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299573366 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360170453 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298172894 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297754249 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.341070598 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.094760157 seconds)
  done (took 83.253037422 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.343543734 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.288835701 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470808288 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.316968271 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289908533 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289605626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.289673072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.57801461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.355538907 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291638029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.587336394 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850911458 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313543083 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.330877096 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.221727553 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345603125 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295159562 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.289045012 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.310183882 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.294412896 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84437473 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295827075 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.290297907 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.367882881 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331403305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808679462 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.290835462 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.29646471 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.298829862 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.290180794 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807477698 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325053704 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.343226961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.293297137 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.566727187 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682210756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637432103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.295060115 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325956882 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.296643283 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.294485688 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830683182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.652476109 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293372371 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310176257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797781049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292761038 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.29520072 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.30294565 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541457052 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291989312 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.29991899 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.295506385 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.298575838 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.294960865 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.300569263 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.359410801 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812851922 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294297857 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.299725384 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314126772 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294159827 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302988498 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292873016 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.295993123 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659148341 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.469011973 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.300589501 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655771571 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799904794 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314122704 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892989455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314553269 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30508876 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.474234025 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294150565 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310405071 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804386882 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.295434114 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293090625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635609211 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.296488316 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.587965411 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312350815 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295223227 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855638019 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.300973845 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.387016353 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.294155734 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295015233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31114241 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299134939 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573391767 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.364518254 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.296239135 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.295248889 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.346624003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295391356 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.294679547 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296775069 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885517517 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.323840926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.295799505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297044883 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29698191 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.301083203 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.297585461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.296077115 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56009649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.296084413 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.300002236 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297889139 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296654855 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.323950746 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355541425 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.30547689 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.61332815 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.300312693 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299320384 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.303418553 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296838908 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33929591 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297733876 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302019954 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182677448 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.635951748 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316260879 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.296911326 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299006437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305324193 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297400854 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299588102 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.325500826 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303074043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050746446 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325664897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.299098746 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298571322 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298829093 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298316147 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307714156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299384679 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.590709243 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.574949381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.47123899 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303433544 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29800085 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.051009158 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34907584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479973544 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318393991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298844594 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595746388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501395435 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300262984 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.299052076 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.300999578 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556966803 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.300697046 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619903569 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837990352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320205804 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.306081752 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.051578397 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.001135144 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.303986923 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.303188994 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59707772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.318671672 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299196978 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.300211609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.302210367 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.298632644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323055714 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302092617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.301565671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.301262448 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334883493 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494307927 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319415314 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311836368 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81397067 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303826424 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301968252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308629228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.303460501 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.304506271 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.355124282 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.303589825 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338835795 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.304726659 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306958957 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903660106 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.301171236 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.304732568 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49413464 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989463505 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.324162421 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316673258 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.30108612 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.183593758 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842473001 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344263136 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.616507732 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.304106864 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.342511215 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301333181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.38584393 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845785362 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305763672 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303768043 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961002082 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.323686207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.738286019 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.303087025 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.315320422 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891164346 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.324491726 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.308011832 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.304010696 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303979772 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595364256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.304518942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.330898351 seconds)
  done (took 490.44844879 seconds)
done (took 635.166448266 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.30441209 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.302555626 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.295276851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.309876643 seconds)
  done (took 10.424966886 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.315238321 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.311613372 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312681642 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309945072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.313028264 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311184803 seconds)
  done (took 9.088720064 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303986503 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.304456259 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.309389908 seconds)
  done (took 8.131173482 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518411881 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.324071192 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.641680896 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.329211625 seconds)
  done (took 9.028804048 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312272201 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312009737 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312165563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.313255266 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317068504 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316236433 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.313716929 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.315176125 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.31589044 seconds)
  done (took 13.039928028 seconds)
done (took 50.926977978 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.30769446 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371599709 seconds)
    (3/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.354479671 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.555340842 seconds)
    (5/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.923923832 seconds)
    (6/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.392202572 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.305560507 seconds)
    (8/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554565381 seconds)
    (9/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.310021674 seconds)
    (10/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332936715 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.346165881 seconds)
    (12/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.310351454 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333434969 seconds)
    (14/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390774822 seconds)
    (15/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.308627882 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.371657676 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.694507074 seconds)
    (18/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.310945743 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.306480767 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.409129597 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.297315545 seconds)
    (22/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.293397448 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.213070288 seconds)
    (24/286) benchmarking ("sort", Float32, true)...
    done (took 2.307805147 seconds)
    (25/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.309431689 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.080942995 seconds)
    (27/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397045239 seconds)
    (28/286) benchmarking ("sort", BigInt, false)...
    done (took 2.307542843 seconds)
    (29/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.429049418 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.307109025 seconds)
    (31/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.308827105 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.419203958 seconds)
    (33/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.484102825 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.64017997 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.72204141 seconds)
    (36/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.15531346 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.225214707 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.317221058 seconds)
    (39/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.384387794 seconds)
    (40/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.313417437 seconds)
    (41/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.296027778 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.315448896 seconds)
    (43/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.295221692 seconds)
    (44/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.396097083 seconds)
    (45/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.333010144 seconds)
    (46/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.349869034 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.182889878 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.420013737 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.312039259 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.566194704 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.307677832 seconds)
    (52/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.15925599 seconds)
    (53/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.899786071 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.296239571 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.336444649 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.295383305 seconds)
    (57/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.32675165 seconds)
    (58/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.643805276 seconds)
    (59/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.309104385 seconds)
    (60/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.938486251 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.36961369 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.308018939 seconds)
    (63/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.342186509 seconds)
    (64/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.295495502 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.931590144 seconds)
    (66/286) benchmarking ("sort", Float64, true)...
    done (took 2.309704307 seconds)
    (67/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353403882 seconds)
    (68/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.649258472 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.376196231 seconds)
    (70/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.307455245 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337101413 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.309704124 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.305113958 seconds)
    (74/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.304108061 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.15226326 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.704086207 seconds)
    (77/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.325046155 seconds)
    (78/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.308109975 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.272338408 seconds)
    (80/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.296457589 seconds)
    (81/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.311475992 seconds)
    (82/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.302053398 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 2.310166959 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.155097038 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.765137771 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.311170172 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.323681175 seconds)
    (88/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.321262809 seconds)
    (89/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.317593725 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.420459146 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.326129459 seconds)
    (92/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.297656539 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.298477312 seconds)
    (94/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.861545806 seconds)
    (95/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.430572095 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424614393 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.201495753 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.318602779 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.298246388 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.335570159 seconds)
    (101/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.372443783 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.303697077 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.311706829 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377322803 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.31056299 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.312202639 seconds)
    (107/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.414875131 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.33627468 seconds)
    (109/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.651299049 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.221904053 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.33065723 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.365777652 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.301729546 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.318408262 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.299894814 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.300415683 seconds)
    (117/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.340407324 seconds)
    (118/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.417314989 seconds)
    (119/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.560648766 seconds)
    (120/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.061527735 seconds)
    (121/286) benchmarking ("sort", Int8, false)...
    done (took 2.330468094 seconds)
    (122/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.301167827 seconds)
    (123/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.35603749 seconds)
    (124/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.339152515 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.325138639 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.714383078 seconds)
    (127/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.628223973 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341574541 seconds)
    (129/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.30036717 seconds)
    (130/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.911068555 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.322191671 seconds)
    (132/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.657956425 seconds)
    (133/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.300635537 seconds)
    (134/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.062299939 seconds)
    (135/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.328386453 seconds)
    (136/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.340439351 seconds)
    (137/286) benchmarking ("sort", Bool, false)...
    done (took 1.835632141 seconds)
    (138/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.336683868 seconds)
    (139/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.302675735 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.314078203 seconds)
    (141/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.418261507 seconds)
    (142/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602895122 seconds)
    (143/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.309175049 seconds)
    (144/286) benchmarking ("sort", Int8, true)...
    done (took 2.317620034 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358599871 seconds)
    (146/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.330565061 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.079262624 seconds)
    (148/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.571801499 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.084073611 seconds)
    (150/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.817244962 seconds)
    (151/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.315444164 seconds)
    (152/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.447233264 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.111619583 seconds)
    (154/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.314147898 seconds)
    (155/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.42599641 seconds)
    (156/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.462974259 seconds)
    (157/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.309610039 seconds)
    (158/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.302542286 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367788218 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342793958 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.148356309 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.307108603 seconds)
    (163/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.926655045 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.082169176 seconds)
    (165/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342663136 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.309406794 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.302937469 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2289833 seconds)
    (169/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.613512407 seconds)
    (170/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.444721848 seconds)
    (171/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.438110883 seconds)
    (172/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.327650311 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.319283441 seconds)
    (174/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.318241973 seconds)
    (175/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344455417 seconds)
    (176/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.177539032 seconds)
    (177/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.92296681 seconds)
    (178/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.323206849 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.306778568 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.64809418 seconds)
    (181/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.346199213 seconds)
    (182/286) benchmarking ("sort", Float32, false)...
    done (took 2.320141125 seconds)
    (183/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.321380767 seconds)
    (184/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.406022533 seconds)
    (185/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.304990422 seconds)
    (186/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328414732 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.344322556 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318178741 seconds)
    (189/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.305872908 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.361438288 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323416587 seconds)
    (192/286) benchmarking ("sort", BigInt, true)...
    done (took 2.322570774 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.318597542 seconds)
    (194/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.323204441 seconds)
    (195/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362558037 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342438895 seconds)
    (197/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.303218876 seconds)
    (198/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.319274405 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.328797781 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 2.340362992 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.342973846 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.381301141 seconds)
    (203/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.305949419 seconds)
    (204/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.676825047 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.319864808 seconds)
    (206/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.442395074 seconds)
    (207/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.319498526 seconds)
    (208/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.467567541 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.317488319 seconds)
    (210/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.536775537 seconds)
    (211/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.404770221 seconds)
    (212/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.33123687 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.104253235 seconds)
    (214/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.324458902 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.307589415 seconds)
    (216/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419660813 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341349593 seconds)
    (218/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.31647392 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.354191509 seconds)
    (220/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.520526898 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.3619212 seconds)
    (222/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.306564902 seconds)
    (223/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.310363954 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217612165 seconds)
    (225/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330088845 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.321229436 seconds)
    (227/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.321162371 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.468264254 seconds)
    (229/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.079142316 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.307238308 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.393525232 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.309095358 seconds)
    (233/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.465667428 seconds)
    (234/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.306237482 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.308431127 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.338412225 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.323711345 seconds)
    (238/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.321650439 seconds)
    (239/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.454552519 seconds)
    (240/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.31977202 seconds)
    (241/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.481922201 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.533272353 seconds)
    (243/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.327416477 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.309146588 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.211689634 seconds)
    (246/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.330371171 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.454050017 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.320815757 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.34839619 seconds)
    (250/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286048446 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.952340855 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709323367 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.883435784 seconds)
    (254/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.186541596 seconds)
    (255/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.408489086 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.82442382 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.535472732 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.189089409 seconds)
    (259/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.309217304 seconds)
    (260/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.309388883 seconds)
    (261/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.308546098 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.325681666 seconds)
    (263/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.073545802 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414100758 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405944041 seconds)
    (266/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331933505 seconds)
    (267/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.309283004 seconds)
    (268/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.68634714 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310496413 seconds)
    (270/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.421311862 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.439443983 seconds)
    (272/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.318549343 seconds)
    (273/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.309440984 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.320234083 seconds)
    (275/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.309188552 seconds)
    (276/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.309920799 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.093163445 seconds)
    (278/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.310549822 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.417638031 seconds)
    (280/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.946473487 seconds)
    (281/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.310397961 seconds)
    (282/286) benchmarking ("sort", Float64, false)...
    done (took 2.323377524 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.31024093 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.347788163 seconds)
    (285/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.435836655 seconds)
    (286/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.349161083 seconds)
  done (took 561.684381317 seconds)
done (took 562.89873835 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.355722983 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379712911 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.334778543 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.355706231 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.446816952 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.512543124 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.344862617 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.335652585 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.383215685 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384406659 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340693158 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.510184443 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337686805 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335495886 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.333437008 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376635193 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.340562797 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.335867152 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.351536847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.345105818 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.353271808 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341786967 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.385176357 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.512376465 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.337349763 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336462009 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.340432729 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35613729 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.449296493 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.340492071 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338242881 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.347286453 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33992673 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.333261231 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.330304562 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.355200544 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.348412641 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.344855303 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340383134 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.448218867 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.327345911 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368031489 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339265008 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.337193031 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.336883916 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340797387 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.33823579 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343212861 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379750203 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381778348 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.326592496 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.35933333 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347945912 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.338639887 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348190792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338289195 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.342302382 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383693932 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.358007456 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385335505 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.333878481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344150677 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.340583809 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354844033 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347160588 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333779882 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.338847351 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.34359453 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.343010891 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.344222658 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.338129281 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.347518246 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341311622 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.35400987 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.369885631 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.32835376 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350353883 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.338767445 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.347679178 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.338840081 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.347692512 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381475633 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.343686379 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.339861044 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381572762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.516939994 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.348449584 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34102314 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.347949685 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.359477621 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.348458911 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.352190892 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343576163 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.335097402 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.349705863 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.344529464 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.349556068 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35014711 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.345369034 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.351713786 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.330029378 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392049387 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.335847134 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.337783523 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.338585268 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.462860655 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330350017 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.346215653 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36182441 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.387772463 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.342472537 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.337597157 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.350074014 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389584701 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.349651805 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.343658976 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.338552385 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.337673163 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337797168 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.4684483 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343208596 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348090678 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388227272 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.345263721 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33818051 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.330887579 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344555662 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385303389 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.462933314 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.353722085 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.454201694 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.341787632 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.347164291 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373494202 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388644508 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.374198193 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.345660931 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38876345 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.359681802 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.339211756 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355258688 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.354620911 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.344338631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.34833578 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33680456 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.375099698 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386011895 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386864802 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.36562459 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.465814191 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34205954 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.34086637 seconds)
done (took 224.010551846 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405090802 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.340080771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452617921 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.342216254 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442632493 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444685775 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.341615902 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339921479 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340972123 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720661746 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339051898 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339073995 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340664196 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339792316 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424303498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343086452 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339696534 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.684339101 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344092539 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413786611 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.343193206 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340497207 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343263836 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.731497068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.341561447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.338767258 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41917326 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343654625 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689716646 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.339235859 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.339323172 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.690939887 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.440732717 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362014673 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.354021564 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349972048 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.445874527 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.362934726 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.426230331 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42638551 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459651578 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38336323 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.33846663 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.343278805 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346715516 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.344096133 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.344109791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371462175 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.343342007 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343505406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685859534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.35414793 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343794729 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343118439 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342395678 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372664245 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.34336806 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.345519001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434052013 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345719919 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407446091 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727392564 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.724804003 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344696393 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.342083366 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.342890519 seconds)
  done (took 105.167711446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413639197 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.421774141 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458505228 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363834241 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397616164 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463921685 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.363977064 seconds)
  done (took 11.12669373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353096719 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347204536 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395322394 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396257309 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.346724769 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560299449 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347288658 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357621292 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345145021 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423203301 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349203851 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348974298 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353795143 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.343955917 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394962591 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.358881296 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461703186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347903202 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347587623 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49901506 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344447789 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354244689 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.426727898 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.359554167 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.349418054 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354603302 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.304474732 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349554938 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346303326 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347770965 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346514319 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.45847168 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34904525 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.344797585 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346672815 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508163323 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349579056 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345183576 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349748794 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351582192 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.349511069 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348311871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.349886483 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345825056 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349492162 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373020428 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349362297 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35003674 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.348682955 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350113773 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428884589 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351842817 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.346282666 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347217505 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.427387397 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357675722 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.349652358 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.346210755 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351538406 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348307628 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501330136 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397406182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.349795284 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398047915 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350991115 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351017865 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349492873 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35042469 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443488851 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.35002802 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398628539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348550344 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.573936625 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375498345 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353834651 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.354650709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353754834 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351835167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.347174408 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.35866237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349492751 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.35326347 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358163008 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350266598 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348148646 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.534449695 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507915552 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.34931548 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36470814 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359063156 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350922156 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.431039049 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.350949289 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.350144346 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402975811 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467076199 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431182644 seconds)
  done (took 139.699544293 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358640586 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361022921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355564236 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375914911 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352288162 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.353445929 seconds)
  done (took 9.405841179 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.354698569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354508378 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352357511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353713178 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352133704 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.354779645 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.353467534 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354912411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356759263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353034397 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.354948539 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.355517528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.356681315 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355466659 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.355014026 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354849402 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351618864 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.354009208 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354615516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353463788 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355898435 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35397142 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356924774 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360720162 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.355486951 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36421938 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.355839892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353926443 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36389332 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374991703 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.356127749 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356413127 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36093322 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36017221 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357818091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360319208 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.358010946 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352772915 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.356798659 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.358363204 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355481185 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355093128 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.359314515 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358013792 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361072645 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363534794 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363244399 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356789127 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358392194 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.35931556 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358064567 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.356237288 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359666897 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360746316 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380549151 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364310482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358411271 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.357478534 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.358773905 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.36001065 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.358463607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360232674 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363363416 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355838049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360758814 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360463347 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362958547 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358746053 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358681301 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.360154146 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357701858 seconds)
  done (took 100.02720205 seconds)
done (took 366.666941233 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.805685536 seconds)
  done (took 4.06152082 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.451794402 seconds)
  done (took 3.708341915 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.992319654 seconds)
  done (took 23.259100729 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.378483187 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.428623348 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.378107996 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.36323046 seconds)
  done (took 10.806851651 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.62488643 seconds)
  done (took 3.882350131 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.358554638 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.35243943 seconds)
  done (took 5.972358431 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.655572071 seconds)
  done (took 3.913524124 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.787864233 seconds)
  done (took 4.053230826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.355751165 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.367885829 seconds)
  done (took 5.990995012 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.341373625 seconds)
  done (took 3.599568561 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.555597566 seconds)
  done (took 16.814026268 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.363727136 seconds)
  done (took 3.622633741 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379598211 seconds)
  done (took 3.636524379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.056262117 seconds)
  done (took 6.313607553 seconds)
done (took 100.891120821 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353720685 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.354482509 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.352222896 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.353871361 seconds)
  done (took 10.672856645 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406395526 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398604376 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.394009116 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405601142 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.396469836 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393406551 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.384961663 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385094967 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.406162164 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397556698 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396309205 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.396678025 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.393964892 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.386920021 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.396237169 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397169906 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405405876 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397032819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385938802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39759101 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.360992179 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406833302 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39920766 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.362292046 seconds)
  done (took 34.709676514 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.861243398 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.466726669 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.514369049 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426197236 seconds)
  done (took 7.52715918 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.41363835 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414347627 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427435424 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.465518769 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491750512 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.424918276 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38950714 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382854433 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371321366 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.415979785 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491426534 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43148014 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519465749 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363247564 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570811786 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363639248 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.363594513 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.415434508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.466043572 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.483415867 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364025959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41578514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419043824 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430813845 seconds)
  done (took 35.556190094 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.364720267 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.381009823 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361461469 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.361802159 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.370225314 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362257602 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.362969341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36373749 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.361699947 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.894333972 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.361749677 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.375755536 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.877987766 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36430228 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370244897 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365072016 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.889281757 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.879732695 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364963266 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369548395 seconds)
  done (took 30.663461589 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.357778828 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.357179224 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71504781 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614346899 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.356203884 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.358165578 seconds)
  done (took 14.019804333 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438054169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.604703059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.36631534 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.737946306 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.827195481 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.37216617 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367373721 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.62604848 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.967264732 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.944172475 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.42700801 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.439775549 seconds)
  done (took 20.38204976 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.369223346 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358886521 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.370418578 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.375103459 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.422305649 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390371555 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.372147777 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.358241356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.427955265 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448341967 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391793623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.424036603 seconds)
  done (took 21.972553533 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446818156 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360584926 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36564333 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421972166 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361362245 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272987436 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429192803 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089155834 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386557524 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635214549 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360525759 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451021289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618077566 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362703955 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367965449 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351304593 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592944354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870913991 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366447128 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361366661 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386933401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365256101 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366587385 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589600924 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361656456 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361819684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.622128469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361825021 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662005599 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381298564 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373813042 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362997171 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638399571 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041816153 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485491075 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588459042 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370194317 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364366677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.37616396 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.370625109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377303715 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365397091 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373709635 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363232008 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360968878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362484233 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101159272 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.389770694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.361370418 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364788262 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636427759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462788734 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.367819216 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363427893 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457130593 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364901765 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36923602 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363510982 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947775148 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365349855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371144417 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.36979505 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367557463 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365260713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007799795 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370476834 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368399583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368264675 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364615593 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37524288 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384973878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36662486 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390728086 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365547689 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08450263 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367949793 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366338057 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947520961 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367826681 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.371888042 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593586766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365854181 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365441351 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.364615168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366825922 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107951198 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378857437 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.352056961 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367025278 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106463051 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614728156 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384942676 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391734811 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590982399 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.352585597 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368821389 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.367149825 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38961416 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389471177 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097857594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386227439 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.372406762 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624710422 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579566406 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378652074 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.357978191 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890964473 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395540583 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.388776695 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36871867 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601351654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.976423032 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385742482 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368427484 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391568593 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368905447 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164428425 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38247684 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.475718834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367962514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643316664 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.199850226 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375186626 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437016947 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372969134 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36849251 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369718517 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3950611 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369366632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.586284723 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398409338 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.38564617 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.369877944 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369188031 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.369835339 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38022947 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.370586982 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593718051 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379559732 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649843673 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370556246 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370420038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370947899 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.593379017 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369075033 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.709758495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630183187 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377406933 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382094379 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387199047 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389366827 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469751018 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394219337 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.369678507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632526037 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.375059485 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.376210046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369950151 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395340302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377646081 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.378455923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413705468 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980756627 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351475195 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380375191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26189581 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387617896 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440891501 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379020304 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600954748 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.370079494 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377820655 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.379361941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.381446593 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600655441 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382373214 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.385751195 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45843358 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.868206868 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000647292 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388500158 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.372907961 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.369712781 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.369807066 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372443063 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372900717 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373445585 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599674945 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387387437 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388447692 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98645964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375312319 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378987583 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379828622 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386687923 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379045709 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373516832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.379834289 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378279379 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379347039 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.392684264 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518845238 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.390223258 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374199952 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891261734 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38191703 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375680501 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375408539 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410279065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379967186 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207681425 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6346793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397180316 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651617089 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391772091 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395074172 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372669489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37513036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375588082 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.384812658 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384727854 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.387103805 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374904771 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400256335 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950955481 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131176008 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937608697 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384310451 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.376754623 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380471819 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112536583 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396339291 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375575494 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622399315 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132714 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395761842 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879375644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.410049075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18129112 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65928235 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611454252 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382644193 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.379344652 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656184719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59578556 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412779896 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378275032 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384308463 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363579245 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956411479 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414501064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459398237 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116636258 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398025031 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380972747 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.476185524 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397132211 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810267788 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398578517 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380146796 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382761643 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38822178 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208513234 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388307625 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37927925 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034618769 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382506205 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.88413596 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399904713 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607538852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391267916 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383407146 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.376703707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.392132861 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639744685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657431431 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38726939 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393803885 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947971575 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.238519308 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386536415 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379499331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157693018 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38487293 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687159854 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.398593828 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.38466651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380471991 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381011405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383084307 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.37810091 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38582324 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356464783 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894770332 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.392667486 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407608525 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395533395 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234560665 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637972606 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.395972681 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995244105 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60844563 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409264063 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406749323 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386464885 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391370473 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.371071741 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382709374 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382024519 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467246887 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606284916 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388939635 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368826416 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442402134 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595291138 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381610445 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385799828 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637747275 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.382984022 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.394760975 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114804519 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409345391 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389860278 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38467905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389150772 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383278175 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46142314 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613744983 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.396342521 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.394420342 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813825276 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411591672 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385029889 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397834644 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47820281 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390386925 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392141778 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159484521 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000758499 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145066251 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.005057725 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663814416 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390832918 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387129294 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385853354 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533853703 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38429071 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659125221 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385855325 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.389535333 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408132951 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397114269 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386915419 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604240936 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661532077 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383017998 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394208821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390596489 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.385366742 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397040101 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597985959 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904800752 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962576043 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388757306 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38581588 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130248763 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681405913 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385894622 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386283855 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385644654 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.400152791 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387400723 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.3938182 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394365436 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536009637 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662891389 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079396157 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418563299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.414722913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.160553274 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398402417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643889402 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396416736 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619223295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003962183 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.125477819 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652897422 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457975832 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6176091 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.387491553 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535984933 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.391909452 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392460369 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389248889 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236929286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.385222271 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398902891 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011068219 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652520436 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.39304028 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.393300752 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415887444 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.398316001 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612785719 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148388063 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613999175 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398415094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395086326 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390873633 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009616285 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670622486 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395922356 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.394077549 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642755952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390838366 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414816362 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.84434158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.386794639 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976541117 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.364723932 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411626242 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403008573 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136039939 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011210797 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.391027335 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914538978 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393833116 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392071748 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672439336 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397204709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406919344 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672207778 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395061151 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394922539 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629624517 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.006026102 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197680516 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.40576313 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393519982 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.395592487 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392121254 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482620163 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393082361 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40015411 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.840350932 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41231114 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392132514 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404341944 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.401376685 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391764922 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.415788743 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392321619 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399632463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.417695007 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393150545 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409210325 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396753247 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983647555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420269077 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.057430945 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.721157066 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649419805 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400488998 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.383787229 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397535877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393737254 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394075129 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393245136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416945854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973793136 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.402112743 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409507769 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399113576 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.609854413 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60671907 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40453275 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626960886 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402544322 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414576742 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.380432774 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394701044 seconds)
  done (took 983.51862618 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42513518 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.448445086 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.404842693 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.424965744 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438583331 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441964606 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.470769727 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.419518837 seconds)
  done (took 20.768913442 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.403743821 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.406241154 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.400304117 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.404600005 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.406627313 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.895341649 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.416344832 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.405658237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.407198316 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.397884835 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.398381704 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.130094895 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.425280518 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.412468019 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.383044082 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.406544557 seconds)
  done (took 33.003464321 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.468706906 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.586738749 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.537892167 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.402872006 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.440557552 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409541601 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.68425208 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.414997325 seconds)
  done (took 27.242561947 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.407520296 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407821365 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40905731 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.408258378 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408517586 seconds)
  done (took 8.337599482 seconds)
done (took 1249.633284193 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402076564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.402652077 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400585624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403412428 seconds)
  done (took 6.906242564 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.383704118 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.385219813 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384542114 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.396172577 seconds)
  done (took 9.846253548 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.152485016 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.090915802 seconds)
  done (took 5.540899084 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.399912425 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.174438147 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.135435978 seconds)
  done (took 8.006521256 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704502596 seconds)
  done (took 3.000553011 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.805233959 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.767665445 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58861518 seconds)
  done (took 6.459069254 seconds)
done (took 41.05653349 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412660793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.647317918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.577571366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405668868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.56149381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.556100287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.135710328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398810805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401918837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398341001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406205841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.561225129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.188438767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.646952872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.188566449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.647609285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.602985419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404236542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39793128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399848242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.135066606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39958488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407633754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402255832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.603220072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.544950528 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414753992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.646802813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406380672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.399734435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.544361445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406723816 seconds)
  done (took 83.549582462 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412353168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411847842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409129838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40040281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421868595 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410388413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401234401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400860727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.433059392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406834824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401235822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420374412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401951953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.400582145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40240829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.400483835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.401160181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400780013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417155594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.401324092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399972063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413526092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401113834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.401758832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418021118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.419242098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42093552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.401889658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40118776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400994795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.401954111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420877917 seconds)
  done (took 78.35731079 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416671795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.40078358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.4045883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402896394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416684712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40325691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.402833333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401809469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411951128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40980546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404459875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414965981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.403500263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.404777375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40597109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.40772316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.401945807 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423505804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420996849 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411035767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.405752479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410617583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402565696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412906548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402272248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.426680818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403663208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.403354106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403602039 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.4059349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.404813697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.402608331 seconds)
  done (took 78.357393086 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.605548978 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411499172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412525543 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.345786482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.411520764 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.410823654 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.404021166 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.608712347 seconds)
  done (took 14.914250315 seconds)
done (took 256.476812557 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.412108173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.410496035 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.616971285 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436223314 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.404548334 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.434907981 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433230315 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.639486946 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.408940697 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.661763233 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.43808973 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431444903 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.419208939 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429506623 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.699192012 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561243168 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.370554896 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.418056679 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.758505047 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.424544705 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.686985391 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.419093368 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.693587069 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.383772938 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.43885387 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.416203596 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.405706149 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.35357584 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451684211 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.773412716 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.431546576 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.399889827 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498062465 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.517544372 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.629355914 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.579228499 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.406142035 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.496820259 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.638293512 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.410702346 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.40655914 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.195755214 seconds)
  done (took 84.746590625 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.413945097 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.532529552 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.415373926 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.414831651 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.414326717 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.535205729 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.510336856 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.413945632 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.415567203 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.414298679 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.413381602 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.413770589 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.414722594 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.415682248 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.416157559 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.416249307 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.413676668 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.418231754 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.417997318 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.46188376 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.537811209 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.442261853 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.409271154 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.416280911 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.520107439 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.554495472 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.415861048 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.409986363 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.459581998 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.416513446 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.420280849 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.463431801 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.417224669 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.416818486 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.532721066 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.517550704 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.440229507 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.414424904 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.533267221 seconds)
  done (took 57.728725462 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417942183 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.672007203 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.865383286 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.431169687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.418424105 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423131835 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.500329002 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424208369 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.421837043 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422195293 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.573812939 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423160837 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457546185 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.889686186 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.422808375 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420455086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419257758 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.420998052 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.685335569 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429467421 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.523450728 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.423050118 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.503389322 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431144229 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445292036 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421008975 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.425868878 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.998707224 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.423108473 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.576973128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.26113977 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.506327417 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.950999469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.873936001 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.267212936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.427057364 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.421436867 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.579993523 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424856393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420278451 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.502727765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424510025 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.874342739 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.093728227 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442084652 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420983367 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.025025002 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.579631504 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.683308097 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436546806 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.900819769 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.427311711 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.422882749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.423234043 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.684829813 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434967583 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.420908157 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.035548455 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447231691 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.504421185 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423132588 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422944007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692363481 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42274639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.679644801 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425158797 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431455593 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.445647534 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.871448663 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426321204 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.118531614 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443343579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422975318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.583871701 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.682412856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053793627 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.429196697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.700158807 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.966476409 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.504758739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.428920976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.993470885 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.507881381 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.430429847 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426876005 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.42612489 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423861385 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.470987971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.502728019 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.041567296 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.105100776 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.064928443 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.525622028 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441604045 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42533121 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.047422324 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447303813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.424274883 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.876795879 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.14009521 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447240908 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.434542399 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.120928731 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.4508877 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.509307436 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438226482 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.889981551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.431874691 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471788236 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426216242 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433405813 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.45134865 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50842147 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432229008 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.425824634 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.088400218 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607090248 seconds)
  done (took 187.80798415 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.420099619 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.418452088 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.419580268 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.420134647 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.419545404 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.427878352 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.418366821 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.420186729 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.42502974 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.419317381 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.421693729 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.41907627 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.420033116 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.420578987 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.451736509 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427133146 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.420130981 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.420818487 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.42169792 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.420128725 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.421212877 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.445459894 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.420652272 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.422020114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.422458653 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.422343982 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.438738695 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.424656 seconds)
  done (took 65.188044357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.430602203 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.019200662 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.433133009 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.568533054 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.45623935 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.424242355 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.562758857 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488682224 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.433794005 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425695428 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426997214 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.749437969 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.432659257 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.966490929 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633906127 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.59053763 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.969491184 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448511519 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425996665 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426812605 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.56726584 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440764609 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.758589814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.048136507 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43561923 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.041499745 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.426058375 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.430119079 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42816089 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.042120536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.434539891 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.758620991 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.516069651 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492935441 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.043211915 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.973811062 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.986694277 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.587519242 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.429914279 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427984401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.428235108 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419509535 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.045252602 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437579541 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430492426 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.040710334 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.4549351 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.431857947 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.436440496 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.428515846 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.492394442 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495394718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.767627632 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.056356883 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.537322209 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444920832 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.569747476 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.822338588 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.434333079 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.970810792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.439016052 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.041244876 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458793983 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422278295 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.433019816 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436674066 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.587791699 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.570170602 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.976258944 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.453142943 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.975442553 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.608903353 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430273959 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430157497 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433628488 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033303742 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.977160052 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.608398287 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.573390615 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.639818342 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42353739 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.432318832 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.423546411 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.514173725 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.432450215 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.050818829 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.999376573 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455484146 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434200696 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433870605 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.43558586 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.622829677 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078550052 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.519966548 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.970425458 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.785326908 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.768569406 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440746245 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.497906839 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.454851394 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756960124 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435618447 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.496032966 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912566321 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.768313078 seconds)
  done (took 171.125288097 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.684736074 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.45724565 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.528260667 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.598954499 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.063699015 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.030854697 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.429903987 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.582635649 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.550669423 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.707775692 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.436701566 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.526826115 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.655480338 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.513441301 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.171975591 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.506494089 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537262068 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.593477275 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.581936889 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.44791285 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.114406339 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.757719215 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.629809738 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.463648623 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.549823458 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.262823286 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.032296597 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.968105163 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.613284585 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.437085515 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.998730005 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.435196474 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.402813222 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.122369566 seconds)
  done (took 66.723530178 seconds)
done (took 634.624580307 seconds)
SAVING RESULT...
DONE!
