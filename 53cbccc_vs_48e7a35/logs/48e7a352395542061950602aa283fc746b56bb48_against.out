cset: moving following pidspec: 31145
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325778714 seconds)
loading group "string"... done (took 0.587624818 seconds)
loading group "linalg"... done (took 7.320721362 seconds)
loading group "parallel"... done (took 0.170411588 seconds)
loading group "find"... done (took 1.162048294 seconds)
loading group "tuple"... done (took 1.784863768 seconds)
loading group "dates"... done (took 1.21888245 seconds)
loading group "micro"... done (took 0.228042396 seconds)
loading group "io"... done (took 1.036368849 seconds)
loading group "scalar"... done (took 39.92519716 seconds)
loading group "sparse"... done (took 13.212757487 seconds)
loading group "broadcast"... done (took 1.016704287 seconds)
loading group "union"... done (took 13.905161569 seconds)
loading group "simd"... done (took 4.700783537 seconds)
loading group "random"... done (took 9.489880333 seconds)
loading group "problem"... done (took 1.999004834 seconds)
loading group "array"... done (took 22.546943647 seconds)
loading group "misc"... done (took 2.041826636 seconds)
loading group "sort"... done (took 3.431139253 seconds)
loading group "collection"... done (took 19.336353104 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560301702 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145456365 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119640828 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143517366 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19183852 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134483094 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145623481 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085625985 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.002610743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162998887 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142479003 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519098619 seconds)
done (took 5.195641816 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200127281 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088539108 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099152065 seconds)
  done (took 0.975627706 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066111704 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128595338 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082597883 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068230483 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067493887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083037564 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06725613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066047799 seconds)
  done (took 1.358442653 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074817176 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06932622 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086128346 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068526669 seconds)
  done (took 1.093380391 seconds)
done (took 4.489933678 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.939728937 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256263706 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193046992 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467853624 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153922656 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190322664 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672671708 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344510996 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216760027 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103806607 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107081626 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393137425 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107762746 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675676596 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076918798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109629355 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161121008 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436018393 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083190145 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08310201 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105748759 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143241125 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103380416 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079030303 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171262533 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072222254 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153869785 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09652013 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069409028 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250461234 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191073513 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683467113 seconds)
  done (took 10.727030708 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099705632 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121383359 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06998022 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142588769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121699025 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07190771 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072654962 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085723743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094044904 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163281074 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119303462 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12543532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067354255 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071295468 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104878705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23101596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095113322 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104131582 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072818589 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075746067 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125257819 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100063751 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081476198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096883482 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153795634 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.1956956 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100519238 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11436886 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069987261 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099936037 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131799498 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132281511 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065595364 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085527265 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159316846 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096432476 seconds)
  done (took 4.723655497 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119283705 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178813246 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093831468 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157817574 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08823653 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132104203 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067707886 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103298536 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255740098 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.098497799 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495451463 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131525167 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089966926 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068912009 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.090291014 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069170078 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.627206853 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148195341 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105426458 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105465912 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076298666 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089491453 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36100668 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072033733 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069508956 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08798684 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060548069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150542373 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069584802 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.273635164 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11193157 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070925934 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121616956 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180437289 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098170653 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125159717 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084343234 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068116321 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174531331 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074089062 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099078672 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08615207 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090921541 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123442526 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124809632 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070992346 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085412235 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184624868 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068548539 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102089204 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.958534536 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170197571 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093391124 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066834027 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298300733 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086237247 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086226408 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065694905 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082823391 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269316238 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180078026 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069622566 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066608782 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086288035 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068675013 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373513272 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088376829 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.976629974 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073210823 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077655971 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086945353 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069182693 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092269513 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073962381 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103591897 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093804982 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085237562 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069394496 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067160015 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085259104 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06879474 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104540161 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210967569 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07042239 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0859226 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066023084 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103777765 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099208986 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087182693 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066351662 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117756279 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070240058 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086557952 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104691602 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087077229 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065051612 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104909411 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087114597 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114840779 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084118998 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14916789 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068827404 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114114957 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073733179 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117277553 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102590689 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069145344 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158120431 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065145412 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083442164 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068499599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083553837 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070244888 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069295356 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101192977 seconds)
  done (took 21.88647452 seconds)
done (took 39.247565751 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313845837 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096841988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095960592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076786097 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096994694 seconds)
  done (took 1.552331526 seconds)
done (took 2.38907736 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152597594 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104352267 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08439742 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099289553 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083518082 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10411349 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120709993 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08308343 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120906763 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065829874 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116927639 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065046376 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082375252 seconds)
  done (took 2.155893531 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083670189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086148883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088493557 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082638833 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081588049 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083335892 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080158681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108006882 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08078217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090871144 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065717892 seconds)
  done (took 1.76506397 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082506278 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084240652 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088237689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081985751 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081837138 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082469801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080569765 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104459191 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081245226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09145592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065541795 seconds)
  done (took 1.763758203 seconds)
done (took 6.51566071 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080326067 seconds)
  done (took 0.912745335 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.756328238 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.008535111 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085812264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138137406 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225195923 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159846316 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.460486883 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113925403 seconds)
  done (took 10.99127345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.11475482 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091789092 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070775639 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092533494 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070598621 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091429175 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074121421 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069080691 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090005764 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072897316 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088306715 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071694477 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088362268 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071294616 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086683983 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074015785 seconds)
  done (took 2.216225846 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105858148 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10547105 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093565708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077350531 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093483809 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074194585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095386298 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076373203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090272801 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074548762 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094613456 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076250396 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092254668 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066948246 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093795987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078627387 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090773362 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075857361 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094676174 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076616304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09501904 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066410127 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092040737 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075494248 seconds)
  done (took 3.007747334 seconds)
done (took 17.963365068 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136807077 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078888527 seconds)
  done (took 1.053553729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084372849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100880081 seconds)
  done (took 1.031199986 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085534782 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08342212 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091867826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09727785 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085232023 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068755238 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105692814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068189316 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084973913 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068779078 seconds)
  done (took 1.683793268 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071118043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096930752 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073127927 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09998995 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075441663 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083955243 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07523653 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087627596 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081479666 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082226015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073377123 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102174853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072369907 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104292143 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092086272 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071085371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090491278 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069474309 seconds)
  done (took 2.348160472 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067949967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068394168 seconds)
  done (took 0.983501088 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070611693 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064763721 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085381586 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067653583 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082611937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064469505 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082151731 seconds)
  done (took 1.364091212 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.417401614 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110367812 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270677659 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07286647 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108389647 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300734078 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067261408 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071681118 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091655603 seconds)
  done (took 2.398134914 seconds)
done (took 11.702313523 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081838545 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086785175 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114537104 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.448080699 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110867867 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066608209 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149377107 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218975359 seconds)
done (took 2.121852801 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128788831 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.63523206 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417638874 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218945913 seconds)
  done (took 2.120854032 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392236905 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092928004 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076628695 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069806593 seconds)
  done (took 1.484469604 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068122182 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071017827 seconds)
  done (took 0.993208801 seconds)
done (took 5.576009186 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069457244 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115983264 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068036184 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064931797 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087431678 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065901044 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064240281 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087428542 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067881282 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085902221 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067849783 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067274503 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084630988 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066118588 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064766904 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085321368 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065965627 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064887723 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084267329 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064996354 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084920227 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066068648 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065498638 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085112747 seconds)
  done (took 2.685828818 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087844753 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08563915 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075006946 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091204519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07315885 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090812597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076682199 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067345464 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091345731 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069981655 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090071631 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072440331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087499237 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073363375 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087806269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072831668 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090645446 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069265235 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069567497 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090597634 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072282958 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086319297 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071795005 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091705007 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072337746 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089805997 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070406147 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086554925 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073907031 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089417985 seconds)
  done (took 3.271370497 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073906835 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064189095 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083999404 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07261368 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064609521 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0848728 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065045253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083337977 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067186834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065609111 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084738222 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065372757 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065022998 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084280114 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06542658 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086134568 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083142469 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06489215 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083829887 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06565036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085913738 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066173581 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06507673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083209334 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065512436 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063867728 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083606657 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065376743 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082613038 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066107506 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06846778 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086922008 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066382156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071009445 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087298507 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0651786 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069016852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084273613 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066090456 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082550504 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065919925 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064968334 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083036124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07201541 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065319986 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085474688 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065282587 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084809771 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067349597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067625558 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084052305 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065325045 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084367221 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067502631 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069531028 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082991599 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067277305 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063939581 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085329481 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065190656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082805702 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065776681 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067102338 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084551812 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080692145 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089102655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066449646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067532035 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085118914 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068414948 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066191985 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097987868 seconds)
  done (took 6.185460274 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122855014 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094606256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086471487 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06724418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082297034 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066530387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069157306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085231373 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068068971 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08919136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066114042 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084387446 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069299302 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080937785 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084288317 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068865148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089430236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064705533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064839048 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088311424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066622108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08768496 seconds)
  done (took 2.60942413 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.194286371 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090162452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112551929 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093943681 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087619325 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076790971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089251148 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073503609 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071004545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089474391 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070243706 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090400219 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070151359 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088236248 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070379863 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089891735 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072628263 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088650456 seconds)
  done (took 2.480426214 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080693106 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067973361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109965967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066854282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087646721 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070667566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092627244 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077084013 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089288251 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067586286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095574194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179580161 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088383169 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068278265 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086878795 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069571281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070817418 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086432948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076287946 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091897174 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072542586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095271293 seconds)
  done (took 2.755306471 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083113744 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06959657 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105601449 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087594832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064998081 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066269425 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093248709 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068227736 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092118171 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069744088 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085445922 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068696605 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072620668 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086638897 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073024883 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086045371 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069797351 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085770954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070799543 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064028106 seconds)
  done (took 2.428105744 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09034009 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08727384 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070356973 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096706265 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069701714 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087756106 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079104578 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087454935 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069814719 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112439146 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069940015 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087654928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078717088 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093582033 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069522495 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096260773 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077219766 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096593788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086937065 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070425384 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112727783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070148577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096248323 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070215935 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087352653 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069756151 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086986591 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076001055 seconds)
  done (took 3.216782869 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069507103 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067953601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083946734 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066488162 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065725999 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083956213 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066834592 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065939689 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086621623 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066181102 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0850223 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069607796 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068120267 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085966951 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069214 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067299618 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086844666 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065920831 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065410085 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085280998 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068425623 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085391868 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068845927 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065463684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084325907 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068116119 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065451314 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084520113 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068182649 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064914208 seconds)
  done (took 3.066521282 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079595577 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09355317 seconds)
  done (took 1.044884743 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066678024 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08208167 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084297883 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072397745 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091143484 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068885879 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094543504 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072730859 seconds)
  done (took 1.501618322 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086015417 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079106611 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088732218 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098319333 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081147753 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085444755 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162439577 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088377099 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07542082 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086014709 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083399349 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085683871 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075301885 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068760323 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093395853 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075507746 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083871884 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075610086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06986843 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085782495 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069569946 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098277952 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070549873 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083635168 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070551353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077173921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099908706 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069123273 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091351038 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075864771 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093001091 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063095024 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067054775 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088058221 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066335192 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098169738 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084337757 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089960616 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077676741 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08799143 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079251427 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082624894 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073432755 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092914114 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07924213 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068459565 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088493089 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063477339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084180349 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071966131 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063792953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087763798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06408896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093442104 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072536542 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078477362 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086778554 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0693602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089516417 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071951158 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092590402 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072047027 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069906642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086649871 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075475885 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090306569 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078698537 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081544976 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063771904 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066154611 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096900615 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090692436 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093229149 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068969085 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087876733 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067407377 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070374868 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089335741 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074758732 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093608257 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068342224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09328307 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076655145 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086578587 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070961039 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093430573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067771703 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070156867 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084877224 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085317094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086408793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066782018 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065338984 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098971027 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071505091 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086613685 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065766884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093741623 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063095442 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068358946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088798717 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069003218 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09833719 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07385589 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092573009 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076824111 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09497336 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068552444 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08946688 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066638026 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069459248 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086617776 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076295895 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080071912 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072848778 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069193827 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087886963 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076863433 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085163371 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068951945 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094108017 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075193485 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066752475 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084098263 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071905198 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086271408 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072909411 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093883296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067992333 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063369962 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082376492 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071801565 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067464174 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091970417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072685349 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090428208 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064317246 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085159866 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073388292 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096308136 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069580802 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069641852 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094136095 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069275552 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087251032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075116409 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089251333 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06884999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074401723 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088481143 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063536878 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090071077 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07207332 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066902282 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091794012 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071621744 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090062132 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069774701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084961928 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075185782 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06840792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086821616 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06768493 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085996773 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080360157 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089218629 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064749549 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065284091 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095061595 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066331769 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086636943 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068664447 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070403309 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088135502 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066139923 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086198075 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070717042 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09797884 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073140915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068720191 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093147851 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079191468 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08693611 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070564778 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086408327 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070693848 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068434136 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096576264 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073569685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092916652 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070430301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084501012 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074678324 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094311287 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068684161 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065893104 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086967351 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073148307 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092218799 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073090104 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086865937 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067852229 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069180842 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090744166 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071315902 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086119025 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068629418 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072401282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086970137 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074174311 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08910235 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078315301 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091334038 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063587694 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090207286 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067312598 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073899545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083299737 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066137063 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085477115 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070391936 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066731044 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09044386 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063096704 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09454166 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076870432 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068114601 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086805257 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068777343 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093813776 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070020232 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089742295 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073263992 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073796066 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098727803 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067736372 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090549361 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079240562 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087475404 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063467238 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073051843 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086116768 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067905556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085311981 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067519617 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071468532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09656915 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074228447 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082334991 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070970594 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085110271 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068154985 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063222322 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09219693 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071125248 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087330929 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076032286 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068852812 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088458849 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072361021 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086869106 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069693734 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088530863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072732836 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068761958 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090547832 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068257107 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090331224 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068047012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066145834 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090021092 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069319401 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087221128 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074276626 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067908662 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088060267 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070797193 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089286307 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070059558 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087362404 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06871224 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071777102 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089283066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069029645 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088868981 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065249115 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075219945 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087664309 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076156696 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087413099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06641401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072783599 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090026684 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073841074 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08841684 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069279946 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088551614 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068985829 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070500887 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094845087 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065803653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099083325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077102112 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087961001 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071974233 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067925909 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089196861 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067651607 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088680143 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069704628 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068448784 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088133511 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072008648 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090659577 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069065958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088803866 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070329731 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068548528 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089729126 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063637194 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084722368 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069268843 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068596872 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09844475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068963958 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08763165 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068347249 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06916999 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087639686 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064560296 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095828927 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077858343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088634025 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076096901 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087364193 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071021644 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098225826 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066318436 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066382148 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085606457 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067138883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09382775 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070745779 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076822217 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088000889 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068298186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084367404 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069797145 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066630436 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082369473 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06706576 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091132771 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069658231 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067421357 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088273552 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072610583 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088342631 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079382112 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085775018 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070370494 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068657919 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085166298 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067447618 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066754761 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09118207 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069360308 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085661013 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066592897 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067801475 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088909819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070336622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087249564 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070761077 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074526203 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088363773 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071538731 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091285734 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063859315 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090355249 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068849633 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067135235 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087548249 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072395744 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091281691 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070182512 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096212079 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069152676 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068396356 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088742696 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066903599 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087302379 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069869543 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068017982 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088124165 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070209533 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096243283 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066852689 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07096532 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08819313 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068662977 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095749321 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069737239 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090602874 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076873763 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067434644 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090143635 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076538774 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09230735 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071625265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08996049 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070762469 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093554704 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068493751 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074762876 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088613293 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069944627 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089501031 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067214504 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068279837 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088034379 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067837059 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094195769 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069941067 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067388931 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088029034 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067218026 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088465969 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072300966 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094476476 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072396824 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071532121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083753672 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066175515 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088893793 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067111106 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069556297 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092127631 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074755194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089395615 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069630859 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067157185 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097836268 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074386217 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092021034 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066408016 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090775521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070687188 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070602763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089281011 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068248478 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089121397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073293594 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06952452 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088376863 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075123194 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091218404 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07032524 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088098562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070099618 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068236623 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084171787 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070323608 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089589189 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074957149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070865649 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088605971 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079210908 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085707762 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069287186 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090654168 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069204104 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073124239 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08425913 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069429515 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089177196 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070395321 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063657933 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087309181 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066493163 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08977066 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069309909 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063352657 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100088335 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077782971 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092718805 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067164087 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086147745 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065112925 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063165738 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088039406 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070405398 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089041354 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080399071 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067201162 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087837209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063406335 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087471177 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071750317 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070945238 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086523305 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063552323 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086999639 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073156412 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073187983 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087618666 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068167569 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091066535 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070926587 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066098574 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092280261 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06464609 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092437195 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081465447 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089501007 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069769677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094377623 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077932377 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06912258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084068593 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069555692 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092118224 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069442277 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088736465 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071085776 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103158994 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072708493 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06699379 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087765533 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071076549 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08680225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077638485 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069550976 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090471098 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072893049 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090334881 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077405716 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091086165 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07718531 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091698111 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073199096 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067059808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089159708 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066457152 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086284128 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071071538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069438275 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094070896 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075780026 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08839275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079254343 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098000432 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070330406 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084287234 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069034667 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067364932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084202469 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06971347 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085346878 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06812867 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066780005 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088196635 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070629421 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093434517 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071378854 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07042458 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088593085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06371803 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070725317 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092557555 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068958869 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086201011 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069145063 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088228788 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.0739258 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072116313 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086784614 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070247028 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089554968 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070617446 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063872106 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095723745 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06766988 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090653724 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068933948 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068831987 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090280215 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072280376 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093681507 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07053861 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090121462 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078928535 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070139764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086363544 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065750733 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094401721 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066611499 seconds)
  done (took 47.838473095 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11006286 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086084886 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06393669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08378936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078390718 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085217466 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064909155 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064372127 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085250786 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066903301 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083629884 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064207888 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093116545 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087516894 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096064954 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088564786 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065266881 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06462587 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084803642 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064946213 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093630604 seconds)
  done (took 2.590552382 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088963757 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104999737 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079469199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103860428 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094356838 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080554824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098915501 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079530718 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103181695 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095143074 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08325753 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098925959 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074968548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096150304 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075569709 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098431967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102582398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075272884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099962245 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078820395 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097124754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098166426 seconds)
  done (took 2.918806698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070262608 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066930139 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089310446 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064491862 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06681203 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083655374 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071174744 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086073689 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072297863 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066309253 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087184441 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067162032 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097490284 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067276897 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067865999 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086312592 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13423041 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07183114 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088042148 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069417723 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062840954 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091406954 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063671434 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082850823 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068172349 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071234757 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089501115 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065736886 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087199134 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067472684 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067561832 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086672581 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070058437 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06756918 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088484513 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067022348 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087621469 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068567933 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062841509 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087012145 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068942319 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083077934 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069843655 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0692838 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086674817 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066424534 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068909963 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089576103 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06306958 seconds)
  done (took 4.656706164 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088078872 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143875439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091260377 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125694041 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084119221 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097456907 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071606836 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126952868 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086460088 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067969891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10615204 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083152751 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089967522 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07226726 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095390149 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067894571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089273951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068132142 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093215318 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069048184 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092841713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07561462 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102980331 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101362688 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074044619 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066763418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089119567 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072419435 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102097369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0923247 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073953529 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094375845 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084111003 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091241431 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067599648 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090762449 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084690922 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089025422 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070025619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086290834 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071669447 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092556396 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075530416 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105086457 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068412954 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094268097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068158774 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085255505 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081918303 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090478667 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076525421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10354237 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070907333 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090173292 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072058027 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104174433 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087856422 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067899124 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070661573 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101179705 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084195962 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07341646 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102324354 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070302171 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094841859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082910476 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094598445 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071491845 seconds)
  done (took 6.920205896 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078272634 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094519922 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082551002 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104045939 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094883914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075574985 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094849335 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075094745 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095076969 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079433618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094822807 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118061928 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06996335 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097804665 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073834792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09573443 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073183654 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09659002 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094418394 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075207898 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094552721 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082153937 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095457974 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102365721 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104388931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09038457 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074316653 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095685636 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102876312 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074760773 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107112199 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074230081 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095586648 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102399362 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086532373 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094987439 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067595504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09476808 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07465254 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095409652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069836409 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103307757 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095524051 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07051591 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094630039 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075632253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103027737 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106727719 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077335487 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100865603 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07390384 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10408297 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094335269 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074654025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10298477 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12870744 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082857832 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103908548 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095246882 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082787366 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103770377 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110820548 seconds)
  done (took 6.55606611 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090354577 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098347345 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1004137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065132075 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065578758 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0941751 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066540932 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086047448 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078249267 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09745347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079094082 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093101657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075434909 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101108026 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091913838 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075470262 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09299023 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072629612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097112609 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072157618 seconds)
  done (took 2.61741176 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077855381 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106247077 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069933199 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094981105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072445512 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074523382 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093000968 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070636961 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090557997 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071790705 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099411154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079165796 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089925953 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074728489 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101184611 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07511862 seconds)
  done (took 2.270250188 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081559343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100816635 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083545655 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090386441 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067326608 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08722789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068729589 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063456559 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087052892 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082846107 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090701567 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070278407 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090278322 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067468711 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085424603 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072855239 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063655864 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08773258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06788457 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104358925 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079052735 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087683832 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068612239 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091275446 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068953141 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095061592 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069492203 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0856166 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067434091 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067957485 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090425526 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075636496 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086663812 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067118192 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086857121 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066933888 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067620672 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090042591 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070606926 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089375255 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067287278 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088267653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068848494 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068271036 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085946905 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068570824 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084741387 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074876145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085990468 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069759344 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067319166 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092431898 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069315232 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100167707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071305601 seconds)
  done (took 5.280549508 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082117973 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070767896 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085887874 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06650302 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092807127 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070761838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071853741 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092626387 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069555972 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087459181 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069938313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0911667 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071607165 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071159358 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09152591 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070697928 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085208285 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071168408 seconds)
  done (took 2.348463598 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075197366 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06765727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097105095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067876162 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089249452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070872124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064575302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088689254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067355353 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088714712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06866808 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06995627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088137811 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07060517 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089164793 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068883069 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070525433 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088882444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068597052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084735283 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071764028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066142136 seconds)
  done (took 2.619846551 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07520451 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095530152 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168716728 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111340993 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083879814 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103796936 seconds)
  done (took 1.577233088 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093805718 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103330015 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069262302 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110649164 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077188381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090906089 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070587154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090270664 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080577802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106000083 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069154208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100625657 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099493035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08214926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098178447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07538328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091481999 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069532045 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089904807 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108822878 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071535061 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100263578 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070526503 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0912693 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07023837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100435395 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099268302 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085143749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091496533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078486617 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097247573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069995177 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100286226 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1055158 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071790161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099818576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070589726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110192192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096373758 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079708432 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093100576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077168169 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100446839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074779323 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101856884 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091092128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076699482 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091411713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071031157 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117580074 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097647329 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08014705 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098224807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079032455 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101397204 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11656915 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105761971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079438196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098245338 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104612659 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079937286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097907211 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077799649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105449856 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098086376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077943109 seconds)
  done (took 6.867479623 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085554524 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110081286 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071046489 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106647514 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100001166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071292559 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091278565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07172893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091092935 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071892965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134409472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071105785 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099852599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100393533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071913404 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091789026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070560804 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10042291 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069691391 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116537515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092512569 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079568884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100437606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099608351 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084328791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098300253 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069428809 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092446288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069923218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092482337 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095798321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071812931 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099635177 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071139091 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099844126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071033064 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092238209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076051716 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092603488 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096222838 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080599763 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110821582 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070077263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092043239 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105784847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071558968 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091296106 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070927865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09188716 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071337589 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105403031 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084524704 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106349999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100536365 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070956905 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093197327 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070738959 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0919776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070184542 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098270607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100123929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071524976 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117021641 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069959227 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093212686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099658356 seconds)
  done (took 6.786379639 seconds)
done (took 133.94516097 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21758271 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.208922928 seconds)
  done (took 1.363447222 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071923967 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119527701 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081751935 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131119527 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091063091 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102126715 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122065154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083078432 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068911633 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091572197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069411494 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091259276 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13405031 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068278334 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090785 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070978849 seconds)
  done (took 2.434833857 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105678898 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.20268551 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114978719 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06709629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103923662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080881254 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08973348 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080605216 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096100162 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068709109 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101624948 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078786762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06669188 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100453672 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094507934 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08223778 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067168772 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102097814 seconds)
  done (took 2.650876853 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109643475 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157293571 seconds)
  done (took 1.211296598 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.210774804 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127381886 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.217196523 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.440693148 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.237494028 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284850578 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.184283011 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183668062 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166488342 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.180768724 seconds)
  done (took 3.176668485 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10228145 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176857545 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324686248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14256372 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.09082521 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119607494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144234678 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113859508 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085551315 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106999746 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105225713 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080564989 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121944677 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077525683 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099221912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079464497 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126056342 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075998255 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101229991 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077468143 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122538567 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068282958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099325561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075326959 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103963057 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08046157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090207852 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068626432 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099293335 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078083899 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102660537 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11713127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08263699 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135641411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106939942 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137805102 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100468852 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076193773 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076338622 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096907353 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079945661 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102198055 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107678452 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080494465 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067977983 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102203329 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06840063 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090136335 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083349637 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102575889 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081990461 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104215284 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134835107 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10194161 seconds)
  done (took 6.525600723 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.773160885 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13857269 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074477465 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.839214708 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119083798 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086260936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.759796644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096352649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239026232 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766456383 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116474674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079213337 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211322759 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218237681 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910447044 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29013708 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648047156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108098943 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111528436 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136391847 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167761363 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160209561 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151356504 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412010897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100517753 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073937676 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140350922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101702406 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143779225 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108396263 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076852509 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159750835 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251446006 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164778632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077047782 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095581834 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072563414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150784806 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245710553 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195897911 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162264899 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070225862 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071519448 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167235407 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134794701 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070136539 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145024891 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.15627544 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174916568 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075976721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100804789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146645607 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144123496 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146798361 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104946822 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291440357 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.273417351 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094235408 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124653617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086079068 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241478506 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104493929 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18617754 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142394928 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194139252 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072369167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759181063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152009381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071957789 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100771295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123872064 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07637144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166243294 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.127441866 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388608663 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170323057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076912096 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072185445 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21044788 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08559426 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095103502 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145595825 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077092671 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126986414 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171489725 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15098468 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151901444 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21046419 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.169688561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145347661 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075875517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129042993 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099569432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194610327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199565988 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144995779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191123514 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144699382 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145631804 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172792227 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081050879 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154846698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123795534 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106021976 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144410296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197930558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128178694 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085844928 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098104532 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145016521 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130103552 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087935987 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.166581746 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154255997 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436830855 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149802569 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092330096 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088754773 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16592449 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145747297 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078847028 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242989766 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12796521 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153125627 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126469228 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06937958 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125028349 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145624151 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105025861 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127237881 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144865431 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101339215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.221166326 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.175688957 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10487299 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199375448 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165752941 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100489271 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155024763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12555215 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151358541 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102472502 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144651326 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07718099 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75208977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148144549 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127131406 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099191033 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.149430569 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094475431 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084836877 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107931446 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069421119 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777155831 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10917586 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083211727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108502723 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078492361 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125405515 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140104558 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098977677 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144898741 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211446886 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079645373 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123034662 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108746938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145949702 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099707332 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086412047 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107915161 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086261515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127463701 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09806033 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085758135 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173344026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146573903 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.177761722 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578399237 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072382573 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108016118 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21054318 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074035031 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270103997 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14182937 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205528228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148165779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081473397 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302665481 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147795794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.16876487 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110119093 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157614653 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069270483 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.16332763 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148616346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073003117 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100290894 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146344907 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.151091377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147274394 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947832502 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092909152 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209296537 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070590201 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153555124 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100413469 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080317713 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268205484 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072439568 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17469067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.149206262 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074932899 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108754 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.827908383 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109493355 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144478971 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099538915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17985263 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168105355 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143270863 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142936641 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079563606 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.167579485 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191300912 seconds)
  done (took 41.783208009 seconds)
done (took 60.082391119 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28879805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197892633 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262295907 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152447209 seconds)
  done (took 1.94675352 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152235546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108701181 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123183572 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089891072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107602558 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091164093 seconds)
  done (took 1.643315467 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.439581756 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282675433 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244480443 seconds)
  done (took 1.938809709 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30958959 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237424397 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467968008 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.312315571 seconds)
  done (took 2.407148265 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199504982 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118724031 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09311373 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088119169 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165736166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.273032682 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130028747 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195493074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080252557 seconds)
  done (took 2.361732437 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.208280937 seconds)
done (took 11.472017236 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110223408 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.224703976 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108997535 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.308761032 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.196301129 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083203707 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.21193194 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110327471 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.162827572 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10298145 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080766207 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.102144346 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.275564153 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.171611996 seconds)
    (15/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.192988189 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078919518 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101607322 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.184967458 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.127363971 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.333190288 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.255699957 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.172499797 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.144454292 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.157457632 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075920843 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137893478 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101772274 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.136104754 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113561739 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.157153909 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09223297 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094642233 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143245626 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125282477 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077219432 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.130354664 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056237116 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07517138 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.282494185 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110761325 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173600779 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176192226 seconds)
    (43/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120510988 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078702066 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.283261823 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114826779 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.271394761 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.256998934 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138399901 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099596691 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.279183515 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.224461093 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100531241 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.207375217 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0767343 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066787149 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204779047 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121078855 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.258443654 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145791359 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124051794 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070078358 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169868002 seconds)
    (64/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.17363645 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069955318 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.27524042 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064362583 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.257613868 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.253031809 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121871898 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.206791577 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092511157 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.127057828 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075119795 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067900089 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078782521 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054853657 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091213368 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107555436 seconds)
    (80/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054072208 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054694438 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107909908 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078136046 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176377989 seconds)
    (85/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.126554041 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096886364 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097047122 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097526799 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.132425765 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064025901 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.068983061 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.179088906 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123846877 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068003534 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.135888558 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069832477 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064538708 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142430548 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0797646 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.246956485 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093848196 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.179317498 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077655547 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055006695 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054104412 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053114437 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097862117 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19934252 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065886837 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.254248454 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080163626 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117696559 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 0.130833392 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.164558167 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.184885379 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068617327 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092875673 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.246673134 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.079556503 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.264441739 seconds)
    (121/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103677951 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.245766838 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.249057003 seconds)
    (124/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074930199 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204956508 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075849083 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.179728829 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100509166 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071957813 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198345437 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.232766029 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.175154572 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069066365 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078476763 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076959711 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.297454064 seconds)
    (137/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079355499 seconds)
    (138/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215751377 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101860324 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.163432349 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100652493 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076933076 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.102318122 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075336094 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06429205 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.098519223 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076992453 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078426002 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093918496 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071548374 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07490593 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107779085 seconds)
    (153/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055233273 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143552689 seconds)
    (155/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054362423 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120554378 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080017967 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118662672 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054694846 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072752297 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091516855 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076761389 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.264285433 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067774762 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090748023 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066006038 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102024513 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.077335745 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077343536 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070265232 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.124615313 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099782517 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.133150747 seconds)
    (174/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078996234 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0777171 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075014386 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072123159 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094617955 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068575272 seconds)
    (180/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090716817 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095428241 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168242154 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075696534 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100215723 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05417056 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076412295 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121664201 seconds)
    (188/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05487352 seconds)
    (189/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102356899 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089820369 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073777565 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117172878 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073321921 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091691527 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077589991 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094619279 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108738835 seconds)
    (198/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075488419 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092537756 seconds)
    (200/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09315674 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077501651 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10180445 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119134869 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067219514 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053467032 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.101568049 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068771923 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053378065 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093941184 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053815797 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114188383 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054005943 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077973352 seconds)
    (214/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08706826 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055076913 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069378466 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099722976 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077207736 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139829368 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053918998 seconds)
    (221/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053178746 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.078513527 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054023315 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068216558 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.079169568 seconds)
    (226/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056557091 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073133562 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103615841 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196132911 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070354455 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067379052 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131569244 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161138087 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055445829 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247550046 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069313617 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168159851 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071686944 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104218167 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119750395 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169385116 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075606101 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090661577 seconds)
    (244/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065482886 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076853286 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091547894 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069638836 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053681906 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077586264 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090426347 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072583263 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106759733 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076097806 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090558075 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09259516 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19573149 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054846184 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098473235 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055610392 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.24724209 seconds)
    (261/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07049373 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054800697 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081036285 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077225936 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 0.153399777 seconds)
    (266/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06467365 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053392662 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092805401 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068102797 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067867767 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099872606 seconds)
    (272/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120865684 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095485038 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068813591 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063013113 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123593014 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05546364 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054115764 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162591395 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055095398 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101038352 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076299403 seconds)
    (283/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053825941 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092389386 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068269377 seconds)
    (286/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053005486 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091906327 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055350518 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068401801 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07753941 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05423148 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074789095 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095432573 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075721986 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053642386 seconds)
    (296/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113767244 seconds)
    (297/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064161979 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086491629 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075697862 seconds)
    (300/309) benchmarking ("sort", Int8, false)...
    done (took 0.169620597 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068588354 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092195076 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071639198 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123636723 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074579832 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068050441 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094738566 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055941432 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074281806 seconds)
  done (took 36.261888741 seconds)
done (took 37.229911024 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08550008 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12006563 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078852465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120269864 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084208855 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104941821 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076148505 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105503711 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084572845 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10913506 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0837185 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056804117 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103212761 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0774453 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101890015 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096616574 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106971858 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075226245 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099775793 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068192346 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076270941 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092696593 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070448001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05611532 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105801597 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075183357 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100046592 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078240488 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067241703 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093290036 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070986507 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099467901 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0684204 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080281881 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100293518 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075917563 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102450644 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080045194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069732925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09320069 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076455822 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092368148 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076231348 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075745967 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099550378 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074625198 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099613321 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083902795 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119923974 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070979078 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076427167 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104732616 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079739976 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100565572 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072377931 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100079971 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075015295 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095557404 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102621113 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07027821 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100891198 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07790644 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07298896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102363117 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075999057 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103518711 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079184155 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09731049 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078895757 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073676321 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092702828 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07694277 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095486167 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069788203 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078429644 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103847941 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067568905 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073538397 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099829508 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074399466 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091774889 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07117851 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068850965 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098779604 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070066215 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05655606 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096954622 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074633475 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090038539 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079857835 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074321964 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099293177 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071007963 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102360776 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06979375 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074159638 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092247972 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069630511 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069239576 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097277639 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068885451 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07041769 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101712452 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069995378 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09766076 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083437975 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067948966 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099551904 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06732477 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091047912 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086028398 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077864079 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093689869 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071043847 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091050082 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07702489 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067286092 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092587025 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068711049 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067983796 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098805457 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068151198 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093333107 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076581518 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081750009 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09537185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072197276 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0694742 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092512346 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074733826 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091473568 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069803765 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06979289 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089677239 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071015146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067806907 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100767242 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071057849 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100478987 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071281239 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077452829 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097389159 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074146463 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072802795 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092647743 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061033212 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069525798 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09552385 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069592548 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092012906 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070756904 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068365318 seconds)
done (took 13.760738778 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069756018 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178076108 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132279605 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099436599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11706493 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068142218 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104975313 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.135070067 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071253418 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.134058571 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091264958 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113114149 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144258952 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068770805 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068193394 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097522709 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070778482 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117794696 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107220529 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115543265 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146564385 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068259852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127737333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093652796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117539661 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.122715579 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069135765 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095667654 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073333181 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130220719 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090106449 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071471132 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094238915 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128887477 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100325824 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114070433 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069224578 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11254736 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068641981 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06814794 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121903788 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129307284 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084616888 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111078061 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072153512 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09645577 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070233684 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114409399 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094100771 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109163247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.117024313 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140362365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073079644 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10998012 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06830562 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115008316 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08680981 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095108313 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070112274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071306362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093951793 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072384566 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116671302 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096492579 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098143371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085315061 seconds)
  done (took 7.604364098 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088813765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120377078 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087995752 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111910966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06883438 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068262561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094414422 seconds)
  done (took 1.678551364 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070688173 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091647286 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118606095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092303156 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114726255 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090441055 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105634241 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069570485 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112278975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070921983 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115401022 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110351551 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095153734 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077389564 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119760163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070095453 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093874672 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095090715 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072285323 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119344981 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072749001 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115186806 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072111921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06925078 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11089752 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069318363 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144523283 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074339794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096169799 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073350632 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067579158 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145673927 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109936216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080344476 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093910971 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086076721 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109442047 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06946151 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086360848 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100223852 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085273177 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094821216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071897497 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067683749 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099522261 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08169884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095387796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071591756 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07231691 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116152506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070732661 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108735862 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07105751 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072982413 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096862847 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075417401 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103434975 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071709289 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089703138 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096712569 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087544271 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113308911 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084605502 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112424706 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072497996 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109005512 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085651884 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071063749 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097311224 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073153486 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112504883 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068683176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070802319 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106780216 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071721408 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119418112 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093899352 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096160806 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081030037 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069005481 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095383385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069877927 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118836064 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073615234 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069445662 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099963244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072446239 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092440528 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07005466 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072681844 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093599046 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072015035 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072665762 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095908921 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072505323 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112180544 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071283353 seconds)
  done (took 9.726040213 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072796546 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070407695 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097371784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071305077 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069923345 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096246872 seconds)
  done (took 1.523051006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102649443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097805161 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084991375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100282894 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110902231 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109980815 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086811956 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111744313 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087759215 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108758026 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086088945 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111929118 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091582336 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102140042 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084865144 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101491279 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086195348 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105804187 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081759681 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102139198 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091602367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101822381 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076427657 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111974597 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073878903 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099900983 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080664569 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1079654 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083891119 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111714415 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076463374 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097306868 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07664886 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110394522 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086247481 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09979537 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076982937 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073572511 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106567324 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072892051 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112334179 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076764066 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107293939 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074355075 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111372396 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074822024 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100915561 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078951946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110531353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074358112 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099684083 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075753944 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09797167 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074662813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074045768 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11155988 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098803963 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087060407 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075586179 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101322438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072022358 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099762478 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084380967 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099421009 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083593422 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.10040163 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074234693 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101706628 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076692007 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101302883 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076058067 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072440813 seconds)
  done (took 7.677448272 seconds)
done (took 29.236544637 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679035154 seconds)
  done (took 1.71726391 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.82644758 seconds)
  done (took 1.866201613 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.910006829 seconds)
  done (took 17.957937556 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.675197997 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.832805284 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.830496913 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16204635 seconds)
  done (took 3.542869426 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.921164999 seconds)
  done (took 1.982235653 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249051086 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258659109 seconds)
  done (took 1.554133077 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777465591 seconds)
  done (took 1.829128811 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.330452932 seconds)
  done (took 2.38094756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34646984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189941428 seconds)
  done (took 1.592342807 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.538439324 seconds)
  done (took 1.594164177 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.865469476 seconds)
  done (took 7.928684957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238536384 seconds)
  done (took 1.305472166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276351177 seconds)
  done (took 1.334085593 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.492375849 seconds)
  done (took 4.553721083 seconds)
done (took 52.18321021 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082464847 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084387812 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109929336 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081294545 seconds)
  done (took 1.414143827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082515766 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075141976 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106240639 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075168561 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107149203 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076833724 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102897802 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081342266 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099069391 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078216854 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075281643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101701784 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07907478 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103004395 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074991692 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078443404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105845669 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075959088 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104875873 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076612235 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099490305 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078937583 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102949433 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076471476 seconds)
  done (took 3.186540936 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081430568 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075228536 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103238219 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075562402 seconds)
  done (took 1.404584091 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081404078 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12076924 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094327536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104919159 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098108276 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116418186 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073349017 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071029809 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101053923 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079967478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095692179 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103455109 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117885602 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079578294 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108240517 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069803797 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095257201 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092285484 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079267394 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106392893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073455248 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105043526 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072058717 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119310471 seconds)
  done (took 3.329753857 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081546746 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130878218 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083754467 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117500539 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098096913 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067801533 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106248771 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094161977 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156938208 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067539348 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100216902 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068370725 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101160552 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069503031 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078865037 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139113692 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140917703 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072546035 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126347584 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070089352 seconds)
  done (took 3.040112857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079116732 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072207988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094129136 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072461438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078039619 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101281567 seconds)
  done (took 1.573428339 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072746513 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069919576 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094905497 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069970959 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073963164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095930559 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069145047 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068900111 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096233725 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069723515 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093786511 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069923754 seconds)
  done (took 2.019958335 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.471739295 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072900952 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096170646 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070112256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073970071 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095838752 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083906361 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070078688 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120450703 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06872162 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095513697 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072337921 seconds)
  done (took 2.469935412 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272901139 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080934153 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339886693 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173907136 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144168271 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163152503 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106483261 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145834621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207155162 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144034078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236070943 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204892617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140385451 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172473111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120153122 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138074326 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192271112 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231493134 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135484578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235754346 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191121976 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162720352 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215164004 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133301002 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114907411 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177626562 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076543455 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083207801 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267807305 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168877447 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183298697 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143855706 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12605168 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24146835 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229304115 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178063855 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168441805 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115423587 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162572421 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174014515 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271761983 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118286776 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203816407 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139557823 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111335504 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180333451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152651921 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152779169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143409173 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119433302 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183010999 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248902243 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171596781 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118861402 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142006587 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145488008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148990673 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133062384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258492121 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202179451 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192669885 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07435957 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128397731 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196028752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16666476 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172447821 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162603434 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09755809 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203689183 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195616039 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150604243 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209354943 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166993648 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120936987 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153377562 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177407823 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187339309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214176716 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159413243 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102863116 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158139437 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133217732 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085780131 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175499384 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078703899 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245474694 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130245085 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146112943 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143328887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14150604 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116030331 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228553069 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212428151 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133730242 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070534508 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133662919 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155396375 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182438331 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119505923 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140295826 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153360768 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081051486 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201071604 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077587603 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15850206 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108899818 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159264979 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167174666 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104945658 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159713213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106427903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133707652 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196243893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203547924 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120818024 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086013052 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236496287 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160867308 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138584806 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210332728 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199469577 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132171254 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132529118 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185738183 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253676122 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120553251 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232968773 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108770386 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115001742 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118389333 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161816215 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146613549 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155004862 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086840931 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159707933 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235843941 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104644914 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09974249 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198600432 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085542958 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112044387 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146246959 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130622648 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100411991 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132553494 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138575535 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174805628 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18408512 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11416875 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185267084 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104594192 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229900686 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121162021 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135078967 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108471184 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100271675 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170930532 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228312526 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082688455 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235323751 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161046132 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136920605 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153742128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112209837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178885357 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082354106 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100772743 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181256497 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143293298 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142996277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191728978 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136629058 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1617997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181880835 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169037572 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168101973 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169258237 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139623063 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118282845 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145970341 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163125157 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076447683 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125218163 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114178977 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135188667 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099699974 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114199457 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179193333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162003985 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129295895 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147073761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128961843 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188299367 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108035953 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167033771 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153674264 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125317678 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194980116 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226944113 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171291759 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132881244 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208868781 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076042405 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076889596 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119950219 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163354773 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11526227 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087574825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150007096 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21600835 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163888891 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172265629 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143927284 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155953777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225151043 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074236914 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1485627 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187369955 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186392515 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.140069843 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121903667 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103875572 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212590318 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137324559 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260350469 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149164508 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159809727 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219549427 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.113543421 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111891937 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135764422 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175956565 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137098556 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218920021 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105311253 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120401403 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143228933 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110684357 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136817932 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165795795 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153740765 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172527998 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152006083 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196633509 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081564513 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149891228 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157695534 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155124164 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094849382 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154969803 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233481573 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099716222 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152611067 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22304284 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10929035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131368032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248565034 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211891068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11559223 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115317856 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181202919 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167781452 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154277248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179618413 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142731962 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170963044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14432782 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114818686 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093087249 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131505485 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140252222 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125878483 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147791798 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151742973 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099280049 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195410111 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145932904 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142198214 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154175469 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10412362 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122854333 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102064076 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24655017 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156468276 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243439894 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133983647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216759279 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210413747 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106760603 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082061133 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111659703 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177319803 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115870409 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17030244 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127928585 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10973313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189411423 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182329179 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126897844 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072666066 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143016819 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169473845 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144557687 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131433653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139084737 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205157966 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136638982 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110514332 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161750954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10832842 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135529959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245603681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091708858 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102710746 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105900667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085616823 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166304537 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224652681 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113924756 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.13649254 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153583867 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182401655 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16855313 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13192125 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103063511 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145903175 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21239877 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166656574 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094920438 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147219665 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194138906 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19865592 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139524712 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128293599 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239126892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197443407 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235489448 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12007478 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151364045 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150042372 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146089505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182671282 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115642377 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237568129 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08771088 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200984144 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135792647 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0982963 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190966192 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.103094075 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121646327 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188731489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154133098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114159767 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126689379 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149170273 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158514455 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135569249 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079419619 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175489305 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.103948186 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173139435 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239475613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084762549 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140202077 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128943215 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112309716 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140718889 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109853141 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120365804 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149999223 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24373422 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096771516 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218896526 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178118407 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148803833 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203419212 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133089784 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670709437 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083107705 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225312017 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153260714 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250194192 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131453667 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15407335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144654295 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158869565 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179773411 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139316535 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209040876 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16824305 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156545284 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111773162 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137402474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146353267 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093556398 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140447653 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150780511 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148929389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133609091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156835023 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191848484 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087057958 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127837905 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199165368 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153751384 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211323212 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178608329 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117244973 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155208822 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179690763 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112704323 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158438718 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22548045 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143380751 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132470155 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087576728 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140246977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243175761 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077196366 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231686541 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159069957 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145722933 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149105709 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155525582 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198944424 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140305666 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162138522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128076682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148525817 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150983834 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089536123 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109799495 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138872854 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148450044 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105190153 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135046122 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153167393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196510615 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102513758 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099245991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135608776 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209320249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252213976 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09515058 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115372993 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153729157 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148953994 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151521018 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162066485 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112888473 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088251237 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113988598 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11837554 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145963921 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151447518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136912012 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146184399 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238777298 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089445106 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257920707 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127132892 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115684517 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.101721986 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083986091 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128620793 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129137915 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13758386 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103133443 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242291809 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129552188 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094620291 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126066989 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103784986 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088711571 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167882787 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145534464 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156376438 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131612174 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093769776 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113950931 seconds)
  done (took 74.627184409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150989629 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125455881 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.138518954 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19648038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168462226 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264468843 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20563675 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246141087 seconds)
  done (took 2.647183058 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07401636 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.126021328 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106041755 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121641788 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09581281 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071858886 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.312981058 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114684699 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0688628 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122266603 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12434417 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098549603 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.49403771 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069167534 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099048821 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092239893 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072054053 seconds)
  done (took 3.407115661 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.457038923 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.675192656 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.459313867 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10412825 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.045319567 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11553539 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.583043614 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172847818 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097910316 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.444828902 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731533829 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162835179 seconds)
  done (took 18.198407933 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078975939 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07179335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115632847 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087171781 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103203899 seconds)
  done (took 1.604009186 seconds)
done (took 119.972452124 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084916069 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385762705 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055870659 seconds)
  done (took 1.626131476 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08890081 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088005364 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118145125 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086913295 seconds)
  done (took 1.535483423 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078990872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079366516 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117429826 seconds)
  done (took 1.425426541 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.304044917 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173527023 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093531032 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087645319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08141727 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.11036375 seconds)
  done (took 1.43554229 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07711229 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077716359 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105492646 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079952271 seconds)
  done (took 1.48939994 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081129979 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055348146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057237275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087446224 seconds)
  done (took 1.43563898 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094400942 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110282189 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08510561 seconds)
  done (took 1.441713614 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113745076 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118435919 seconds)
  done (took 1.386541829 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086625866 seconds)
  done (took 1.236378783 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097520218 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148003749 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167044002 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143676268 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175801356 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143945974 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118540923 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092307019 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110248504 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120621751 seconds)
  done (took 2.474134708 seconds)
done (took 17.282916028 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0834472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398298246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365353428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123283059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673466235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386969093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986856043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124704001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113349754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099524776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087959595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680126765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973611106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352617975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961757167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324259533 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681463626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072588489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09719033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072747601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968679792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099428665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071043523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098111071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654094884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374661664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100056318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325117959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098374116 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073834168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357847642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099818891 seconds)
  done (took 16.127262169 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074747056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149460825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078899919 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086419567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102975976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072083978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103153243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073133404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15479505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070720443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117668147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071653335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102486172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073595624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089619434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100471698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071966898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098523572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072392944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071436276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119357153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071075221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099120763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073340987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071463798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112293396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071661372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.099230385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072639987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073079799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102457976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072024298 seconds)
  done (took 4.028395788 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119850221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159559844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077147241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134746496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144895363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074561727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176907128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097102533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157360957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070777397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117137868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071206788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134019552 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072326392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120274609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072090574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099460839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073297528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070866847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100565485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090709988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099405518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072922579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07095089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100506136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08574634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099755487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074561672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098084963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075655882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074661474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100467653 seconds)
  done (took 4.351292107 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076714953 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078448481 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114487897 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086696153 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101149664 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076177259 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075640945 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101189821 seconds)
  done (took 1.869868368 seconds)
done (took 27.522422414 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082540691 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072417446 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105318109 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084555709 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103371757 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083610315 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06980031 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106954956 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077990043 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102286884 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081463558 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069665679 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10236939 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071633629 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076895975 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10011912 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082799046 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104840953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083910651 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111417696 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074038464 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078841288 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105969923 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.0828579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111492455 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083994139 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.111286194 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078619464 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071737872 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10299117 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079907128 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117192512 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072487237 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081692477 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100162688 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070480464 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099119974 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071397543 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082482998 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106774562 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073482583 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106504877 seconds)
  done (took 4.890893445 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09383227 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095200899 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118768535 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064775604 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100225568 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064932452 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120769505 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064445421 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065535338 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121691423 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058634349 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060994874 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090954276 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057498866 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060410003 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05853986 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092605267 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059774539 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059965301 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089652667 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064245373 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05641573 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090825132 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063476904 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059158683 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065226741 seconds)
  done (took 3.161481415 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07918612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084503025 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120411386 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131659372 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139002002 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077375444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110415304 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089186448 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116058481 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070367139 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101292629 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102303986 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088978772 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107337063 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071028873 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114665133 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0856915 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071646785 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107489183 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091782133 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11674584 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08198839 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120556095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084164658 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06986904 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102357286 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074945934 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.122485253 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076929438 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107324835 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076127337 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074078449 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101894035 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082272308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103533245 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072559604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118404971 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082408153 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080256294 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.100301172 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074601039 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070843384 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120836836 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114738639 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100150439 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077483158 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.107501611 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081043199 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069563319 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118318256 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080304421 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098913926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074968662 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069363696 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099795439 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084630678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100874112 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074020388 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079599151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102589191 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082941179 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102640897 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087794852 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069907624 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107462642 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069422567 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100303085 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07104457 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101404423 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111270102 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102588333 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071436743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108311361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07939997 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075787207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10048599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086842127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109413824 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075415075 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078791154 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103850457 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073617967 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118348702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074139002 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071790686 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100974712 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076951473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101976034 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07383604 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084854038 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101338884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073801906 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.117506164 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070995095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071690852 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106698898 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075501154 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098396183 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085431185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104214588 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072439886 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080044497 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100150462 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074072108 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108138587 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077200607 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069575724 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104256801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077135008 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099508168 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07366752 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074478209 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101487931 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081436307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076161418 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104905098 seconds)
  done (took 11.830067378 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.204069871 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194172773 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074731826 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186683182 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080677852 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11441196 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188319257 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101779663 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101526256 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072065624 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.101075809 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112270926 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134125147 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147854438 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084939026 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070784288 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119669259 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141024497 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189282691 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155238537 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.12176217 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079006826 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.103413262 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073259477 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07222649 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111573422 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086943519 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111780641 seconds)
  done (took 4.511093781 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08600577 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13254296 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077204439 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.1192885 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096193825 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098982231 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07736612 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072353572 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112666683 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083263975 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100061288 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078031245 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105080781 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.081853265 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071782442 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109719365 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080627114 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101017754 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075450281 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075426973 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107627496 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084487854 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104342456 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071505009 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077274742 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099910271 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067224923 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118985284 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070874499 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12265265 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068795893 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106405107 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082584965 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071440018 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101294245 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073174862 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101590051 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074562814 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072770116 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098601817 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070613548 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06034223 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100045447 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085315283 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105907123 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063969056 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076618143 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106213038 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076480549 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.097038765 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074858185 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073784366 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103553588 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079163033 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075196829 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106283013 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074345259 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098199859 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078819795 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073022527 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.096553371 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071444565 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075382036 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099453781 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079315823 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.104440697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071776923 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073512686 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105232814 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077521671 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072176293 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.104538529 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068826814 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.102262394 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077266949 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075031201 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.104731697 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070654829 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09804778 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073232314 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05900448 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099815177 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058672316 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074640029 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097822247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070902648 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073293447 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109945246 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084883539 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101960922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077984062 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099614052 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072090155 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074290623 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094806557 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075307959 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085699365 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117162414 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070506896 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.099359919 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084785932 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104985905 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071445909 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059432113 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108071509 seconds)
  done (took 10.301098503 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097502098 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124137405 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074926853 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085648723 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127600164 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095702002 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108536783 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078488624 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071723732 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119572634 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071365142 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108877513 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076000656 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079581962 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126172996 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078416114 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103268316 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080712774 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106447367 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.110178946 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083809659 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.115580597 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.08114246 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101210994 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076840976 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083043104 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129462957 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080826855 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110638817 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085634559 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110113784 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099658589 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08612607 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10627781 seconds)
  done (took 4.458612023 seconds)
done (took 40.305110229 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.247676078 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.460242345 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.228605344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.214169902 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.254585135 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.257422717 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.238897795 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.226759454 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.356438107 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.226672123 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.489708516 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.97949074 seconds)
done (took 59.353745665 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.270724699 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.376216755 seconds)
    (2/2) benchmarking "String"...
    done (took 1.506326191 seconds)
  done (took 4.060943149 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.579073317 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.272619265 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.524589922 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.230969579 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.231541375 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.673702606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.961349904 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.124266396 seconds)
  done (took 28.188765731 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.236959942 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.62722004 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.78180168 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.780254876 seconds)
  done (took 18.599014865 seconds)
done (took 60.870457062 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.250508836 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.262280145 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.259142586 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.215920106 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.344714821 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.262784239 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.401130522 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.336689256 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.242795306 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.222183441 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.251617508 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.237117584 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.242459832 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.372486122 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.233525952 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.2469452 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.279339396 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.877300618 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.632924249 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.241095193 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.242961114 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.289173436 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.249548279 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.237294356 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.291718856 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.23493291 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.240988194 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.255111397 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.68888267 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.235866038 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.338537049 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.5789137 seconds)
  done (took 191.468373296 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.232520418 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.176656716 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.305164675 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.257930065 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.584178761 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.43329194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.369171535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.672713549 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.253147196 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.261825829 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.406787186 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.233689176 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.471695199 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.217532875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.243667428 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.23693812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.466865094 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.476779697 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.251256135 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.503805455 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.256605258 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.313318975 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.240961009 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.364404738 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.250452854 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.299688573 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.252629901 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.25282492 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.422342471 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.398880784 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.236402247 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.250909741 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.852750451 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.09231242 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.248778102 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.250463866 seconds)
  done (took 150.213001208 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.53161652 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.23390317 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.234788538 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235013348 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.265346321 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.234940259 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800931261 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801444223 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.780295488 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.42793329 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.297029147 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483567917 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.23368709 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328531309 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.246783605 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.235517357 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.249890363 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.259592176 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238722069 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234794304 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800590436 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.249780979 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.270809984 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.243838733 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.235149358 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266130687 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.629532378 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.23541529 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267394147 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.555168497 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.283619415 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234916699 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557647872 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.107441259 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345224828 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237991192 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267387684 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.235748533 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505774427 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236391126 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.236031498 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.236230441 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238941469 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.83098721 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.235773345 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.803864976 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239116441 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164295418 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.236007886 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.23652378 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.514942048 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.750769305 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237136778 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.236691285 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.238613953 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.237285104 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236711937 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.268377639 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.237505281 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.801321927 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.336910989 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237462161 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.239462366 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268702491 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.238139204 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.582810448 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238234096 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.237340127 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.294040762 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.348451734 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804401875 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.240956004 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332220871 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35766227 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.237345346 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23725557 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.236828578 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2374034 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.237477657 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.345340469 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.237278106 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659401441 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.243255289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.238931074 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.29763248 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.331903517 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.238454563 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576303424 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.240207013 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.238852463 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951674801 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33160446 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.238316777 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23771035 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.238154789 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.238178933 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.656091843 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806480694 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454371326 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.241403003 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.760972829 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.240518273 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.671070932 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.786157038 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832101864 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.240264368 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347463926 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.243008384 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.240393002 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.239971493 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268821368 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238593022 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.298290639 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.240826785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.637080556 seconds)
  done (took 349.255483493 seconds)
done (took 693.642281065 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.959214181 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.899878403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.036768235 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.917419544 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.89394863 seconds)
  done (took 10.886160796 seconds)
done (took 12.065594126 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4341701 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.435998033 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301553276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43730518 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270638489 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.454915534 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415083012 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.261095521 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347019587 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.320533834 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346195476 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291664155 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.268258238 seconds)
  done (took 18.762959983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587798621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608393587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30656197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57424677 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.281822123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.610630188 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.447435307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.467480365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452017086 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256357742 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253625504 seconds)
  done (took 17.026095717 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588393875 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.585596272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308479205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.58023762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282879827 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609092766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.450281988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.462980615 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444370399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256765794 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253432488 seconds)
  done (took 17.00121334 seconds)
done (took 53.969540616 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.25022084 seconds)
  done (took 2.429089208 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.283150467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.45115892 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266707655 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.254824643 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.250515529 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.250603973 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.254601913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2497512 seconds)
  done (took 11.441783635 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.249956352 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.248297308 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.24592312 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.250710627 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.246476427 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.249574915 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.24941952 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.246706654 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.250500333 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.250032776 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.246388239 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.246959499 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.247514839 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.247121378 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.246890161 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.250182745 seconds)
  done (took 21.15355526 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.25017705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.247373637 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.247885868 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.24771131 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.248649591 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.248479866 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.24819897 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.246911301 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.248035748 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.248050815 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.248786568 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.247333774 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.247936416 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.247526181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.248438922 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.249034344 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.248386854 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.248323005 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.251637618 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.248274237 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.248474157 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.247305406 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.249236933 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.248547916 seconds)
  done (took 31.1446016 seconds)
done (took 67.350382115 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.376316921 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.916812266 seconds)
  done (took 9.474444044 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.251093018 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.250694855 seconds)
  done (took 3.68479632 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.251112634 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.251304597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.250441478 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.25060962 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.251516647 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.250361907 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.251004343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.250876965 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.250958576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.251498591 seconds)
  done (took 13.691445039 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.250892775 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.250893041 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.248494925 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.251662809 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.252073829 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.2488288 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.251748899 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249934573 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.251110867 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.248657308 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.252091984 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.250274955 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.251161925 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.249107908 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.251714622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.249499379 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.25011733 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.249569248 seconds)
  done (took 23.691256664 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.252865696 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.252216379 seconds)
  done (took 3.688858688 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.250116769 seconds)
    (2/7) benchmarking "second"...
    done (took 1.249445011 seconds)
    (3/7) benchmarking "month"...
    done (took 1.249094591 seconds)
    (4/7) benchmarking "year"...
    done (took 1.249769857 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.249511651 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.249394543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.250142402 seconds)
  done (took 9.931523765 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.253099904 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.434624816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.515898873 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.869488351 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253722608 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255743585 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.108229539 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.256436035 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.257866014 seconds)
  done (took 14.388459123 seconds)
done (took 79.733779466 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.264994583 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.244786003 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.160197481 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.259922324 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.261098976 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.588200383 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.267490812 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.366830577 seconds)
done (took 37.59987164 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.251362982 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.94068852 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.985719039 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.246131214 seconds)
  done (took 11.358141888 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.238946864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.208302771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.245006989 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.295400036 seconds)
  done (took 18.172399233 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.880087961 seconds)
    (2/2) benchmarking "read"...
    done (took 1.579385037 seconds)
  done (took 4.644864579 seconds)
done (took 41.613224353 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255118954 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.252305357 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.253913432 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.251377832 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.254442724 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.251844733 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.253074985 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.254699263 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.253941546 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.255291495 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.253887569 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.255314811 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254244134 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25251804 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252443095 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254007601 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.2524113 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25239733 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.253732229 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25110227 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255046283 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.252042251 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251669302 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.255075383 seconds)
  done (took 31.268341357 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.254790988 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.253085737 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.255166297 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.254965851 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.253512482 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.25485838 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.254287817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.252762971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.254935099 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.255140796 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253158131 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.253189386 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.255979879 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.254416798 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255743077 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.253028018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.256524035 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253505872 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255466704 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.252441094 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.256588276 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252673889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.253218886 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255898398 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.253275928 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25326303 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.256394868 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.254035229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256425561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.254340229 seconds)
  done (took 38.820457346 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.26121894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263618355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.255963482 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.256576734 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.255541947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.255744865 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.255885804 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.256503654 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.256920113 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.256816703 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.257049215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.257346759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.257305832 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.256704314 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.257186291 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.257271629 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.25779134 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.25683618 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.257434092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.257261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.258017515 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.258108674 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.257331958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.257033186 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.2570034 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.257061213 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.2575754 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25770995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.25817733 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.257282298 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.257934547 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.257712161 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.258821961 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.259087808 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.258110432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.257464414 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.263136981 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.266084737 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.258291371 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.258308496 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.258776418 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.259366249 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.258280328 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.258601925 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.259101273 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.258127366 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.259343424 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.257614288 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.259114457 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.25926319 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.259030703 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.259206068 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.258959776 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.258482755 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.258814151 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.258773412 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.258577117 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.259957468 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.25982193 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.258271456 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.258664555 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.259413581 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.259769674 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.258472971 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.259832036 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.259100621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.258683685 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.259414172 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.259624619 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258726432 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.259936994 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.260060656 seconds)
  done (took 91.79634652 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.260041619 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257321719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256876348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256781723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257395294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25944891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257760587 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259134752 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257580473 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260053954 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26027326 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257502692 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257936878 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260347585 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260591163 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.257972548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260440123 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257705982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.260458422 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261132289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260509431 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258785078 seconds)
  done (took 28.887522397 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260878965 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260600651 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.258335633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260712382 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257861374 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261422749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.260740166 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261471989 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26073587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259198846 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259271103 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261782779 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258699454 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258799099 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259376093 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259319255 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261310817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259596201 seconds)
  done (took 23.872601452 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.259789263 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.259919167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.261632836 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25966172 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.259793741 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26145746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259610819 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262216575 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261361805 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.259698052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.26264652 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261856997 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262001443 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258384782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262028184 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259878743 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.261817969 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259337315 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262260611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259809832 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260556339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262021603 seconds)
  done (took 28.931460715 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262341663 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262468117 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260726232 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260589026 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.260014836 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262562045 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262362552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.26072529 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.262238906 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.263182314 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260236762 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.264885312 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.261682054 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261197643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.261257208 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262395793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263412325 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262084531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263662884 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.261258978 seconds)
  done (took 26.433243342 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264654478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265014253 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265289965 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265777316 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265443414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.266052167 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265652795 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264812164 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265072086 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26618017 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265370192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265655214 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265844018 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265799052 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266283108 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265978952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266775368 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266335677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266114434 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266815379 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267172943 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266546861 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266533344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266341685 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267287233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266991615 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265611203 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266987314 seconds)
  done (took 36.644570531 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266160131 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265860249 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.262310611 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263010662 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.263514748 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.262011797 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.263730726 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.264024345 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266143519 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263845301 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266383205 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.26741668 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265366794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.266285257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265816757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.266821164 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266167149 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.264384273 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263867537 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264648714 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.266217596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266683337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.265839366 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263675864 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262907969 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.26736337 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264151204 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263920062 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266395483 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263186648 seconds)
  done (took 39.145872005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284489231 seconds)
    (2/2) benchmarking "in"...
    done (took 1.285380027 seconds)
  done (took 3.76732943 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.264713066 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266630214 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.266025705 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264308856 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262603933 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267226917 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266853622 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265017222 seconds)
  done (took 11.321574195 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.267592575 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.267168632 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26728723 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.26730429 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.268123647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.267620331 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274274033 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284929946 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.269021035 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269126822 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.275383744 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276612838 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.270553897 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268696968 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.267327341 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269873896 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.26828488 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.26869179 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.26864689 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.268283719 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268907278 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271104654 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270969722 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.26569332 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.27025225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2811417 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273234524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.268705096 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268817984 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.27299485 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.269797088 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.266102111 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270850132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.269593698 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.268933273 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.270187993 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278615586 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286416769 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.275828893 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269840305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268649879 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.26621011 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.27020184 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.271056162 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270575538 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.269474919 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.269188298 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266789598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.26988928 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.273422382 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.275395842 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26961798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.266539159 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273648429 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.271304669 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277165422 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288382561 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273635749 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.280472704 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.281974247 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284196154 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279139626 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272407903 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.270490135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281873768 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.295068372 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27702732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.285799995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.268243518 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.270640624 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.27856729 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284097835 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.280836561 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.270929343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271125844 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.27058934 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271973254 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271562683 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279423755 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.29082409 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.27121048 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272400263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281339062 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295317182 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.271351629 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.271856422 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.273216135 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.27233463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27315255 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283208608 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290304931 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.272204533 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.271530357 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.271839246 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.273175564 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273039822 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.271408382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274042733 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.269617715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.272824436 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272617474 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276501744 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.281372379 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272467879 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273780577 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.280369176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272816486 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27296152 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.280465229 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.273201973 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273282156 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.274467868 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.280351141 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.269536104 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276915695 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282551581 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.274313424 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.275202124 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.273986864 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.272938943 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284142827 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.300400886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.273791916 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.272954289 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278850653 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.285687354 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274481363 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.276745939 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.273581048 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.271566192 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.271371337 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275026399 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.274336222 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274990185 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274172676 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275229454 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.27207156 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.274482576 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.273362842 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.275504604 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.27471773 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.274238211 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.276498185 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.276892593 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.274585744 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275703686 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.280894071 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274554198 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.276343046 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275318389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.272825354 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274175668 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.276226642 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.275384899 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275709415 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275251367 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.274889113 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274720909 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274985418 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.27537721 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275121021 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.276782634 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279819755 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.275448153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.280190558 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.274747515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.272058725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.275179632 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.27581033 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.276061407 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.275956179 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.27463533 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.279178483 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284809842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.275708129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276210725 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.279058262 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276475608 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276555263 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276703422 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.279835493 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.285868173 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.276910068 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.284526803 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277159296 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277337547 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.276873743 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.277508683 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.277212321 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276235049 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.280834473 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285361701 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289371334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287075137 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.279131058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.282060922 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.27919193 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.281834849 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.28154726 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.277190265 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.277496027 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27730172 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277652497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276977975 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.277952736 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278212482 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276478654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27760875 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.277386741 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.278067157 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277921337 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.277883644 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279085761 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274929056 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277250577 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278161496 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.276872229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.274858519 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.27694875 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277460206 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.277819099 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.279118171 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.286792424 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.274796089 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279247938 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279728976 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.278284799 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.277256298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.278878171 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280471379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.27897362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285265672 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.296925885 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280007106 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286455561 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.296730286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.27857461 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.281564422 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278056444 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.276136396 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.282003631 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.287166358 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.279020822 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.279673829 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.280189193 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280309339 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279680333 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.286803658 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277200619 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.279452077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27908662 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.281085952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277256257 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.281928859 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.280365347 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.28069909 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281280227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279317932 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280106619 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281071327 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280300162 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.280896259 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.280993252 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283896944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.289281338 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.285411791 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.281100774 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.28204861 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.282330241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284126491 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28129413 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.281283097 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.280654823 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293030533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289755174 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289079403 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.282262618 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.281121928 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287965488 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.282396685 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.286061138 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282048181 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28068393 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282140189 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.280791524 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277930187 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283108559 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.281888985 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281854329 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283228781 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.28661314 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.281588899 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.281765126 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281586616 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.282617428 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.282617673 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.281685437 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.281414282 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.284568067 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283522579 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.281711549 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.282013241 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288779669 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299997997 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.283048117 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.283055753 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.283071527 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.281700973 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.283773358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.283170734 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.286113893 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292622643 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.286891032 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.29260821 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.285325334 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293314853 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.282868216 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.286063742 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.292000505 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279202398 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281944941 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282731729 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283045906 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291442674 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.301757759 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.28374904 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.288188566 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284289943 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284743235 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283922396 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.284251072 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283441837 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284067716 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291496888 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302910835 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.28827211 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286707657 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.280852435 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.284173017 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.284676753 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.284753169 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287590867 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.284963975 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.28611468 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.284051215 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.285048857 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.283596201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.284890135 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285484789 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.282323537 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.284785364 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291154938 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.304353011 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289854591 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.285207503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293854081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285428365 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291228777 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.304435186 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.286553048 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.285964464 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.285277445 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.287603695 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.286047276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.286737795 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.285632773 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.287112633 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289443943 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.286103985 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.286798591 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.286142739 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.286677789 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.286561322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295974855 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310525577 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.288187522 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289512205 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.282929554 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287497538 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.291308803 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28635537 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.284941817 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.289232287 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29728769 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293596178 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.286762792 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286735579 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287956943 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287159298 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.286603025 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.286537977 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286588857 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.286278324 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.288147646 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.287275833 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290882951 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.287258359 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.287489097 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287541926 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.288431799 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.298094752 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.286968791 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.28915773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287060549 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.287216922 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.288415121 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.287924389 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.288257093 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289091201 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286865726 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.289194248 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295172107 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.295946508 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.290288727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.288384427 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.288460138 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.289280562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.288958215 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289383902 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.289396571 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289214131 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.290499854 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.288346766 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.289364219 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.287568284 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28791886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289357239 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288592493 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290547828 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.296466401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287732229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.285761832 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.28875965 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287872692 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.287955453 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.289595215 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.296415855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292657993 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.299995236 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.298381681 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.293611991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.288988156 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29302731 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.297059732 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.288095809 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.289873472 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.290602273 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.291654212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.290064784 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.293124349 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289645032 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.297018017 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289643175 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28904108 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297437195 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30948245 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289645775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.291830019 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.294817373 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289249538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.287164517 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.289877059 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.289598253 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29734757 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.310704692 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289391897 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291599205 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.288905354 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.29271959 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295522488 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291536756 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.291848554 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.288206374 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.291891552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291131526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291663309 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287991399 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.29127225 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.291682073 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.294581931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.299029287 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28899264 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294211855 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.29147078 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.291759161 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292472087 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292095789 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.290067937 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288539543 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.292117288 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29130311 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.292070495 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294089258 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291274089 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.294003328 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.294788963 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292085348 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295663387 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.304671958 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300888317 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.288598766 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.292449306 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.293511701 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.295625493 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29201049 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.292894504 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292541247 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.294792887 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.293801134 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293184222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.292038168 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.296056547 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310150232 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.310622709 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29319064 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.294165816 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296112081 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.29196445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.290645611 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293485511 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.296746759 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.297175517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.302932263 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.294195845 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299494883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311306824 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.295931703 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.297283396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.29732097 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.302382182 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.297152292 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294275905 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.293901223 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.299537835 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.311266395 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294349618 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304589093 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324908838 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.313448011 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.295160587 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.294945246 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294665193 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.294231365 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.295830643 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.294865277 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.294915658 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29330764 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.295474237 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.296903958 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300097341 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295706456 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.294529965 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.293763226 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.294205887 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.296917994 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.291811785 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.295235689 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.29539262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.294825305 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.295320232 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.295624617 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295577566 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306925683 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30562441 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.295139873 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.295714821 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293185421 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.297581414 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.298820636 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307641257 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.302730362 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.295833955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295922142 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.297383235 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.296862424 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29361895 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.29671549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.296384977 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296194086 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.293558977 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.31006806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306010376 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.301500038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.296055509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298135097 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295863047 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297547945 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297240246 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297115496 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.298449004 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.297856034 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301081808 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296413636 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.296320875 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.300106907 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.304944991 seconds)
  done (took 766.914986738 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294808825 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294227376 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293691412 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294653328 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293733378 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294716577 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294165983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294413222 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2946143 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294086717 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293427937 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293766796 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294854734 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296226895 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295171335 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295317641 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294290784 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294570287 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294994276 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294735745 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29571241 seconds)
  done (took 28.413208925 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297970687 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.295145191 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296030198 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296623754 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296240644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298144185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.295305053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299054157 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298563971 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295693204 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.298159081 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299512709 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.295095466 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.296042015 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29648125 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298571916 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.298208845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295782344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297582266 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2959185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29839638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.297272199 seconds)
  done (took 29.763844034 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.302508066 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.303401486 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.302148033 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.300390899 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.30235987 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.300405199 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.302497857 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.302694968 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.302349375 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.304914583 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.303063189 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.304659307 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312173254 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.308443368 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.305996638 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.303689406 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.446972558 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.30386006 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.304541225 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.303590862 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.299600075 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.309295747 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.301149547 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.302308967 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.302903831 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.302925666 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.303546369 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.303577062 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.303516627 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.306741248 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.308699512 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.303441438 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.303005429 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.306267146 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.304429041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.305261657 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.308204868 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.305101006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.301053956 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.304343996 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.31599544 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.326946167 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.305169488 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.311797927 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.304489378 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.304798297 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.308610831 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.315412696 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.3022043 seconds)
  done (took 65.331335401 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.305119713 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.304183886 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.302192248 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305859898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.304989447 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.305091657 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.304780561 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304024721 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.301976256 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.302268191 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.306056267 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.30316957 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.302756455 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.304015602 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.305055226 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302962999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.303125213 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302001149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.301910153 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302496433 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.302835953 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.304683673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30554323 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303644583 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304880621 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302919862 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303810451 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.305236376 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.303515769 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.302889475 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.305068107 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.305541278 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.305617878 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.304502292 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303554922 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.306371626 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.306439511 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.304351783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306780587 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.303733239 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.307986944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306732525 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.306600263 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.307621625 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303281708 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.304896045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.30457339 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.30364684 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305070104 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.307605073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.306596561 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.304452079 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307567974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304878138 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307027673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.307466643 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.30468567 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305236657 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.307481161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.305474086 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.304043093 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308004488 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.305191636 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.307271045 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.307711718 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.30469642 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304760681 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307421637 seconds)
  done (took 89.972103306 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309251188 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.307856277 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308196838 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308964891 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308414129 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.309091979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308601543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.308902913 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308403196 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.309052726 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308741576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.308217953 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.309234926 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30801782 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309173049 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308914338 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309644995 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309318317 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.309681384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309768015 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.309164555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308904031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.309163197 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.309732308 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.309422298 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309625601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.310122108 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309058081 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310304249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.309679646 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309547375 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.309159397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309848636 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309806265 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.309596053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.309594592 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309788167 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310268809 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309333677 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.308780394 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309722004 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309593594 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309707197 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.310763592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310628961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.310274623 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.311114739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.311106823 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.311282206 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.311354454 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.310006035 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310784366 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310325821 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310464746 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.311079498 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.311471752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30981667 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311473127 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310689781 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.31070047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309953689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.311156999 seconds)
  done (took 82.442338299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310705866 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311820157 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307245108 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.307059343 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310811053 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309104094 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310785022 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309854069 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312125367 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311415701 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310775128 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308663418 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308645996 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310687649 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308417449 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308967623 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309205119 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30829335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311575918 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309118309 seconds)
  done (took 27.436088334 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.308577658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311891905 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.309151167 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310010405 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.311784715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309686062 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.312178255 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312834263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310088537 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312106953 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311848139 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312257707 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308848578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310293265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311839256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309573766 seconds)
  done (took 22.214827759 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.310440832 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311439901 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312965469 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313288331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309416218 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.309432211 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311511515 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309687098 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309181994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313780106 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312058645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312847373 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312722645 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312880027 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.310428051 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.311665697 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.310240791 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.310976913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313157242 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.314652472 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.311179464 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310332 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313834211 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.313398591 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310638472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.311713787 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.310992269 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310734698 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.31116655 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312973828 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310687015 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.312355633 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.312154986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311374043 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.314187861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.310843638 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.314705919 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.313925173 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.314590366 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.314357721 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314079335 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312265698 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.3142089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31351254 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.31072834 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.315422696 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311246929 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311803862 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.310912661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.31135054 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314872854 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.31437898 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314587186 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314682008 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.314136748 seconds)
  done (took 73.421289626 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31449947 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315050041 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311701301 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314355791 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315227687 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311927582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313711722 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31246928 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312940724 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314386986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312414876 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313992491 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312040655 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314769894 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313995332 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316115014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312931888 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312703096 seconds)
  done (took 24.890214348 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312113373 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313212573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.31632391 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313827304 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.312556369 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316702846 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313151239 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315825796 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314951762 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313702374 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313152559 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.31658917 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315801366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316525358 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313939086 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312864796 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314858726 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316473748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313512484 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31360695 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317111711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316885922 seconds)
  done (took 30.168531371 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.315913002 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.315664274 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.334531855 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.359678835 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.348591418 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.31723413 seconds)
  done (took 9.238424372 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315005808 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316929304 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314867784 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318277764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317237486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313235516 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313941725 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314714219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316309667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314982833 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314031628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317362731 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317024308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314895698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317056184 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317383731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315045813 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315838168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315733159 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318652549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314545231 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316752048 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314597611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31510175 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314621871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316328625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317651738 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315805796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315179369 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317947018 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316319547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314503019 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318221075 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315734659 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319492622 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31863611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315272767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31793162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31842369 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316316586 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318487741 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317867622 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318059049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316343309 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318222063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315849778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316726481 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316827266 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31588436 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319348228 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319472646 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317051046 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319576703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319430211 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318208337 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320463776 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316004452 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316584515 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319486975 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317667521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315968331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318792264 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317026282 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316322668 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320030246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31716678 seconds)
  done (took 88.160664624 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317610863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316472147 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317015143 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318438024 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317370835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316912403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316761385 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318191161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318627907 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317868702 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320942209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31674645 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318146143 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31865214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31729664 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317861532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318809111 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317345316 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318191523 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322540263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317729184 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318407248 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317913289 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317948489 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318075406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321488448 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319784413 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317968667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318344464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318681928 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317989514 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319229625 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319358676 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31866015 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319151451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318832657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31957148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319211856 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31876082 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321828473 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319444872 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322229456 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319588889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320276781 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31992423 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31968971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31992978 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319640077 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319295341 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320891459 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320406249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320208755 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320666367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319265169 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318802448 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318721039 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320468905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319756343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320705736 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321817082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320521508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320801291 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323083908 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320616655 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319607534 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320345904 seconds)
  done (took 88.318574443 seconds)
done (took 1788.763022516 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.434198958 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.392362309 seconds)
  done (took 14.077758183 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489141048 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.441696673 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321650725 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.319248144 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322985655 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.335842257 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.327024594 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323500809 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.32329579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323793081 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.323212875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.521487919 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.334078652 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322546221 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.321890887 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41686409 seconds)
  done (took 43.028921784 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350225496 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.32851815 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447859391 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343347045 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349456944 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.521069595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.384404266 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326967553 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.510351109 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.367366738 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.969159679 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349257739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325567123 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.493000478 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.347698887 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.521850486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.58624118 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.973567258 seconds)
  done (took 30.750000108 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.812871699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.365730543 seconds)
  done (took 9.432846815 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.339483208 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.335644624 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.358576907 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.335762729 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.357690573 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.356504172 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.368401058 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.400980277 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.393528817 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.32312435 seconds)
  done (took 64.829852683 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349678319 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329109216 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328419968 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327110532 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.319867029 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.319541159 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325970805 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.325784824 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.227942574 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465042607 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.346779737 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.332467314 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.3258337 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.330170109 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324360196 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365215983 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462484876 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324634815 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324918671 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.331678072 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326608739 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.418539626 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372040578 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.32548217 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46342395 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.250262861 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33311315 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335322589 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440176318 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325840029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.328145235 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328779828 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.330584321 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.908743177 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.791803771 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.337787637 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.353720546 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336040399 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.32568334 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468122913 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328972952 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.334143713 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.332388236 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.763404029 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.490922828 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449601421 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.667370252 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330773141 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.329744441 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391741092 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330990468 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329525334 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359006975 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.101757538 seconds)
  done (took 111.685166859 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.359395788 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.811556634 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493265166 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.347131509 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143996812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.045740969 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324425135 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.634778312 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.367138553 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322574694 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.665871492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854876981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.326350167 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.348509024 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.982689896 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327070222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333868078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.106811013 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324204296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.323526399 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747348658 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339458916 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.33162193 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.483713428 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364366135 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820074019 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.904715895 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.669331401 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.329886313 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.323698359 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816701879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.328874219 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.362137546 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.326130255 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.613271341 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.718774259 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696609361 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.332650216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339824328 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.324627767 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.355373114 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817464896 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704691048 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32548029 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323392159 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822190329 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326517552 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.331464555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331458762 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527560239 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.30305524 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324239199 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.908002471 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.32633511 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.670524458 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.348164073 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.40749533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845889031 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327279973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.351955353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339944135 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326601677 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.331850583 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326766905 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.330604655 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691978661 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.426973062 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330629586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703092423 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810121767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.327507042 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888911435 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.264084888 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335957149 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.402129351 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324636458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.916101352 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846084946 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.32847736 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325307964 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.677413552 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328803279 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.655556421 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.341684942 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325198093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760507338 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.350666435 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.384826421 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.326710907 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.327178547 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.975988597 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329620467 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604308781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.358094019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327378477 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.328054196 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.337837737 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32643792 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341806129 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.329876878 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869333997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.331263658 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.649154094 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.348041848 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342539258 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32873607 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.329298117 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.327068866 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545932136 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.868156574 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.335293195 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329148343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.327414699 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.333179037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.467472421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.33122599 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.652732301 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328376984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329534224 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.330358441 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.075913551 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354538789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327556268 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.33258686 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.1983794 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54224837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.347572497 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.348327052 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329156316 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.344005828 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.852292564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329219605 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.369016913 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329251149 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056268537 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339207004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.341963922 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.949997554 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330527124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328391663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.354645439 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328162697 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641594643 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615704517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364679897 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.335744712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.32977205 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044868193 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.35852464 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479779438 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350378036 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353866603 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531020062 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.746435426 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.329812596 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.910472417 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.329434858 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543700673 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344037089 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652948168 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845827294 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331093633 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336547296 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.056478395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016940122 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.986313712 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.334155431 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.672026693 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.328728845 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.773498848 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.329640914 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330451396 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.789198466 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329194231 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33640805 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.330829928 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33128699 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.486331489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508245549 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.001134547 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331426987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811167236 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345942729 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338283875 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337563632 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330135676 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.685662058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.431547849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.333085108 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.371417812 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.331288211 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331017076 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836740506 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.232781583 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.333115027 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486952028 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987194814 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.332215083 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.330937784 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.03443881 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628162382 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859334202 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.384900009 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.661050134 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.334688663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374081636 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.078467779 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349512918 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822678441 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.335439357 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.331956885 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9516124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.332705631 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.678832534 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.332165143 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331539656 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900145052 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333214002 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.336349806 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.862774023 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334718732 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583448621 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332073179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.352983839 seconds)
  done (took 1112.784256272 seconds)
done (took 1387.843506009 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.332230147 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.334173976 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.323357635 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.335298528 seconds)
  done (took 26.592391306 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343745326 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339003068 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340168967 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338730489 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3392332 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339184082 seconds)
  done (took 9.308161829 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.555319755 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335492359 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.335717713 seconds)
  done (took 19.494092886 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.575685862 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.677836787 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.734186888 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.674884722 seconds)
  done (took 10.932460372 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.340497478 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34157098 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.340651313 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341182295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.342828763 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.344963473 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.341257082 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.341740375 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345965371 seconds)
  done (took 13.347865689 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.558682424 seconds)
done (took 86.503344476 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.459981981 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.995883062 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339022759 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.332816359 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.337655477 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.460591216 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.319241754 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.654245282 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.351239582 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335854499 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.375356962 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.360944666 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.333895233 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.012128661 seconds)
    (15/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.551936718 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362167539 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.321970509 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.992377458 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.614396578 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.536445829 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.969828252 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.322046814 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.82879883 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.323211674 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.418204041 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.088129345 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372807788 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.763230559 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.97605664 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.716941869 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.336513055 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.021928111 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.710945496 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.335652221 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.466088164 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.355112709 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.336145037 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362771014 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.57969363 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.086512529 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.437788807 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.336322254 seconds)
    (43/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.442847639 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422686532 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.26243201 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.39835036 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323026828 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.553143173 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.608916054 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.47650136 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.730274578 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.171634504 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449627391 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.338044994 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.616710352 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.419983386 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.464014168 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.92735605 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.821369658 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.297762872 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.316493658 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.394649603 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.337718259 seconds)
    (64/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.717651142 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.337640426 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.815499875 seconds)
    (67/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.672053882 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.798777501 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.335746746 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.750961524 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.98841268 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.775551642 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.765305255 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.603464838 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.321859549 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.285359983 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.054197603 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.356320521 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.792616545 seconds)
    (80/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.533701198 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.918539535 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.762450415 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.393032517 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.339881965 seconds)
    (85/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.747372955 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.089546272 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.165316396 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.219947626 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.717457065 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.73536668 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.562536593 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.330234911 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.254913554 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.360308443 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.739379435 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.00435025 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.063775036 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.339290814 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364117764 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.691177383 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.383484097 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.452698625 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.019177754 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.968188667 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.334176742 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.815004593 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.830653233 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.345857348 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.532978135 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.483808909 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.352200914 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.577375597 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 5.388111471 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.668382658 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.030945729 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.318137513 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.954530902 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.973199934 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.224150569 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.983634689 seconds)
    (121/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.221787602 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.510427348 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.341539778 seconds)
    (124/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.467853229 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.340628788 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.853647216 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.883309025 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553366413 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.437335004 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.340119571 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.848858459 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.341474379 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.931656754 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.741483715 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.366441314 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.366423411 seconds)
    (137/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.273543405 seconds)
    (138/309) benchmarking ("sort", BigInt, false)...
    done (took 6.340173942 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.037506445 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 1.867738284 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.365117845 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.619435529 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.390066209 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.149188081 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.762782005 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600273914 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341110095 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.477162019 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360213093 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.455272822 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44492996 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.950146696 seconds)
    (153/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.329157468 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.503875232 seconds)
    (155/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.025317587 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.949469655 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.427103392 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.346166399 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.234068234 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.406151826 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.173056655 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368770464 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.963686128 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.192641059 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.764047597 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.019327459 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.234798736 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.741715879 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.366397326 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42852498 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.387815621 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.391453478 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.615903779 seconds)
    (174/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35175242 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.35098717 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.383184108 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406081165 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.446734155 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144821621 seconds)
    (180/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.346726336 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.343445724 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.451381394 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350984555 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.377522984 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.618708364 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367928662 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.220129698 seconds)
    (188/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.036354326 seconds)
    (189/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.484329415 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.774773833 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389475229 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.050364649 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.369812797 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.844399988 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384243279 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427697905 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.416708749 seconds)
    (198/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.366848938 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.113693124 seconds)
    (200/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.370970167 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.66616871 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.329685679 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.949757011 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402835899 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.58136157 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.470916671 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.376868469 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.990246664 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.344676548 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.828347134 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.537605115 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.628139549 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.3784311 seconds)
    (214/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.876186323 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.952220386 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429740538 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.555732033 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.987798265 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.330975605 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.878281352 seconds)
    (221/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.702210266 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.22935672 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.78151993 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366136984 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.783496134 seconds)
    (226/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.331919229 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.378750226 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.35354909 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.44479032 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.406887047 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385885469 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.41768966 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.369630177 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.5391438 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.331317902 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.814501004 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.36180867 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.410900222 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.746605037 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.442981041 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.369017364 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.232310649 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.044455938 seconds)
    (244/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.165154691 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.372272203 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.345770259 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.711962088 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.866878011 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.352533678 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.077652665 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.36385958 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.516980363 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.428850914 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.57025694 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.378979106 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.347762927 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.356249442 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.374021903 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.332415188 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.216378995 seconds)
    (261/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.463286469 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.331919514 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.351762931 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.726743198 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 5.666566105 seconds)
    (266/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.75771704 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.684192689 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.35421711 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.453368485 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.570614328 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389154078 seconds)
    (272/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.3487293 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472395675 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.317544327 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.911718307 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.415006711 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.344265487 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.385987661 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.368250778 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.988657691 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432186983 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.35607744 seconds)
    (283/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.7326591 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.430092482 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.134047849 seconds)
    (286/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.104954245 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.481453934 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.649181156 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.433453503 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.276005676 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.678363228 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.373858212 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.348427056 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.112338958 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.025478076 seconds)
    (296/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.925266015 seconds)
    (297/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.163001115 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.267070269 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.390434615 seconds)
    (300/309) benchmarking ("sort", Int8, false)...
    done (took 4.376166279 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.359226224 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.855257021 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.413341548 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.792482373 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373032835 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.714170339 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.290742979 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.485268895 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.43617252 seconds)
  done (took 937.874400928 seconds)
done (took 939.14567221 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.37971675 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373611321 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.358428528 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.379525125 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46938207 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390100817 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368506703 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.360413955 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40560782 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.407512812 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.355874209 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.39068594 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.358820993 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357882713 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357766646 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372213024 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.471933194 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359917573 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375079341 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.369138201 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.375276503 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357446699 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408625774 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.391997831 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.363130366 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362156787 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.362170054 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378551972 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471263523 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.362954482 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.362652236 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.369994782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.474481567 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.35707948 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.354020534 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.379056742 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.37126458 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369632689 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.363676956 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390823505 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.975098331 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361711311 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.360746621 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360354786 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361065421 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.36518609 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361776396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.365048193 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372752743 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373949215 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.943832475 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.377242346 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.3627755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.361067893 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.370915785 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360563644 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.36425848 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375417369 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.380276299 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376415536 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.462657167 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.365272221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.362810467 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377438543 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.368413001 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.937652178 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356738448 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36566798 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.914051225 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.368102568 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.938618538 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369668636 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36237476 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.374729984 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393131052 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.479553787 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.35640962 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.361638157 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369116569 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.360062332 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372183765 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374865099 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36657968 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363538969 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37575872 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.39382929 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.373652062 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363104762 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372388813 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382142972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.369288058 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.374306544 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365517807 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358460841 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.37311518 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.367047873 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.365762603 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366581337 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368601055 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373507586 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.918532388 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379817715 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35901804 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.359344319 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.362309112 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.375506057 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.971486308 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366729913 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.385816384 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410803795 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.365625178 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.470955161 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.367444669 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378852781 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373449641 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36639581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358946747 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.47178706 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.969013854 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379823578 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365515492 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.362524089 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379681056 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365912904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360910706 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.485095339 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.365970316 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377185418 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.48426686 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.375681439 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395350478 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.363158458 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.367822945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.397295637 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380788852 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.396156232 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367134772 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38018699 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.380425612 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360924598 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375511581 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374900606 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.366346679 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370705082 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359372535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.393354377 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377632799 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378168663 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386238176 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485928566 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.362227048 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.472832985 seconds)
done (took 231.58232559 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.426889589 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.362739973 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458233345 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.363339535 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466797028 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470814808 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361886109 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.36295812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36093283 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.742382452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.362473334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.362253946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.363966316 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363238036 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.452697686 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.36448602 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360964365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.785043213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364425015 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.436025194 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.365805296 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.361891888 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.364761474 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.832884218 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363243839 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360224467 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436462035 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365025568 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.735380803 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359855473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.364341593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.799630538 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.455628789 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.38357835 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.374453992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372174535 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.468014416 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384179436 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453152181 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452306354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.461434845 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40474991 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.361075812 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.364311834 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.367818236 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.367739954 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.363142376 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.393520124 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.364164735 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365424314 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707204739 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.375751751 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.364099837 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364192267 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.364077788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.396271965 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.364928345 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366809036 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457095154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.368682368 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430234599 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750199046 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.850589155 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.366987544 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364851036 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.363874444 seconds)
  done (took 151.007806922 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433403807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.441213555 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.484888066 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369049655 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417356797 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487952195 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368448656 seconds)
  done (took 11.296194262 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373443315 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.367898298 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.432522416 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433969203 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.366799663 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.542505585 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366957218 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379924705 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365384173 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434828739 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367855997 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368299074 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.374152844 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.368364239 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432751662 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.380973367 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483524585 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36921281 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.370344494 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520602164 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365966366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.375694332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421791427 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380149692 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369658105 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37607512 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.986282587 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370010592 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367216468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36812548 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367124011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.407399339 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368806017 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.366122375 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366778901 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504418464 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369441615 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367134133 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.369401403 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.367299518 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370065477 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368729893 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369961316 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367106497 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369329188 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393706477 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.370282653 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.370277398 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.369427139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370481515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.429964177 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370090689 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366671297 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367100721 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.438593413 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377331328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370532491 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.367095388 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37005455 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368005196 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522950858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436015633 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.370735836 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436862603 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370503299 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371025229 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369812232 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370261717 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432204217 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370880577 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435273921 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.368526452 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55899708 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395313866 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371706894 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373698181 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374763063 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371090643 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.365614648 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377444646 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369495854 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373234624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377197698 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369238655 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369303972 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.498304529 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484795117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.369920395 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.384482925 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.379893876 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369652178 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.436888369 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372179889 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370562728 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446726681 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487645436 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.426601502 seconds)
  done (took 157.107206113 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376683023 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381205116 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.373923632 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38874037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372674955 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372214 seconds)
  done (took 9.565447408 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375235276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373113022 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372320278 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372015962 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372697647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.372344273 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.373463438 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374167267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378413602 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.373418812 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372953084 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374665138 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.374053089 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373315146 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.37318252 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.373891227 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374308851 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371917487 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372275164 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374080552 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.477867291 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373932443 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374720038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376103115 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377849264 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37330363 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382368748 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373312782 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.37306173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382073788 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377714576 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373794556 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376742557 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381542928 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379120494 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376526378 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379039854 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.375221503 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371717857 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375196069 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375454006 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375240694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376163517 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.376020498 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377630086 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381859985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380745497 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38387613 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376512826 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.377012812 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.376969781 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.375572413 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374542315 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376385574 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377571886 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380699691 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.380795793 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375498392 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376468221 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378077853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377292414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376020385 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379026442 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379633255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372822929 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376196873 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377814841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381845914 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37581521 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376970422 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.376762867 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373743369 seconds)
  done (took 101.481231042 seconds)
done (took 431.750316035 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.374741408 seconds)
  done (took 7.677543366 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.540111899 seconds)
  done (took 7.843931861 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.661983114 seconds)
  done (took 23.970438888 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.458255066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.42229886 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.403007658 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.379634692 seconds)
  done (took 26.966808473 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.560753254 seconds)
  done (took 7.863410047 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.367413265 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.378682721 seconds)
  done (took 14.049326947 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.543185871 seconds)
  done (took 7.846105648 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.114126831 seconds)
  done (took 8.422018444 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375552127 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.379274346 seconds)
  done (took 14.31266775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.363618202 seconds)
  done (took 7.666283143 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.655932663 seconds)
  done (took 8.960259955 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369889317 seconds)
  done (took 7.674190298 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.438906828 seconds)
  done (took 7.741773172 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.023679956 seconds)
  done (took 10.327642699 seconds)
done (took 162.628092765 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.370751556 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.371976341 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.373711687 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.372874557 seconds)
  done (took 26.79326563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411482653 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410500578 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412417097 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420990958 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.412870634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411162687 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.40238388 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403215444 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421215088 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413348784 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41268812 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.412161247 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410875474 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401516763 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41344829 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.412990981 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421377678 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411586785 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.40306706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413203329 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377400431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422031307 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.414737683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377479433 seconds)
  done (took 35.129739508 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.579635532 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449942222 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533127294 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.430483775 seconds)
  done (took 7.297233305 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.429279156 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431355848 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.443406359 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.482030804 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50880502 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440618371 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.403549973 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399862983 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.386642529 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.431772689 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506999896 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447433755 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.515585838 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.378664758 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564317929 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.378487351 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.378501291 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431769861 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.483262309 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.507510549 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.3791934 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.430106495 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434405957 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448260156 seconds)
  done (took 35.94699598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.378644431 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386058672 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.38479642 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378665476 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378804867 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.379592491 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.384441515 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.38016318 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.400890584 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.37964624 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.378035218 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.37662865 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.378429543 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.378545968 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.378308413 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.392572327 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.392583491 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.378804099 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.380899661 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.384535346 seconds)
  done (took 28.958326915 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.373988976 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.227049243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.726224098 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630200249 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.373881524 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.377116649 seconds)
  done (took 28.014880843 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458801275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.605272792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.380680739 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.787612036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.869275738 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.382574523 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.379839924 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.649118041 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.982874492 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.994694148 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.445246098 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.454409014 seconds)
  done (took 20.699938206 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.387300641 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.377301589 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.383728432 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.392806337 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441949616 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385540722 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389023647 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.375542391 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443381951 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.447625038 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385949367 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.442850215 seconds)
  done (took 38.161490545 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463091376 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428493415 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.420638876 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29372473 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.627607503 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588257694 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291420367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.849292088 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.38019242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649157043 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374693379 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465618422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633997791 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383667061 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377121413 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.457744345 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602321466 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936765784 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377575565 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773572994 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402778555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375596385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.894624861 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407653724 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588167095 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360569261 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.637164264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.155741156 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697155675 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389513054 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387080125 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377379694 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651252348 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066394075 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473473634 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386899023 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32373291 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.924744162 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.377038761 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.847566449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384998731 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379822741 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388337332 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377768227 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312331697 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387729037 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859836948 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.383698799 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.089304062 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376702747 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389219198 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47221308 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.381259733 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.954950668 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.061113183 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384181106 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.375037899 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385463069 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949097013 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285662444 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384519218 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.314251878 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.938012608 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808663207 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067335479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.479970898 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.381482875 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38259669 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3348168 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.840988536 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397033965 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588299306 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.404051697 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103396117 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1959909 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384410573 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342452272 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997479051 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378720909 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.315184527 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608802815 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15584202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319004122 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.327620312 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313854901 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168139848 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387650836 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.883837784 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388008269 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854207652 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392194546 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395079346 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403220081 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604440028 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.264526763 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381457213 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.383020039 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572118828 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402257042 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857232285 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338054305 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384002637 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637913427 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592665288 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380014044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.456794147 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615937942 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379948284 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.397368786 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381997006 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.392392172 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.051706168 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393898967 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480187212 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398929978 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155477335 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20765169 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382351035 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483751877 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392833331 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64770902 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.236841204 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283746739 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448428353 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383522406 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382483457 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.871675693 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232973804 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.288475093 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.383584106 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390838434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393033302 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.381814068 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402956634 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383309844 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381680491 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.159799787 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607707411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392230589 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659715419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316791913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591505498 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474339036 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606948963 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.733164553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.383413823 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643700559 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390895735 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384271397 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414871888 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402017171 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47960855 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405558034 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.387272678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642804993 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387060417 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387077961 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901602063 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16474736 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387601757 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388287505 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468231596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059931296 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420202815 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392255812 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27657209 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397409137 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451490147 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389178793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394859079 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.415361278 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450260389 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389405304 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.383559647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611406497 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395004514 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.890012718 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466499526 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.613040951 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047133965 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398096818 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318623168 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.095363893 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078794023 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385264013 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575617139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385332996 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393546203 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396322866 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.113212035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04619055 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385532639 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.804944055 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391776439 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395531749 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390562321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386423792 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.403771155 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307660109 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397918311 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398632514 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529308108 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397955215 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320101587 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901769829 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39097083 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385790857 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.161188832 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420864278 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.743665427 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912183585 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646306269 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.301856033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396842878 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.934109891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420258144 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.389482551 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400306014 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403170563 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394762696 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417068338 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399170984 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.82405049 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926436145 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017470031 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254318745 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992460059 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388574198 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.391476516 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292080879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871815643 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32317796 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048784007 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60191271 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870966468 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405511743 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621612072 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.745117577 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226533946 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400681978 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619690233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379934036 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.393310678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421802256 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602993382 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425145948 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392182315 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.353379816 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.69444086 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683155694 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392682005 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47085141 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870893099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389920445 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.170095102 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390211201 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.844658164 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582015655 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.020484679 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.833473721 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393574176 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393705757 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908278442 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399027863 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921561189 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086156569 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3935582 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.627249337 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330491185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403454004 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403463674 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394031867 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.867813109 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.404737489 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648571162 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402958437 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326237007 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404319675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996194296 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.264959826 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.39781242 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392155162 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220748608 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394119411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715923233 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.402529052 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.354674352 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392033734 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327130313 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326658697 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085590067 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394884308 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427912449 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959252468 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.901475912 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.079811879 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420809042 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244457603 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65097254 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406923347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056630956 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620018152 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.413133481 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415043124 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.493587954 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393869105 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.396905484 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292312885 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629715027 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48090077 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618088407 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.455149151 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.29973788 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393256238 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605225916 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29575713 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410598584 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672079751 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.106465472 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398953946 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258066672 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418841459 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403340853 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485745453 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.954792806 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402814453 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464155932 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404747756 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404985619 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40566311 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584731233 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402060309 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397834956 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409012005 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487663693 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.539841932 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.360642887 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.167724207 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083353539 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239124964 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07274695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407969045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395450895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39598433 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349877082 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543876682 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924264103 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669859305 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58957019 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.078849602 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417530622 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394777346 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42344026 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609411688 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671004026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271846756 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396107202 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061796869 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.277977834 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407132168 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607672421 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965554143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025319528 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520709361 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402380484 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877792808 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669132056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488832357 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397320397 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992013129 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.412403335 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.856467969 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403148427 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39740662 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561770454 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407013094 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087166192 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.406756378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.553518177 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.171221434 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852614789 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6558314 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.9442214 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407101801 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092812587 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227440663 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662728769 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468919299 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408565477 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511472183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54383503 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.402106239 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.280966781 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397584063 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246856495 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.108452848 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408191703 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071292137 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66271171 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.394878835 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.40215753 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419898238 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406553523 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622015849 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199713606 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622967721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407926872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40103568 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.971172711 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0697023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411639259 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353549664 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40251632 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673147834 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635766264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422253939 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849878412 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.109465392 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027603393 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373331285 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419583655 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412735744 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200842838 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086556417 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.371980089 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965680487 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059895848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409166058 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673706649 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405373149 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399112475 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676932466 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.403993148 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415959172 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412473942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085543302 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243802393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.412673012 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797165096 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.336167576 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62869722 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186081058 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368153353 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4099038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.607805837 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400053182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5916677 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411460782 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.411603834 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40438808 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.134810806 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.771316222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406031488 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.38608727 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.401787362 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413826553 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410627501 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698436232 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405573395 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.076625025 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.752934873 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659596114 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399944135 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.388861129 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.404178232 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403001018 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169364328 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.498193751 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.146477809 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027759747 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.402097405 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.414184904 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405239597 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61998028 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614270449 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420688178 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415526355 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40565699 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418926322 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.306330945 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.243347696 seconds)
  done (took 1632.476908956 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437305715 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441090014 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.442521182 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.415052564 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464781937 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434411807 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.408780854 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454033305 seconds)
  done (took 52.832822441 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.415044081 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.556975363 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.435392541 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.415033824 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.414645951 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417971501 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.908526785 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.413868693 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.41259968 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413621993 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.40658668 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.413736556 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.135482267 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.413455845 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.414110193 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.391532355 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.411498352 seconds)
  done (took 66.731775508 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.414060155 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.864899149 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.430971788 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.406633129 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.852544239 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.411594402 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.833751137 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.47611583 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.405034003 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.710632752 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.075549921 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.428707304 seconds)
  done (took 81.648475606 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.412707061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411103563 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.412217099 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412161084 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411994627 seconds)
  done (took 8.396438236 seconds)
done (took 2064.395115671 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.647996466 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.210252476 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119369576 seconds)
  done (took 5.666229472 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.551255802 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.600935379 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.736285568 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.74825434 seconds)
  done (took 7.97328447 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.693320516 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773047879 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.593787666 seconds)
  done (took 6.396140407 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.98875937 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.403561567 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.53099391 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.403947752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.403642908 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.406287005 seconds)
  done (took 20.551007802 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.406529672 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.410427963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.40745224 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.410957491 seconds)
  done (took 6.971779737 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.389343706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.120107054 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.390045309 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405062532 seconds)
  done (took 18.641253712 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.153951322 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.166536385 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.150977717 seconds)
  done (took 7.807066567 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.41419204 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.249784711 seconds)
  done (took 10.0014724 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.716959698 seconds)
  done (took 3.053623838 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.538974413 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.736431422 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.67014968 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.522195203 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.672430884 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.693310793 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.242252814 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.769011331 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.505078422 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.841923701 seconds)
  done (took 30.52965436 seconds)
done (took 131.501795219 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.564842679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.427197527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61060755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.540684983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640495444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.611471583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.697489205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.509805674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.048241148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.036588427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.543140393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639386114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.638407333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.427308294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.638728667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.423255967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.643453639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.602651038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.229580039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407436665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.699031481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.172565079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.369878989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.193795673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.640033624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.562552915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.758294512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423288323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405243244 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.778340683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564246804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421604191 seconds)
  done (took 197.208931942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412459317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40664593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.406996548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.406433879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412503514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407993949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409788618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.435632432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409804344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418818379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406878723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407242175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425973726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424724718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410290222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409036513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.407417434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.406212678 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408139485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427034987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40869427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425572018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.409028156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409037988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.42615965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408980694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.406700987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408060361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424806838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.414656079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412910532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42102687 seconds)
  done (took 206.576230178 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408214758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.423226094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411014051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422547819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407533479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411221482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410417864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425814856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410038997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.409215601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.431689113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407329863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427385416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414470532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.409828093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409231111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.40911833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427557118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.425761115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.408496459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.410238042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419513592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.419411255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426492751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418526317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410081188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410020577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410437002 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.40982691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411836891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410745912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415048567 seconds)
  done (took 206.62500368 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613365116 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.416300268 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.417792522 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374112226 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418211363 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417444178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416421385 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60819752 seconds)
  done (took 15.024910199 seconds)
done (took 626.775365491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.969323555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.655313325 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.625399517 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438138691 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.322912231 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442336237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437308173 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.621728937 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.410246657 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630103184 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.764547013 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.436653436 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.909290101 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.435926119 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.700414148 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540719735 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.349253738 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.465817557 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77499631 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.095444678 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.711910391 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.958160643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.621646507 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.422083367 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.912045491 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.96328493 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.218650981 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.349320183 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.437693257 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.775096089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.367472646 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.541338018 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.508019031 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.485393462 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.541116747 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.520854047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.510678911 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485600979 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.631398603 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.719906113 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.088607912 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22036312 seconds)
  done (took 97.36189337 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.4070263 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406713038 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.405718565 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.408104492 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.408130995 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.408130946 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.407978556 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.407832051 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408290405 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.407516292 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406448496 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.40857115 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.407989805 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409110925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.407677465 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.406707913 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.408725335 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.410908559 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.407796788 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.408304411 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407699768 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.407834628 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408579987 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.408262543 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.408033867 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408759067 seconds)
  done (took 37.953808596 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.422008102 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.684585656 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.862024178 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428180108 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.421249009 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.426718847 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.508866988 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.422657045 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424610094 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424369413 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.585380946 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423666431 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458372031 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.8890858 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425035478 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423023043 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421557764 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42262981 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.691549345 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430748235 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531698889 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.423900186 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509658339 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432766007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.444350585 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422317304 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.427210699 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.964559192 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426528655 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.589084351 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.328006134 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510364868 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.905980955 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.880267308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.330245265 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.426172374 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422740566 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.59018422 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426687418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.422791612 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.510518982 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425637242 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873393667 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.078260014 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44238171 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423556489 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.977698448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.592719122 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.700010542 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432631539 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902616581 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429516617 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.423840382 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.425748541 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.69839271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43088764 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.424194 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.987436804 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449036811 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512266633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426257032 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424509441 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.701071182 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.425122487 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.688437895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425929073 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431769371 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.425286818 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.874491251 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426577786 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.103042515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.445354682 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422143876 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.587358051 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.693524242 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.014512657 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.430204548 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.706506229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914517116 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.510932336 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.431589555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.94332097 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.518021872 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.431634468 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426627411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425916599 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.424745225 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471050356 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.511552498 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.024545332 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099118773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.007922198 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.533873084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441178063 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.427678023 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985340165 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446309409 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426297157 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.878141862 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106605707 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447247005 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433630839 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.08878711 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.448439902 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.514206882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.432948381 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.881817887 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.427712866 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.472961227 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.427542581 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433621474 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43128799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.514934286 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.431675637 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.426486192 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.070434917 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.615924745 seconds)
  done (took 187.642280199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.41958196 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.420778386 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.423670785 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.419474879 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.420817717 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425195019 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.420831572 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.420231264 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424393369 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.420435668 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.421234182 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.419992033 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.422082721 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.438765611 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.431758262 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427972373 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.082109389 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.420077305 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.422875195 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.422301148 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.24156943 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.424591449 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.421693931 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.421842569 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.423218123 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.421198314 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.429690079 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.445452932 seconds)
  done (took 154.708027392 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.427668006 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.050744861 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.430751183 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576161589 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451695956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425772292 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.573080639 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492963075 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.430903787 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426148928 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426337961 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763513306 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429842033 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99699133 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.645967381 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.577803776 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99924199 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.430663294 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427329778 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.429021806 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.581118213 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440845912 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.766681724 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.054181731 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.431090768 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088483595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420603721 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428467193 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.430315376 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083581202 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.429903368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764796138 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.516741482 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497750355 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059295635 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.010916953 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00225077 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591846852 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.429005406 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.428227892 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.42739589 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.418588629 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.058036988 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.431523977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.431357001 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.052148935 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449573139 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430565251 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.438396802 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.428837254 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.496933205 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.501186451 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.771609465 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065034353 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.518186262 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.453448364 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576169973 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.844911793 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.434374458 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.000034005 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418547685 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.065341646 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.434259409 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418699604 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430976008 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434507804 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.597107831 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.575591334 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.002855196 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43317541 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002797918 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.597746188 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.429496923 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.43037921 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432760089 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.061937882 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.025201703 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.600292914 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.57935672 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.651781908 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42248573 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431948163 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421644959 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.517982385 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.430861632 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.06606171 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.01315728 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.432520122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.433661278 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432944244 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434863456 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629467888 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066539577 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.520729541 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.0245146 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.790205457 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.771232627 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.434254898 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500189641 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.433846243 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.773999949 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.433791056 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.498964546 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.917094902 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.774815544 seconds)
  done (took 171.685186232 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707371227 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.682397284 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532097493 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.557960681 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.064138614 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.01319031 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.83268884 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.573366725 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553624838 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.6960961 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.671965278 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.521019389 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.621681039 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518990103 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.230604865 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510253667 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.535287722 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570002829 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.540419938 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.494475472 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.085257704 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.742203259 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.624654294 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.514431543 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.532600362 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.249468588 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.016638105 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.030324211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.621479766 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.808259574 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.019458146 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.587595837 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.439455586 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.166698655 seconds)
  done (took 69.225336815 seconds)
done (took 719.921623866 seconds)
SAVING RESULT...
DONE!
