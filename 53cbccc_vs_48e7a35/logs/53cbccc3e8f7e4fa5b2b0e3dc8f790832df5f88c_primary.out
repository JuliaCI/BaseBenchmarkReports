cset: moving following pidspec: 18643
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342772519 seconds)
loading group "string"... done (took 0.602830667 seconds)
loading group "linalg"... done (took 7.462551407 seconds)
loading group "parallel"... done (took 0.174927379 seconds)
loading group "find"... done (took 1.197164562 seconds)
loading group "tuple"... done (took 1.831181197 seconds)
loading group "dates"... done (took 1.249886385 seconds)
loading group "micro"... done (took 0.23380865 seconds)
loading group "io"... done (took 1.046847911 seconds)
loading group "scalar"... done (took 40.695789114 seconds)
loading group "sparse"... done (took 13.278526908 seconds)
loading group "broadcast"... done (took 1.023922391 seconds)
loading group "union"... done (took 13.917911551 seconds)
loading group "simd"... done (took 4.728467664 seconds)
loading group "random"... done (took 9.548513622 seconds)
loading group "problem"... done (took 2.012198286 seconds)
loading group "array"... done (took 22.685467996 seconds)
loading group "misc"... done (took 2.052563998 seconds)
loading group "sort"... done (took 3.448668625 seconds)
loading group "collection"... done (took 19.461003194 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.565299821 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146742921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121004462 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143906849 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192616741 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135445966 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147855738 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087115915 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986857703 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164872744 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144323467 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524479041 seconds)
done (took 5.198112601 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.207794362 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089490329 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099847198 seconds)
  done (took 0.975725244 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066973134 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130647592 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082535303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068685493 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068096434 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083151022 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067908777 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066964041 seconds)
  done (took 1.361238186 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075893683 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070080834 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087123297 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06884997 seconds)
  done (took 1.091607566 seconds)
done (took 4.495421297 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.946440637 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.25615663 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194390688 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471168142 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154059161 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192847727 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674899179 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356006655 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21814372 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104094466 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107835819 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395849778 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108753347 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68264303 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07787658 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109805904 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17425753 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439465775 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084220835 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084228489 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106253913 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143957809 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10409819 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078996473 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172076981 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071225879 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.156195841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.098911451 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069762012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250792045 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191998977 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.730041582 seconds)
  done (took 10.838347718 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100331353 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122988857 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070608596 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143423356 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122638046 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072588836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0727028 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086107833 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094470768 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164799318 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119919822 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126463134 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067639088 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071293274 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104491863 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231974273 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093418857 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103279569 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073976587 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0758335 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1263647 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100083263 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082592461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096512607 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154082324 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195783049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099464234 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114423354 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070893237 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101203398 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131670977 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133054305 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066026231 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085405454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160668676 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097329529 seconds)
  done (took 4.738493867 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119776053 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126700447 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.180071303 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094350165 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158512127 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087262035 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132150546 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068069689 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103394406 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257661161 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.093770358 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067120521 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08562269 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.475132211 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131567951 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10550869 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069864706 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08239142 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071369517 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068451569 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.632651967 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148148842 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104686721 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105234901 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091440796 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07259982 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360065448 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070127256 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06773823 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086390677 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060311383 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149433772 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069692355 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.275051453 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110293856 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070291757 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122473525 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183311203 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111880018 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126681671 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068381865 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066178253 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172343349 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093117042 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068103592 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107892513 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121216212 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106860866 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085217419 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069378249 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185083083 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068325784 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102627655 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950497946 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166521728 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078827982 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067603834 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297919468 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108063369 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068730743 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06506278 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270395905 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162289821 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06885786 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086152564 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067894214 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086395399 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.742721216 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069170619 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.87184256 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073577837 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077634877 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087045453 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068394457 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093096624 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074388086 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1040081 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068053292 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069256065 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086156977 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067514363 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08642214 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087471885 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212928376 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087021109 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068179558 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083342775 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08897782 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114320686 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072139451 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066171542 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119094078 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071197417 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087064377 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104694779 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087927818 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103358515 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072372942 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131642433 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068821396 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1657978 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068672343 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114159188 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074539424 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118056321 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103538737 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070082228 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15913407 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065970745 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084017605 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069324121 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08295273 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070358202 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069228216 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10084967 seconds)
  done (took 22.091873203 seconds)
done (took 39.57559181 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.31462072 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097734521 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096619935 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077711166 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098053289 seconds)
  done (took 1.553302502 seconds)
done (took 2.38684235 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152749353 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104692199 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083819373 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099719325 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083047489 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104705732 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120119613 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082898125 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121930042 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06518816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117962259 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06541356 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081909871 seconds)
  done (took 2.151348267 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084172146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086164089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088999359 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083225567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081699177 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083302882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080974855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108835003 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081010103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091358408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065711028 seconds)
  done (took 1.766694623 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083778397 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085356408 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088506666 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082346613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082269478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083402983 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081127849 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105396415 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081723919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091237637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066288152 seconds)
  done (took 1.763521749 seconds)
done (took 6.507402627 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081680327 seconds)
  done (took 0.908695804 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.758290917 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.970176314 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086324207 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137909194 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224780611 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159640886 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.462095401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114993933 seconds)
  done (took 10.953172978 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102567612 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090404178 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071360808 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088854959 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073223704 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103104294 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074302117 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072345795 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090615017 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073170644 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088053046 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074026431 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091766793 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071569159 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088609583 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075515204 seconds)
  done (took 2.221581856 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106541719 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105567683 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095693559 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077838704 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093264351 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07462092 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097225028 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077534206 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091263293 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074184803 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095713744 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077035187 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09212799 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067633371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094205149 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079155586 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091409152 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077812488 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095986963 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078706476 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096464151 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067041398 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092887371 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076789403 seconds)
  done (took 3.023074445 seconds)
done (took 17.936997979 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.138635034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080407549 seconds)
  done (took 1.052653416 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085825782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102079443 seconds)
  done (took 1.028276446 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087219425 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084802726 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092191178 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099218203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085198302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068684808 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.108101048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068509631 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085129194 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07008722 seconds)
  done (took 1.68917165 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07217907 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097934412 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074174331 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100772019 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076869575 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084123987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076027429 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088162196 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081793126 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08265039 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07361115 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102845798 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073069925 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104903679 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092129777 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072698357 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.09055726 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069835246 seconds)
  done (took 2.356239622 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068538627 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069250959 seconds)
  done (took 0.980010462 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069979929 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064795714 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086461695 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068697803 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083183795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064771861 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082772998 seconds)
  done (took 1.362694741 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419785772 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110962477 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272072781 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073896593 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109546634 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302057768 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068895041 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072802056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092189339 seconds)
  done (took 2.405294152 seconds)
done (took 11.710695347 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081980856 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087079201 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116223644 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.452331058 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111415998 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06780521 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14951571 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221838358 seconds)
done (took 2.127494402 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129216108 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638672154 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421479477 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219387486 seconds)
  done (took 2.12708282 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.395531336 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093570388 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076842806 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069776157 seconds)
  done (took 1.486190438 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068266055 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071452148 seconds)
  done (took 0.989288505 seconds)
done (took 5.576999753 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069165856 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068188107 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118536569 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06456322 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085409034 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068652611 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064761962 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08552913 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067844476 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086068851 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068521742 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068104043 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085320283 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068629752 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065187205 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082871362 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068576723 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06464942 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083853848 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066066824 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084672804 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067446426 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065025084 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085120751 seconds)
  done (took 2.688221326 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088790648 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085769611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075540073 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090960327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074131983 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091774055 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077353653 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068131107 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091832317 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070412624 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090020639 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072629317 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088434365 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07316667 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088615708 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074129741 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091532794 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069379751 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069449265 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091821614 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072697541 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087100322 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072112265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091217801 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072860634 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090501646 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070595171 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086978968 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074114551 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090669352 seconds)
  done (took 3.283225343 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073895996 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064901078 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084404064 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073691854 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065047556 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085515354 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065765514 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08431266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068219335 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065399244 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08522772 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066658651 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064790804 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085215768 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066734972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086509361 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084160047 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065434746 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084229443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066407642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085926414 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066860304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065343712 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083586582 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066450988 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06499488 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084265474 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066032754 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082843427 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066377883 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068206898 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087125347 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065495849 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071391728 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087122176 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065586455 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068633591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084341806 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066243711 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082488077 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066207532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065283887 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083266259 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072491917 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064760234 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08649605 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066370648 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085067582 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066563821 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067857938 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083208797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065378706 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085294278 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06772709 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069377706 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083305489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066920719 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064452212 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084772623 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064875517 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082884322 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066573706 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068073625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084011989 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081459276 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089414683 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066724171 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06766182 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084861171 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068732579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066987988 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099025856 seconds)
  done (took 6.205508893 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123454922 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095880945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086903768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068224356 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08241913 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069206078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069054915 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085338951 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069048647 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091069546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066858489 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084827449 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06888338 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079822662 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084867529 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068338819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090574414 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064541468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065381875 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087519084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067208708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088263454 seconds)
  done (took 2.615253922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196557459 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090347848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113665796 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095655686 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088075855 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076742181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090068007 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074009122 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072022849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089006848 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069691722 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091165048 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07025006 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088921051 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071262918 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089322339 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073430792 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088945626 seconds)
  done (took 2.48718008 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081812159 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067666496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.11093878 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06843205 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087914847 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071284038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093129452 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077344556 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089826378 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069758404 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095959995 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.18082439 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088579459 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070086061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088043901 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070351376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070513188 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087197167 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077812996 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092587693 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074046935 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096514085 seconds)
  done (took 2.77003766 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085040853 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069481452 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107001318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088679717 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065347832 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066622447 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093826923 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069117624 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092582113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070921416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085690578 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070110733 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074061654 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087582541 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073090688 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087510531 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071159519 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08666175 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07203334 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063991933 seconds)
  done (took 2.440920828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091641965 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088269434 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070627292 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097032378 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07155576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08847053 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07982834 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087871158 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071225559 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112587802 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070726418 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088124523 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079758222 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094082439 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069921145 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096698922 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077803627 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097520196 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087490954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071319994 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11302226 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071343749 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096185565 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070641515 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087931869 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07176829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087366944 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076512846 seconds)
  done (took 3.232363705 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069938577 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068481397 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084708232 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067372051 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065528589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08487192 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066446908 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065657841 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088124119 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066291751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085303091 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069542646 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068400936 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086484773 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06934495 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067931447 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08646182 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066490052 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065006667 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084957305 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068591304 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085296453 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069687473 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0658694 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08370057 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068928346 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065512685 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083629071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069034801 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065593583 seconds)
  done (took 3.069924311 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080209427 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093859288 seconds)
  done (took 1.041709308 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067479128 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082407097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085040614 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072497853 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091451701 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06926532 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094872979 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074330976 seconds)
  done (took 1.502126867 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086195462 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079515937 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089098257 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098232986 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081067496 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085403179 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163463208 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088900625 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074875412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085767252 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083636794 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085781214 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075938726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069009162 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093206535 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075120862 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08380641 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07577458 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070592714 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086362988 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070479502 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099437406 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071805226 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084088314 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071365765 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077162621 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100545034 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069238826 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092399888 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07662985 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092963441 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063466749 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067909356 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088943489 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066479826 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09844863 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085882073 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091588379 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078354333 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088226289 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080343618 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082625028 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074240839 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092433706 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079955626 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069284599 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088960901 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064173605 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084275803 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072556891 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06454392 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087648856 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064525284 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093953372 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072901469 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080052345 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086601351 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071038269 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090702885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073325771 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093939009 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072784343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071376603 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087313169 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075946138 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091696821 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07956753 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081980793 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064283166 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067347501 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098564448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092529944 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094557217 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069956807 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088860873 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067753636 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07219312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089456467 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075241795 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094709305 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06998157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094035958 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07780531 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087788707 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072539839 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094351182 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069007373 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070769997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085569953 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086790103 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08730295 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06805379 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066200676 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099962146 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072655293 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087476174 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067551959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094467044 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064000645 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070374169 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089333732 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07087575 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099393466 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074555062 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0935336 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07842119 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095636306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070014512 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090606396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06706463 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070102405 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087500937 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077768641 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081035666 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072849199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069487682 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089032123 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077856089 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085667164 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070004746 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094701737 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075765449 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067627617 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084626854 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072282639 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087218881 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073305372 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094546355 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068832265 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0636823 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082686168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073563041 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069017295 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09200068 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07413451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092491787 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064084936 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085386163 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074649684 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097779076 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070452514 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06970764 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094802529 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070071335 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087085886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075833959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089850113 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070087012 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074371951 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089590892 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064798083 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091079795 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07314716 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06743653 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092129071 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072353222 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090453276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071190903 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085983689 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075660966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069420037 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08752287 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069522865 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086505843 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08087103 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089188454 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065558287 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066530493 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095827101 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06669013 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086936734 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069810365 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071795164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089363952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067171623 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086980948 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071982761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099970292 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075251182 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070040084 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094269076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080254826 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088676497 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072307261 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087837206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070869006 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069606847 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098730497 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074450843 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094024002 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072454024 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084573809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076125923 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095385995 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069805365 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066997717 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088014271 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073763053 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093487107 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073845843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088270232 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068472958 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070125409 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092342259 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072652402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087302958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069237039 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07298104 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08814854 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075932442 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089975214 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080022065 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092915537 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064935127 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090927219 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06860318 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075517373 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084327906 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06685592 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086299689 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071868763 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067709498 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091280448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064192052 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095306584 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078455434 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069329269 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087865406 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069897417 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095193612 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071901448 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091361485 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074214112 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075573324 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099661793 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068808081 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091411806 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081023299 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087902545 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064854788 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074467924 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087313067 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068454636 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086758963 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06819475 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071835734 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098197705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076553061 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08336739 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071934941 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085384664 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069525212 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065233831 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093538495 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072111823 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08853895 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078073175 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069917396 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089850736 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073583861 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088867307 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070676308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088648665 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073584144 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06989467 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091545337 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068554624 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090855606 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069062064 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066405178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090345272 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069620977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087768859 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07617353 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068568987 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089332868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072140608 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090079355 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070807596 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088027418 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070236977 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072523959 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089324581 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070234826 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089513691 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065791428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076651247 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088633301 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0775242 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088408651 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06747688 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073761608 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091669431 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074887249 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089881809 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070634153 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089229583 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070749679 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072231484 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096287765 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06691406 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100349753 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078894642 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089084699 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072395882 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069170744 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090596067 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068357971 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088975238 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070875535 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069049514 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089596206 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07355245 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091845161 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07009299 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089360771 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071986107 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069155922 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090390424 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064632976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086757093 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070255818 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069186728 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09981032 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070100979 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088176483 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069180064 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06984035 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08840244 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066007669 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096706636 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078565386 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090273334 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077287121 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08756853 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072206354 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09847821 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067399947 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067746255 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086332685 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06807684 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095285443 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0719315 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078624441 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088808738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06959549 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084924316 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071908144 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068099273 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.083976437 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06745226 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092163414 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069782971 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068006395 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089771124 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073445932 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089520952 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081241306 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087471366 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071306355 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069648831 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08558822 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068968508 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067697119 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092590434 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069707293 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086969415 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068487659 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068339317 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089498822 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070595278 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087815954 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071874045 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075627286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090211104 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071755316 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093337901 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064945481 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091515506 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070852486 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068460922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088612926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073354366 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091932128 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071908939 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097112265 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071275109 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069465998 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089615259 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068010002 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087865007 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070377039 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069350265 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088910354 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07102981 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097196215 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067725991 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072266828 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090432826 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069657997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096484387 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070718288 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091151781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077653272 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068605877 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091078118 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077325569 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093238525 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074071767 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089294955 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071842696 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094165441 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070210905 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075849327 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089082851 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070430563 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0901963 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068485612 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068437547 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089153894 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069332981 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094697602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07160827 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067996052 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088992343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067452495 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089475526 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074155031 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09509726 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073216534 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072512309 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084457232 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066932721 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08965223 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069672086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071743164 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092895246 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076314705 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090959217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071594233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068456552 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099814339 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075809689 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092841958 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06770876 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091853878 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071721126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071494502 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090554677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069938508 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090618489 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075226169 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070893898 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088845329 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077497625 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092440441 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071397519 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089594643 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072410607 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068853035 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08535892 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070893007 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090086147 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076276641 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071608908 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090632286 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079942068 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086267055 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069947067 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091281454 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070285833 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073488938 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084462954 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071299478 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089391652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071641677 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063899849 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088945741 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067289848 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090961151 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06974639 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064295885 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100597993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077847757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092350829 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067923909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086431089 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065911904 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06373951 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088537648 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070854541 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089702865 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081089108 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067656547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088224679 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064363006 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089325882 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073619156 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071804231 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086735193 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064735779 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087793662 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073590406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073663281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088450392 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069430182 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092862576 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072834921 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066416845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09340857 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065131151 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092680141 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083530768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090100736 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070405651 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094790101 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078175407 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069426415 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085116224 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07008401 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092293833 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070627132 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088758923 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071710182 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103997991 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073204821 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06770595 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088742753 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072090163 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087967764 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079359709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069820827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09028737 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073885507 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091157587 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078904283 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092135083 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078197085 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092319996 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073613855 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068093926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089770249 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068133381 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087448574 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071467329 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069134857 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094660739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077026962 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08921915 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080783027 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09968445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071664436 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084951404 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069569418 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068217594 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08495945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070605471 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086114842 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06912548 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066940096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088478743 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071152997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093897313 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071401112 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06920251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089086893 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063975578 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070424386 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092516205 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069704624 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08619765 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070196946 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088875731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074296979 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072723629 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087398432 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071485602 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090692813 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071455596 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065008443 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096289119 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068712458 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09067026 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069519741 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069210114 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090975836 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072984067 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095026855 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070198229 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091143142 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079245642 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071257966 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087907152 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066849977 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095535984 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067913862 seconds)
  done (took 48.385959077 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111679286 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087597315 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06412484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08499438 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078492517 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086374701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065055679 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065275912 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086024095 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068439069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085196121 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065439414 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093867217 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089215452 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098416366 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088637867 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065656967 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065250426 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085233512 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06578668 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093960108 seconds)
  done (took 2.608928078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09080735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105395047 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079906105 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105060505 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09426267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081404604 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099775128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080712194 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103636132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095370364 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084749211 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100880093 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075780155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.097246098 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074930791 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098835942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102465816 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075313781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101399269 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07985405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098498595 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09871362 seconds)
  done (took 2.934293544 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070576319 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067695468 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090659721 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064801217 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067914207 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084795538 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072273638 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086156548 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072927184 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066680053 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088409225 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067610459 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098337927 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068501334 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068550915 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086549739 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136780053 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07246649 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088653806 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070836781 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0640152 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091850943 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065000339 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083814147 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06852431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071882978 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090302643 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067849045 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08721318 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068841075 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068554308 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086295235 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070462002 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068339622 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087739582 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066948519 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087851543 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069462339 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063539397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087274219 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069926903 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083371307 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070463012 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069420342 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087176484 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066577782 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069249961 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089454916 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063503294 seconds)
  done (took 4.687629928 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088993697 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145629111 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092068553 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126109161 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084659333 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098667055 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072593985 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128049653 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086427449 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068710424 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106338409 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084448285 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090418935 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073866884 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096159898 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06918999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090079941 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068649935 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093773682 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06918657 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093177085 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07598683 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104441935 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.102065662 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074142764 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0675981 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089435835 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072894774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103238481 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093397917 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074573975 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094320424 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085756416 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091682568 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069021765 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091285454 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086846937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089926653 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071883533 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086903752 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0719461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093750562 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077002988 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106119192 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069295361 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095555656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068989224 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08613242 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083635959 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09154408 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077035139 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105829415 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072614018 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089868936 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072989678 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105801402 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088545094 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068655603 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071195214 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103463302 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085205305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074071074 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103887878 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071336929 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096470915 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084382841 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095103045 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072929893 seconds)
  done (took 6.982298162 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079392435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094547324 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084716604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105258657 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095312728 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076223515 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094778976 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075733957 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095498122 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080657891 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096032716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119239729 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071262143 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099024161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075758297 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096576669 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074216843 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097157723 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094204123 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076841754 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095869927 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084258728 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096329127 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10380183 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106423346 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091370638 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075078081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096241897 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104386708 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07635349 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107962544 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074118397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096112274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103750469 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087505856 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096675699 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067522844 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096038177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074883954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096505313 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069796034 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10548663 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09599361 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071997505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095513696 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075388758 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1056091 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107682723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079053442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100896285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075150833 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105569327 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094452826 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07551721 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10471588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130046168 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083555421 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105110922 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095480422 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085105515 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104570068 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111852314 seconds)
  done (took 6.616021963 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092169426 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0997096 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100418287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066025811 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066109245 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094752925 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066870326 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086999981 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07857384 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09897997 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080898226 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093966954 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075989817 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101793092 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092661332 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076796231 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093871339 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072658439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099603106 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072404332 seconds)
  done (took 2.6331256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078708481 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106954804 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071024765 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095442445 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073239379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074447323 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093330074 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071274572 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090646675 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072493724 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100813581 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079903157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091052182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075128519 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101556584 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074240566 seconds)
  done (took 2.276123103 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082299229 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101298286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084524934 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091078892 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066859229 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086515499 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069677894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064765062 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087300768 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083489163 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091763628 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071577428 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091091152 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06805508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065149762 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093601599 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064942152 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088113001 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068391215 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105313207 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080773004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088737399 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069659309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091253631 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070234863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095060074 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070607648 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065782831 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088947904 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070149594 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090725963 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078265694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086917472 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06885535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086798197 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068037815 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06860662 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090633516 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072258906 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090168877 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06862187 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089079397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070003432 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068849684 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08588943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069660551 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085946416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076550679 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065465813 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091246579 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06872078 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092826554 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070381419 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100682648 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0723326 seconds)
  done (took 5.323843802 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083975579 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071062488 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086507837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06733707 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092903597 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071821301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071424414 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093121296 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070649022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087916189 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071461948 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091575149 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072450778 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071660833 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092268159 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071522034 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085405882 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071245419 seconds)
  done (took 2.355798645 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076631737 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068784347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097858001 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068637577 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089310244 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072576012 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064664388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089380132 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06847801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089686232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070086161 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070212864 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088484934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071119296 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089171618 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069466627 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070612237 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0884892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069670672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085577206 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072717603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067057159 seconds)
  done (took 2.631881564 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075803759 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095311449 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16977532 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112622092 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084346054 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104489419 seconds)
  done (took 1.576863315 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094276944 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104426189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070792105 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111084993 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078512978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09086403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071928477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09122181 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081155335 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105749414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070152176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101480542 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101275801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08283323 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099070847 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076578659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092661224 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06971066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09172352 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111406664 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072624282 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100133162 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071676578 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092298232 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071185725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100946848 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100649679 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086013979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091917938 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080304293 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098595492 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070176674 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102117692 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105639527 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073286744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101363579 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07177426 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110821992 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096751325 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080874211 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093082531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077861888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101530359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075238084 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101752459 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091617563 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078030517 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092457768 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071516806 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11773711 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097899343 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080764674 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09907082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080660563 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101836492 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117966036 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104941213 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07979742 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098888651 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105575396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080590214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098895896 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078956709 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107205674 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098521363 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079542827 seconds)
  done (took 6.922255371 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086686061 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109693296 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071837122 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106444438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100260144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07258224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091591833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072207505 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091277827 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07146692 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13427267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070955484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101517387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101029479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072366255 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092435063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071642511 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101122128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07034191 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119399348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092979692 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079098884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102131011 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100665369 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085887335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098469986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070376128 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093216533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070424687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092672784 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097103952 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073403425 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101014684 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070991175 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101156137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07125605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092602311 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076816111 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092831863 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096918231 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081413045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112114426 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070831092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093481947 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106436294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072986843 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09193436 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072195725 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092298837 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071954271 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106360956 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08597073 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107526977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10131087 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07092595 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09326544 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071488185 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093078057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071183869 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098938149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100301347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072222227 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118401261 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070715111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093563889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101082779 seconds)
  done (took 6.831516126 seconds)
done (took 134.949588387 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220601474 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203446977 seconds)
  done (took 1.357421284 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072716563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120511616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082042183 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130859737 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091342075 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10311287 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122241848 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083591167 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068913884 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091515665 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069587074 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091772101 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135237887 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068870545 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091605333 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07175859 seconds)
  done (took 2.439028562 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106674195 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203271046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115277515 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066912234 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103887318 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080787111 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089854217 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080623366 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096626379 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068958652 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10121888 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078975609 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067290931 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10032299 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095027649 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081530918 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06749163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102464647 seconds)
  done (took 2.650879891 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110845321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158526782 seconds)
  done (took 1.211980703 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.210818628 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128472948 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.214017712 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.443422693 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.220906003 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.301848291 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182442111 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.184494526 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167465419 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17652717 seconds)
  done (took 3.172547468 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103044983 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178349745 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325954112 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143841718 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090765087 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120459056 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145383474 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114027865 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086297913 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106657228 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105491965 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081379877 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122868913 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077495794 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100116211 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080634865 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127373452 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075367499 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101590381 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077516846 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123855782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068204095 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099408379 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076653806 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.104342777 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081722912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09038108 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069214477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099901609 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077886803 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103296179 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118443038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08403017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136853263 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107553178 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13792209 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100664362 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076988968 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076883166 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097945096 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078844134 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101695172 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108545746 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080914167 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06731725 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103010798 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068609258 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090131223 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082560798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102792259 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081948153 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1032619 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136117841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102566661 seconds)
  done (took 6.548018461 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.774410182 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139089714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075025697 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.841701834 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120651943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085627452 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.762259341 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098912116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240781216 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768543875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116625659 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079662941 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212763647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218564754 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911384901 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292078904 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.654590412 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109451267 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112414939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13892255 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168062678 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163833268 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153560091 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413005925 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100461139 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07413495 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141562556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103180581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146279578 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108350557 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077073567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161793462 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252499823 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166360154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077203139 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09540424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072952826 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153887991 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248356227 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198422983 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163822651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0715055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072411599 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168623926 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136613829 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071025531 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146062186 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157678155 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177060829 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077010577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101742708 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149826343 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146526739 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148538571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10612873 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299582756 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276596695 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095414534 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126401011 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087482156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244924106 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106284477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187800959 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145424809 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197243106 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073438715 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763106399 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154337499 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072228535 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101787456 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125677819 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077193942 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167114377 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.127797253 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39067866 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171363474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07793397 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07240606 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212408489 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086155417 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095262299 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14618539 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077327697 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127838392 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173498582 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152538755 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153393909 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212244388 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.173097006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146745423 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077038989 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130551733 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100366194 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19566992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201332697 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.147469057 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194314839 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146284628 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146986904 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173345377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081670341 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155930769 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126839398 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10849834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147334778 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200475933 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127927772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085976959 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099253963 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146490099 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132355502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088448871 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16913701 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156296267 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43878539 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153718994 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.093637785 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089523023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167073393 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147404004 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07895548 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246502099 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129081836 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.155233178 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127684643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069877939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126597342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147153817 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105738709 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12852249 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146487983 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10229207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.22068199 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178306741 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106359098 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201898839 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.168799887 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101694718 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156345836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125891772 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152928531 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10258676 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146355992 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077753784 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75669603 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149818873 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127980235 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099168984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148692834 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095435796 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085767295 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108977542 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069739694 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786585059 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110863042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083507706 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109317863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078330916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128252622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143087187 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099442473 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146712216 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213422364 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079974455 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125751901 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109213765 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.146020701 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100280889 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08837437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108389375 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086751752 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129128883 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098657794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085655539 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17505108 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149030078 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179525505 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579316736 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07345625 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109064112 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211425865 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07401487 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270857131 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144673848 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.21001722 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.149752177 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082783667 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303981734 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150774501 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170133464 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110750926 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15829861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070401648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165215654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150420213 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073258917 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10048246 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147804554 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.153353805 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150576051 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95319295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093538453 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212074729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070973181 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.156742004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101362844 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081254923 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.271509718 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073109789 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.176067325 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.150102445 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07622116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109888811 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.836510422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110147785 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145372785 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101031705 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182410554 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171297042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145302406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144727055 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079448829 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170795062 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192781349 seconds)
  done (took 42.134522534 seconds)
done (took 60.447113973 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291128085 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20023749 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26333471 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153977483 seconds)
  done (took 1.953888143 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152951042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109492976 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125030616 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090081498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108379205 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091678117 seconds)
  done (took 1.644726427 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.442941458 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284806729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245932326 seconds)
  done (took 1.941765783 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.311755808 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239042964 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477656895 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.314234539 seconds)
  done (took 2.420596001 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200825243 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120691968 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094013183 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089020299 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167904083 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274985056 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131744854 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197579466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08153559 seconds)
  done (took 2.373765862 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.209242304 seconds)
done (took 11.508045804 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.357759444 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.300682144 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119106911 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116332112 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.189897013 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.17342595 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.323286314 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.282693224 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076265696 seconds)
    (10/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.192054191 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085788072 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.271629673 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105146146 seconds)
    (14/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.176645407 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.277858189 seconds)
    (16/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.243756726 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10305951 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.201785831 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105272344 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.171602214 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126571279 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.25377198 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169469304 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158391812 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.261475513 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.235969159 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.267871773 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.13088163 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.250223304 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.115464222 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150055244 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.288017875 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077663055 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.176077125 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.202696413 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217136269 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.103931555 seconds)
    (38/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.15343189 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.11543558 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100560141 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.169645527 seconds)
    (42/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.114811159 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070282457 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.26419612 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.179599738 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066058332 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.102348935 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05604272 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097858386 seconds)
    (50/309) benchmarking ("sort", Int8, false)...
    done (took 0.181366181 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.261548066 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161390889 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091780591 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241620253 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141359236 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076430061 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.246310146 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120846297 seconds)
    (59/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104105865 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.100225686 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.241601098 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.078927453 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100004118 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.256260319 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142310638 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.222529977 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094835561 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.226695401 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12823787 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140645502 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198875254 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099819872 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.170327608 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.163129342 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071627752 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080987047 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.13540913 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054527908 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.104701432 seconds)
    (80/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085692349 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.179738366 seconds)
    (82/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136425435 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.070977034 seconds)
    (84/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055143403 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078077274 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057049181 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094466338 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.079433491 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076171692 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083676579 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124541068 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096389208 seconds)
    (93/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074292781 seconds)
    (94/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077195179 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.118106555 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080720772 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121849953 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07889406 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054803902 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112732136 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.258131142 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096518833 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098619424 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09942238 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163986761 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116408339 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151051045 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127654825 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177338632 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094042938 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09158793 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096548095 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082613133 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092674491 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055068083 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082341207 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094945223 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075498293 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.102402257 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056362425 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.163893213 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077624683 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.133056078 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077467927 seconds)
    (125/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109080958 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114566462 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074396996 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077580461 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.223767003 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100757848 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079487797 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129756599 seconds)
    (133/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107092679 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127000252 seconds)
    (135/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063838735 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099802968 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092859911 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.408295431 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055747881 seconds)
    (140/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080061344 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057907051 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108912667 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071199915 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095062551 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11917383 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067651896 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101446552 seconds)
    (148/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083502698 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102863251 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185005734 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150646354 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05358228 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093100705 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078158348 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053325878 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093897711 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092792376 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105297041 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068949208 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094376931 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055002088 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09047168 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101639007 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072941975 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053292178 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083903975 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09984102 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078558867 seconds)
    (169/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057498048 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079692983 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079289574 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.22442633 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.258191821 seconds)
    (174/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.128566707 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080630044 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054395805 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093488005 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075667941 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076871908 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122265215 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076443523 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079498879 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069194103 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064295201 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10308451 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079296818 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077169502 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071447938 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068827114 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.274359029 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054565838 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094194992 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082376373 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091873359 seconds)
    (195/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055319668 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076085359 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119047452 seconds)
    (198/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077820475 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080874043 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070828459 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11422736 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080014236 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076692987 seconds)
    (204/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.088405001 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093872816 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074826843 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099890214 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071643346 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150608141 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077917462 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098383923 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055149818 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094737756 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099267019 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054689891 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074637903 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098670634 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161081041 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071912966 seconds)
    (220/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075131326 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092771763 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077552083 seconds)
    (223/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076088349 seconds)
    (224/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079361012 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06974229 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142246866 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118180846 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.170055276 seconds)
    (229/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072643467 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103302222 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054420212 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082534351 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094066135 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054483768 seconds)
    (235/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054561991 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.10175208 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.208652913 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056446729 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054379571 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092245634 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066952816 seconds)
    (242/309) benchmarking ("sort", Float64, false)...
    done (took 0.130445277 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.101210962 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068680831 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093114121 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05627903 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053783221 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.101257171 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069491918 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142649865 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122624028 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094059073 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076401688 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054994152 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078379229 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080384697 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06850717 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078364701 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069067025 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099647493 seconds)
    (261/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073390197 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056166175 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092382299 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174758709 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097108716 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070862252 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056659352 seconds)
    (268/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093014014 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07594047 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099228176 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076466818 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068276673 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093077225 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06967118 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075863087 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094662886 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152070554 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093359763 seconds)
    (279/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079465792 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091721456 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145773138 seconds)
    (282/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097433505 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 0.13342945 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078740513 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070159098 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076191949 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079200892 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070184699 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118827541 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077310992 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074646328 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119728345 seconds)
    (293/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064844918 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117359402 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066776768 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055558951 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092564428 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135812736 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100623667 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071235982 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074174408 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07849403 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.224326613 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080806469 seconds)
    (305/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076372343 seconds)
    (306/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063512407 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081657841 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08376095 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054055286 seconds)
  done (took 36.532622792 seconds)
done (took 37.50162753 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085839178 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119958238 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079058884 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.12081733 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085507505 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10657558 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076992665 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106308855 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085597246 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109686496 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084383147 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057022878 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103199922 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078568566 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102771479 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097239814 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107147817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076833786 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100760547 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068977485 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076139601 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092960966 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070813828 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057092916 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106112561 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075930567 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100320748 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079561938 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067858779 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094062089 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071708304 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100210105 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070073142 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082060585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099912518 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077614864 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103146881 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080573397 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069911342 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09396212 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077110591 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092542941 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077448134 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076145322 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099515628 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074836488 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099999005 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085121209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121019512 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071819808 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076470197 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105870633 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080724853 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100371571 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073621595 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101161257 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075695449 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096720901 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102607152 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07104499 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101628924 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078631378 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073326109 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102446021 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076779012 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103256409 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080239095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098831974 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079244076 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073619865 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093166349 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077818489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095974454 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070347748 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078959234 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104173495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067977903 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073741053 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100384346 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075086749 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.09184665 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072158254 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070055993 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.10027549 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071763196 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056750094 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097453344 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075664917 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067337146 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102275365 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074163061 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099632089 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071777401 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102351283 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070497913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074318568 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094207221 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070048974 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0713519 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098510118 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069420943 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070564461 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102360426 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07092394 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09786386 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085027781 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067899572 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099607111 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067909875 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090855931 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086865091 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077993586 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093995862 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071085831 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091947704 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077145946 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067307622 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09323898 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069864437 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069109298 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099713307 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069138754 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093357727 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077549914 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082394613 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095595331 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07268104 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070218611 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094217477 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074412376 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093412636 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07035542 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069851484 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090377495 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071673793 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068293735 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10113583 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070970247 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100811745 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072340234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076789522 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097895174 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076129752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073261149 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093057056 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061299366 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070329373 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095501158 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071346516 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091993093 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071846823 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068087544 seconds)
done (took 13.853308185 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071342428 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179467248 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.133280875 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10103346 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.117560308 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068600477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10653323 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.135059098 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071851409 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.134775199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09196883 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114571794 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144999123 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069706997 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068842137 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097438003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071808457 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117805826 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107429705 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115416303 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149890776 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069106066 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128051474 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093371356 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119222666 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124492813 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070087486 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096486438 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073984656 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131743205 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090778439 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072613968 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094205794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129929893 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101092327 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114900829 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069693601 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11277761 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070054806 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068446378 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.122081694 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129688478 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084535684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110961083 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072069831 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096516307 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070293288 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114688211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095267843 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11013781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116826717 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141951074 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072879534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.11112568 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068470035 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116627875 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087297106 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095753301 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07071955 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07096409 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094021796 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073333127 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117530012 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097770668 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09874774 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086056467 seconds)
  done (took 7.648757492 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090043104 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120581811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08951882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113351736 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069964099 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068998209 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095330844 seconds)
  done (took 1.682839882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07156022 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092068291 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119528596 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092795798 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11542349 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091011446 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105520976 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069999402 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111977162 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071610526 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116384515 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11125363 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096195067 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077705096 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119146401 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071060292 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094934961 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096376574 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073090486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119367657 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073090272 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115144041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072674722 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068868083 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110837275 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069975181 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145689026 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074766464 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096630476 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073591235 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067985462 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148611605 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110669371 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081076988 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095272832 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086483428 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10974435 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069753649 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087614247 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100756398 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085384752 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096217789 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072573979 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068505377 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100199731 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081656886 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094892889 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07267035 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072381383 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.117310941 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071622038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109418298 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071716586 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073812707 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097574189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076452303 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104492919 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072630013 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090644017 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097584187 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088237713 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113763505 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08513725 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113082975 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07337843 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109366496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086450409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072295894 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097546128 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074184159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112513272 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06939047 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071277776 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107735754 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072150986 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120042827 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095131328 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096574319 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08161077 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069692115 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096922248 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070700397 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118961247 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074523886 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069359578 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100319625 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073042059 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.09252624 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070658282 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073466558 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093677752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072625982 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072664156 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097007688 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073469829 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112576519 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071278215 seconds)
  done (took 9.781624504 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073265025 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070646936 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097628001 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072979944 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071085112 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097187112 seconds)
  done (took 1.52790968 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10405693 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098300427 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08592871 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100652367 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112409686 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111159816 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086984572 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112591774 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088256037 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109468069 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085878903 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112778908 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092098016 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103427069 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085797526 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.102650109 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086422525 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106471339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08309665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102514341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092541748 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102334544 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077257233 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112434413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074030911 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.10101806 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082428285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107505857 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084511672 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111728456 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077482182 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073673574 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101668377 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111035745 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088133325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099455653 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078240184 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07398889 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107548089 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073804304 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112303161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077037444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108429698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075184195 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113446826 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075532718 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100474992 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081670488 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111157709 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075267346 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100358301 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077044281 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097912952 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077284112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075169092 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112799608 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098500614 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088960761 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076671086 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102102789 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073603623 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099362985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086374761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099700971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08445184 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100752637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075510426 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102528338 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077548195 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100992331 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076349344 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072753559 seconds)
  done (took 7.734516589 seconds)
done (took 29.399554366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673036455 seconds)
  done (took 1.712068641 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.830098312 seconds)
  done (took 1.869990662 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.091646631 seconds)
  done (took 18.13882461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.680013462 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.837006119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.838396025 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164492988 seconds)
  done (took 3.560578169 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.928642855 seconds)
  done (took 1.988510204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250784558 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26084062 seconds)
  done (took 1.55732847 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784788678 seconds)
  done (took 1.835431737 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.332678358 seconds)
  done (took 2.37977888 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.3502671 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190992234 seconds)
  done (took 1.599516271 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.541216977 seconds)
  done (took 1.598837357 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.875842763 seconds)
  done (took 7.938349581 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239955607 seconds)
  done (took 1.306153416 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.279752195 seconds)
  done (took 1.336227086 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.528186456 seconds)
  done (took 4.586930078 seconds)
done (took 52.453888688 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083201697 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085034492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111319511 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081856105 seconds)
  done (took 1.415186853 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083322859 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07632665 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107406422 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076311926 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107860005 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077816191 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104576801 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082029824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100200315 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079648719 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07611881 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101599732 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080250442 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103394974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074859081 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079069906 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107160222 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07663868 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105387827 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077323264 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099189959 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080083671 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079349729 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101448572 seconds)
  done (took 3.204140463 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082877136 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075909848 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10403212 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076010125 seconds)
  done (took 1.404331984 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081683479 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120577521 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094483295 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105266675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099076175 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117184561 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074431255 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072559637 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100803144 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080331889 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.096246233 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104260034 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118451187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080279215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109123919 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070922597 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095556969 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093571121 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08068432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10758934 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073933853 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105380544 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072529815 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119215182 seconds)
  done (took 3.341539772 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082023768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131254952 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08455341 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118463437 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097811739 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068150528 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107222188 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095493891 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157984162 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068077195 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100228466 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068987589 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100933973 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069666998 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08052738 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140013235 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.14212686 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073719042 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127374438 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070427866 seconds)
  done (took 3.048601163 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080344692 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072416358 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094748628 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072557 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079176719 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102720056 seconds)
  done (took 1.573924718 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072729632 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070395616 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095786871 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071616027 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075143296 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096398223 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069847149 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070437946 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09677679 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070621205 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094753517 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070601152 seconds)
  done (took 2.0256761 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.475096072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073126094 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096942981 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070501839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074508345 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09541354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085229215 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070572276 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121597501 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069386396 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096838664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07252805 seconds)
  done (took 2.474491715 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276168439 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081230116 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.344499627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175905735 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144702701 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163763817 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108633123 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146314403 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208591393 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145103482 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237986817 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207164217 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141266174 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174702644 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120356502 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.139701716 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194041354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232705907 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137586412 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237101572 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19255708 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162883168 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217245339 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133765969 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116173113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178218631 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077345971 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083839535 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270235825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172426775 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184111467 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144533242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126900135 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244402788 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23199988 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179023755 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169836572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117207789 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164070776 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175747122 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274604303 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120002341 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205269992 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140830385 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112313165 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183349415 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153060322 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.155652367 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143492864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120670472 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183290137 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251759432 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19914332 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093636781 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144359047 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146706576 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150672265 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133804967 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258377113 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228736069 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168737039 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076499359 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128941241 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197099005 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168171296 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.17524813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164167352 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099205395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207070161 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197422443 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151126097 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211964394 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.16853829 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121623985 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155005815 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180953547 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189509891 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216740928 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161335612 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103664338 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159126597 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133676917 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086340443 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176788761 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079058692 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246309022 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131088638 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146816868 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144191631 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14189033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117260104 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230197731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214015306 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135342003 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070483043 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135617484 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15698751 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183443789 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119809935 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142643035 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155801559 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082131003 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201955654 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079931436 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159683053 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108751704 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159714158 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170341689 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105800785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160694959 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10757109 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.13453202 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198538836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204405479 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122276307 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08681007 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238168388 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162118792 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138397478 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210837602 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201814349 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133308982 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133312053 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186794327 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255661542 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121544519 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234814602 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110248496 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115347237 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118768885 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162531069 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147700233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156959181 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088316612 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160122096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239440773 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105701574 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100352007 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200173154 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08710916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113236228 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148518593 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131620537 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100986243 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133489171 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140643246 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176790084 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186213125 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114958038 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187105544 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106047716 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233025522 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12169567 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.136919595 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11027087 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101568782 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172443328 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230538555 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08437337 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238044975 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161888116 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137290525 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154958617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113396774 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180428225 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083329221 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102516377 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181195023 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145776508 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143504509 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1935633 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137465706 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163235329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183502478 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172875477 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168498564 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170567222 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140804211 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118786931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146838482 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163617798 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077734718 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127409101 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113679812 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135034737 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101273819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114810298 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181644083 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162378694 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12971091 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147610864 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129837499 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189363392 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107505784 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167781871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155603146 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127557244 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195891156 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228843224 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173386781 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133513923 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211707145 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077166363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077522319 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12249492 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163985987 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115095637 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087310211 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150824904 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217553961 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164927032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173664967 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14458843 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157667899 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226180434 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07436625 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151351122 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189403387 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187613406 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.139993229 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123092744 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104659202 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212805018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138481644 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262548491 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151848055 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160494309 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220394735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.115318879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111721032 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136713897 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176924801 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138717997 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219237693 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105945899 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122245363 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14433414 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111182644 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137592591 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164727463 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154862961 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173271489 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152967925 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196992327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082140548 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151687938 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159526576 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156082251 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095238501 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156178911 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234384167 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101294716 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153866141 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225064609 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110019473 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131308025 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250955381 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211761614 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115995778 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11534909 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181908078 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169493918 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155059779 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179480621 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144223188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171997584 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145431428 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115387223 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09377093 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131676246 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140362163 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126809311 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149705964 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152797253 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100440406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196296967 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146690522 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143174194 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1563031 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104389202 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123675905 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1036374 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248117638 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156789148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246966212 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13382502 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.218751829 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211558365 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107416027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083786734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113338178 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179533482 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115965203 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171442901 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.128436911 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110981737 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189851502 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184623507 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127049966 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073196798 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144506502 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171353316 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146144591 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132147258 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139746986 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208013669 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137141534 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111522896 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162730316 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108851299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13670829 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248794624 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.092262656 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103599481 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106606455 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086463444 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166560229 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22682885 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113914969 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.136951198 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155317545 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184769508 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170631707 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133120905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104005405 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14698285 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212560377 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167542186 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095149106 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148297623 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195539626 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199692412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140062967 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129762289 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241154097 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199499293 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.236879026 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120835174 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151869047 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151335454 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146390399 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183498476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11618743 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240045751 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088607487 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202959853 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137776118 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098673753 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192356968 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.103539422 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122083335 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189942388 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15441622 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115355485 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127951743 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150273583 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159016566 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136569797 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080071881 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177295862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104458502 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174056794 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239874234 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085069171 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140688805 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129586321 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113615864 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14108003 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110666069 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120137411 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150865147 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24567571 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098154254 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220976612 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179729929 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149857358 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205836343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135257673 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672104402 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083846145 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225950455 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155205254 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254415949 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132272121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155582963 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144909856 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159007828 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182168539 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14116944 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211903043 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16945058 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158092345 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112533774 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138914602 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146695817 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095125969 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142201379 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15038584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150771699 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134823436 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157079239 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192917327 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.088317165 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128478077 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201239175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154993015 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212474653 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179904866 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117854598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155763169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181976071 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113117057 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160222304 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227625597 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142738787 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132787742 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086770876 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141333512 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244436206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077639506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233744087 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161551682 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145239428 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149668363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15661888 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199788707 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14175171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163964319 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128195381 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149740532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152612628 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090433622 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.110921967 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140205171 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149841958 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105266108 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137377307 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153755543 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199087738 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103731059 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09991908 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138107075 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21182795 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254293519 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095564875 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115863436 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155503208 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149702871 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152821623 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162958649 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11327001 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088936852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115360593 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118570067 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147312198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153024246 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136952675 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14668059 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240493239 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090505818 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25877443 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128621902 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116589257 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.10216468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08483935 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130821661 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130010593 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138301695 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103162256 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244505769 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.13041605 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095326129 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127810634 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104289305 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088513215 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169077204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147156002 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158224472 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131336117 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093465976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11497652 seconds)
  done (took 75.19963491 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150852687 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125442993 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.142352426 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198702353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168608266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266653234 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204948676 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251756258 seconds)
  done (took 2.658476192 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074870507 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125744458 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105824327 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.123067004 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.097078572 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072517918 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.315529509 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115153566 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069773255 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123397328 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.125414201 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.099647923 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.495664985 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069349053 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099639362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.093440361 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072632397 seconds)
  done (took 3.419715471 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.458296562 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.681360785 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.46051687 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.104668147 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.017337981 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.116386451 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.63784315 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172803084 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098034838 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.447867794 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732788998 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165225745 seconds)
  done (took 18.238927251 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080315489 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073071995 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.116027643 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087614842 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103540928 seconds)
  done (took 1.604568454 seconds)
done (took 120.658480966 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085055646 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.387996163 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056421539 seconds)
  done (took 1.62584162 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088954994 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088979022 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.119014512 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087500671 seconds)
  done (took 1.53826764 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079857025 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079804493 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118025673 seconds)
  done (took 1.428819877 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.304945375 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175320817 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094029305 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087872834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081843767 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109552604 seconds)
  done (took 1.433803119 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077717472 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078913466 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105454289 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080477046 seconds)
  done (took 1.488748149 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082147416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055090507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057355376 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087066944 seconds)
  done (took 1.435083786 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095893926 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110887978 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085900505 seconds)
  done (took 1.443661032 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114406077 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11856768 seconds)
  done (took 1.387374304 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087021836 seconds)
  done (took 1.236292856 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099022486 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148089073 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16745092 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144705468 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176440796 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144853833 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11906515 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092520862 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.111123364 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.122289782 seconds)
  done (took 2.480880642 seconds)
done (took 17.296136921 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083685018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.399198779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365540554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1232796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675304814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38696693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985962588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124556056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112904983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100123599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088418065 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682417981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976157457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352774122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963519347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327438509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.684763026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072554465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097544791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073152317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968985027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09954536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071813934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098795742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655982948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374836446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10022086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32886364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098872138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074745435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358366518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100265038 seconds)
  done (took 16.153348949 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075814519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150705625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078915122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087213808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103363523 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072736044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104188881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073508437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155573662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071506701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117002333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071682517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103019089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074527763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09025349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10100164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072689448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099702413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073222725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071930772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118580323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071412119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099503636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074231055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07136946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11302622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07199278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.099099294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073426532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073435755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103006954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072439164 seconds)
  done (took 4.045579988 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12179987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159406751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078041082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135838836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145988779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075545718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177814236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098376927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159214902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072203583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117879102 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071588057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134787008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072923154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120210645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072261912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09954907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074291755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071887218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100718559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090864387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099624976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073298982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07179495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100719301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086123391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100449624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075403332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09806598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076061718 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075366529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100839974 seconds)
  done (took 4.373526322 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077165833 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078725783 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115183376 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087514007 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101084078 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076788668 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076224983 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10186787 seconds)
  done (took 1.874750168 seconds)
done (took 27.592217824 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084068351 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073565933 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1057718 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084696747 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103927169 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084512723 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070208246 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107386808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079258214 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103124117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080735888 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070529952 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.103293775 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071937105 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077623772 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100283916 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083914324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103548715 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084277206 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111696355 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074450009 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079061849 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106607889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084138038 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111746742 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084050316 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.111298786 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078053568 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072766476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103102814 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08071266 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118191504 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.0731571 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083208273 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101677609 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07167629 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09893243 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072294025 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083139828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107629617 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073574587 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107105324 seconds)
  done (took 4.91538 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094370887 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096128156 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.120024315 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065059278 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100700653 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065842034 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121484726 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064763334 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065406054 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.122108853 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059718549 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060710621 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090543125 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058763047 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06077383 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059207465 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092466623 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059966705 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060094638 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089878817 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064260843 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05685667 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091249889 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063743797 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058965171 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064695643 seconds)
  done (took 3.172525322 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080581261 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084840506 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120522857 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132076701 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140204257 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077993176 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111408823 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089184063 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116515991 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071143666 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10264315 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.10185293 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088448817 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107655065 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070972826 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11488984 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08700331 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071363002 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10731018 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091773243 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117213331 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081523296 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121315172 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08482614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069590593 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102689529 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075423394 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112872366 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077743906 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079857559 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.105465127 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073767958 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101879842 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083419862 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102975456 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074163846 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089868038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110114627 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080130108 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.100405573 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075760294 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071303177 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.130318855 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115757108 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101034291 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078009818 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.107827153 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081668273 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070470715 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119148545 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07961306 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099960156 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075025673 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070030453 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100553653 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085357211 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10129407 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075000117 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079933927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104390923 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084359582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10380626 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088350128 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069702885 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.108735431 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070201777 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100312339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071581263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093480018 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10189804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112379945 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102884422 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072329632 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108770881 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080016418 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077497855 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101245031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087225035 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11070446 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075925091 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079642346 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104667545 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074497891 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118684509 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074788731 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07205154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.102121944 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078738799 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101558731 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073124736 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084527788 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.10126715 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074179436 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.117452156 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071947798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071745704 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107719264 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076219281 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098503851 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085805195 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104247429 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073363864 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080106065 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100327329 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075550958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109395561 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07795639 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069671658 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105343627 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078098746 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099314547 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074283186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074261692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101912319 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082167054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076749852 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106028983 seconds)
  done (took 11.889503946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.205319007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196081858 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074477634 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.187943297 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110305766 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085063431 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.189098492 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102975761 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102371754 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072485962 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1014333 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112164748 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.135409632 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147913007 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085555509 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070851095 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.120786952 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143234309 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.191755962 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156115141 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.122268349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079128077 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.104020759 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073492175 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073886139 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111331739 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088571606 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.11194695 seconds)
  done (took 4.53335615 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087576287 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13247633 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078856407 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119650443 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097781943 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098929693 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078308451 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073243791 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113502497 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083767095 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100656895 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078582279 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105046535 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.082864446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071737818 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110565661 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081545574 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101245595 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07682664 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075305863 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107241695 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084863541 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104875371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071370606 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077402003 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100562568 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068873401 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11997888 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071488941 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123335681 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069358439 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107873585 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082576104 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072123548 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101355855 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074103345 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101924168 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075706852 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073313442 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098415243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071469898 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061291971 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100579679 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085644889 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106681955 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064523093 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076875978 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.107450712 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076934934 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.097265157 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075997062 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07479586 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103908531 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080159034 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076265037 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10620247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0755649 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098384257 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079542512 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073316034 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.096401344 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072221132 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075796926 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.100316974 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079876178 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105812626 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071967116 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07384824 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105822622 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078161089 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07317442 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.104090772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070132952 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.102540227 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077932227 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075687471 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.104986483 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070895418 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07061252 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.102054414 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059146057 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099344949 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059345224 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074922342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09874238 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071633296 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0732511 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109907481 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085738392 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.10297431 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078650907 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099859952 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072636351 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074918186 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094519793 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07576707 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085687957 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119719909 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071048382 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.099516716 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08558039 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.106078544 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071694925 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059331287 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108718488 seconds)
  done (took 10.362186436 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097923266 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124050849 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075704143 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085240989 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128295828 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096116186 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108347694 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078739315 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072527168 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119676434 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071917266 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109874927 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07691188 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079987427 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127034845 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079837721 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103420009 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081971899 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107872738 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.11010254 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084552271 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.116114492 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.08228148 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.102000164 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077619944 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083005331 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.130614304 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081639077 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111560599 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08603267 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110981209 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100639021 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086738202 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.106801919 seconds)
  done (took 4.479381627 seconds)
done (took 40.506354697 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.239965042 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.487825597 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.236504777 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.222119571 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.261994696 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.253583606 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.248655161 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.231514533 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.315636754 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.233251788 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.481632332 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.940512722 seconds)
done (took 59.330420905 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.297367081 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.375722884 seconds)
    (2/2) benchmarking "String"...
    done (took 1.508718493 seconds)
  done (took 4.068154563 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.618971284 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.238846165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.520953812 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.235397301 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.251271859 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.653744426 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.973641465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.135972869 seconds)
  done (took 28.184079286 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.235629288 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.631226269 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.84848085 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.855140865 seconds)
  done (took 18.746960417 seconds)
done (took 61.090691317 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.26846923 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.280692803 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.266158498 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.221276932 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.349932484 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.281817197 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.333484233 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.351873712 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.236486315 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.22839229 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.256381123 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.236644649 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.239338794 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.355890987 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.23916645 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.238170901 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270669579 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.869251866 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.639638012 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.238826168 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.260767616 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.27234093 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.242452255 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.252903957 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258658686 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.238472869 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.237274638 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.262309088 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.697714127 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.237711917 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.240731569 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.578405937 seconds)
  done (took 191.358021889 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.237272589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.046681906 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.2038891 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.295362262 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.583315795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.4387677 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.373557924 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.721857054 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.26015154 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.269633144 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.414159283 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.238622017 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.479246153 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.269923207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.246117421 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.251862547 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.454020891 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.523687785 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.256456737 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.509264323 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.24761587 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.280915801 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.217750046 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397347169 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.260455144 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.291030381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.25801833 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.238586054 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.428402233 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.382145307 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.245056382 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.245127307 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.856369773 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.098389855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.24511438 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.279207898 seconds)
  done (took 150.222307642 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.531880036 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.238825892 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.238879012 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.238996663 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239767996 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.270053937 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.238884728 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.793826285 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813812739 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.786319523 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.534997331 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.243104011 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.23914594 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.299339448 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490603418 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239121314 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33365314 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.239648639 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.250673874 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.239749328 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.253960338 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265824711 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242609436 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239919545 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813498279 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.254464938 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.22909525 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.248400769 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.240165679 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271963395 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.635270728 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239115374 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271332583 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561673753 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.288430667 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240805542 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.554589965 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.328288504 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349266943 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.242001395 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271867744 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.239141191 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.511268049 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240720753 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.241102511 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.242827036 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.841355927 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.240534223 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797370682 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240646568 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15974357 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.23975756 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241877081 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.562524459 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.713517806 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.243965859 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.241202187 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.242696522 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.240689305 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241543669 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.273973718 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.585990281 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.345247733 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.242177997 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.243998681 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272938373 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.241854767 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.620945073 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244115193 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.951775947 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.299417369 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.348419694 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819507672 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.244342336 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337192097 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361848716 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.242265761 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.242341597 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241586256 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.240735468 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.349485365 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.241883001 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.66924308 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249570921 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.244192018 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.30352785 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.337049969 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.243464502 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572194912 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.242725585 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.243458678 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969557814 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337433823 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.243889871 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.242191026 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.243275188 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.672732222 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.821889799 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.461406485 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.243849815 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.793340633 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.249267824 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.685803985 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.79372707 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.841592956 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.24323809 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352468056 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.24692263 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.245465179 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.244568203 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272854735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.24405414 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.303239186 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.244070824 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.640420665 seconds)
  done (took 350.653422422 seconds)
done (took 694.943591437 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.94364734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882393883 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.02410059 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.902641729 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.879653923 seconds)
  done (took 10.814361691 seconds)
done (took 11.998216245 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443653946 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.44302257 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308558425 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445748978 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273936055 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.461719608 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428142643 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.269542335 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.352128098 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.328079349 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.354343008 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296482447 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273278167 seconds)
  done (took 18.862275713 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.581932306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.566744503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311272776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565439263 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285937593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577916365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448430958 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.478719741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453492975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260721733 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256812904 seconds)
  done (took 16.972499047 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571235664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571294175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313933891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569631803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287985802 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578199758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.450371119 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.472275374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.442663289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260685064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256826758 seconds)
  done (took 16.959393761 seconds)
done (took 53.978113805 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.253408596 seconds)
  done (took 2.437137285 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.287829923 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.45680508 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.275177755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.258512411 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.254296487 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.254513258 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.258680381 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.254451165 seconds)
  done (took 11.485220595 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.250064398 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.250057757 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.249226676 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.249998648 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.250320204 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.253521241 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.252238901 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.252656066 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.252942818 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.252794554 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.25133138 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.253658346 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.25291735 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.251206323 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.250949823 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.253971443 seconds)
  done (took 21.213824285 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.25293714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.251196119 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.25056668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.25194425 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.251768335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.251518685 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.252045373 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.250422443 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25103405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.250567144 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.252282141 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.25106171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.25119263 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.25240189 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.25096748 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.251682434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.251817863 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.251934758 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.255004157 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.250831826 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.252961025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.25131011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.252410946 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.251993713 seconds)
  done (took 31.229529102 seconds)
done (took 67.550580441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.405627588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.941951922 seconds)
  done (took 9.533073486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.255565287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.253505463 seconds)
  done (took 3.69542092 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.254699766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.253831617 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.25410458 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.254101451 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.254556952 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.252984441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.254052517 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.254335135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.255053466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.254114639 seconds)
  done (took 13.72814238 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.254695697 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.255074163 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.251738505 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.254679373 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.255243832 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.252617201 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.254669375 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.254866602 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.254737777 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.251538111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.254840671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.252872358 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.255111454 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.252850467 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.255789686 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.252749861 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.252799259 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.252330814 seconds)
  done (took 23.75665594 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.255571468 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.255253455 seconds)
  done (took 3.698321292 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.253169896 seconds)
    (2/7) benchmarking "second"...
    done (took 1.252728343 seconds)
    (3/7) benchmarking "month"...
    done (took 1.253245545 seconds)
    (4/7) benchmarking "year"...
    done (took 1.252012228 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.252792233 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.253311149 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.253439269 seconds)
  done (took 9.959068628 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.256685523 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.4341998 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.516467387 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.869085884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.256467046 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.259700811 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.115340411 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.258917784 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.261945033 seconds)
  done (took 14.416787301 seconds)
done (took 79.976402616 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273468333 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.249309384 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.119726224 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.259695433 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.267781204 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.592804201 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.280104527 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.375534078 seconds)
done (took 37.610247072 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.258372949 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.965984359 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.970903365 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.250225791 seconds)
  done (took 11.37641644 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.236256746 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.239724312 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.243956517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.320068964 seconds)
  done (took 18.22977549 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.890642441 seconds)
    (2/2) benchmarking "read"...
    done (took 1.584402554 seconds)
  done (took 4.66443694 seconds)
done (took 41.718565973 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257435928 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.257773554 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.254983815 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.254717284 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.255097832 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.257692485 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.254951793 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.255141193 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.258336644 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.258135684 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.25816079 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.257951632 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.258424707 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259244951 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255626382 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25588316 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258191545 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.256537641 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255485768 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257438846 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259487467 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.255512928 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.256075187 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.25791314 seconds)
  done (took 31.356617579 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.259990897 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.256280814 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.259522882 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.258946995 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.257662768 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259527296 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.258857279 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.257430048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.258460269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.259108967 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257803237 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.25589617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.258626044 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.256868766 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260203839 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.25763485 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.258542777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256598608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259757741 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.256263519 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.259768246 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257484991 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25621732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2603121 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.25677582 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257891111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.259326465 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.259036399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25945201 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.256831507 seconds)
  done (took 38.939645349 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.265390033 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.268033066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.260379964 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.26051272 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.259820376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.260010752 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.260065191 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.261141762 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.260721362 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.258784202 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.259993474 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.260349814 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.260691796 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.260387949 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.26134597 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.260758192 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261684793 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.260675104 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.261993111 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.261532297 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.260248649 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.261604779 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.261732324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.261661725 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.260544351 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.26056622 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.261294518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.260596088 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.26026898 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.261961471 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.261477227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261528435 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.261317607 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261420751 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.263328824 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.261148738 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266393231 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.269677244 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.262674664 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.261165621 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.261435394 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.261734204 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.261918794 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.262159424 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.262156773 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.263048993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.261022884 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.26239079 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.262692935 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.26236217 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.261614911 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.262330264 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.261301575 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.262260929 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.262562242 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.262340237 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.262756734 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.262692894 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.263033794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.262240463 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.263553954 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.262547193 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.262884804 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.262226508 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.26287182 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.263737039 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.263510117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.262724844 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.263180633 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.262784825 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.263323417 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.263501272 seconds)
  done (took 92.061005607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.262849328 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261526464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260414741 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261537144 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261109857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264634636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261902369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263508837 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260604375 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263293936 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263917392 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261145621 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261336132 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264680737 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26414788 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261146958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264384346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261774057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.264393136 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264985994 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263412838 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262884024 seconds)
  done (took 28.976240813 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26475724 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264951759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.262480445 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264436715 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261613494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263607379 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265680107 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265055393 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265110087 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262584569 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262776431 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265421797 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2634495 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26300808 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262775095 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2625497 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265031614 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261992391 seconds)
  done (took 23.944504114 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.263850719 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.26353213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.265376056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.263444811 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.263405054 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26628347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263446803 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266193402 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.266923327 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.263265491 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.26605428 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266016921 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.265937103 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263860412 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266556037 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264098043 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.265740477 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263852195 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265678252 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264440682 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264069169 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266589765 seconds)
  done (took 29.026597345 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266783395 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266667579 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.263814928 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263703352 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264651907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2662854 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.266774272 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.263687031 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.265315779 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.265710409 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26479724 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268446371 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.263739338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265584412 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.264400531 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263892516 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267162183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265239666 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26670674 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264288293 seconds)
  done (took 26.506287741 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268386543 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268907489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269746761 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26855562 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26872187 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269362204 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269149148 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27006982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269975844 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269317879 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269036265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269794895 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269450484 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270722319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270495604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27013885 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269730865 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270535781 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268848167 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270906051 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270242787 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269633035 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268567135 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270332487 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270464815 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269868833 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27062042 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270441543 seconds)
  done (took 36.752513061 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269486816 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269225371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.267076665 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.266901629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.266647194 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.266566519 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.268302276 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.267690717 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268931771 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267124981 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.270197949 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269676463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269510405 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.270889383 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270253994 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.270579039 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269545242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.268446064 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267441941 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268409793 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.270182934 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270701963 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.270430452 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267370535 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268008121 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.270274944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268449859 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268340846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270741826 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267686295 seconds)
  done (took 39.267138777 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.289769742 seconds)
    (2/2) benchmarking "in"...
    done (took 1.289866484 seconds)
  done (took 3.781914413 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.268168252 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270392159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.271049002 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267420208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268359814 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270586053 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270935338 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267180103 seconds)
  done (took 11.357520607 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.271834189 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.270794204 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.270969203 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.271126696 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.2720876 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.273172073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279652537 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.289614586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.273074431 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.273652575 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.280449754 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.281313258 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.276167922 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272885284 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.272568069 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275554231 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.271739479 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.273536506 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.273874539 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271666459 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273789531 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27639416 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276685108 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.270220938 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.273714015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.284721855 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.279051354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.272754195 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273371927 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.277712334 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274557125 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.270100949 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.273645157 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.273368002 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.27357996 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.273279177 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282491378 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293051821 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.280181157 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273215401 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273280391 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.27017716 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.276003559 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.275398082 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275868808 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.274011238 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274616126 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.271286365 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.274377655 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.278006015 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.279930012 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273667005 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.272122863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277982768 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.277314788 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282670835 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292491063 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.279405255 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.286014412 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286626319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.288363422 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285653127 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277668622 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.275895254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286748672 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.300845356 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281109017 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290297743 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.271236979 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.273521465 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.283196101 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288409183 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285815455 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.275570908 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275560761 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.275494847 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276758209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274075942 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282704497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.297008318 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.276300345 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276555923 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287637995 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300775975 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.276298538 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.275223973 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.275979463 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.277099037 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.278239537 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287107969 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294552201 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.276440404 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.276660973 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.277307289 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.277568289 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.276053034 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.276908998 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278274287 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.273345057 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.276229628 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277283167 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281469351 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.287272914 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276278061 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276503251 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.284801905 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.27681793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277548738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.283827692 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.27654904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276577604 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.279200639 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.284302201 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.274118162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281930765 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.287139091 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.278344776 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279807312 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.277627818 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.277470755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288549528 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.305750284 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.277980567 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.278367553 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.283865393 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.290609666 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278577269 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281408188 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.27770861 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.275168193 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.276034931 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.281529836 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.279494747 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.280459977 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278855442 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279781254 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275547789 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.278408846 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.279573641 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.280928274 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.280964903 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.280518682 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.281033651 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.281388036 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279906169 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.280990437 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.28531399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280288112 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.282086693 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.279840061 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.275110767 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279397131 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.280801682 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.280864801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.279826238 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280170782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.28004092 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.278653215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278500374 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.279097997 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278634785 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.281683417 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285005319 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.280613134 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.284134572 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.279773593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.276864703 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.279676538 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.279069954 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.27977862 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.279669405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.279008629 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.284633515 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28900458 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.279336675 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.281261999 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.2831879 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280771343 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281456173 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281301673 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.283910787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.288977708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.279865226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2876453 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.281423398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280257208 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.280810485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.282460602 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.281507348 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280928164 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.285992795 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.289387252 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294756434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291333049 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.283154859 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.285497337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.283580753 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.285346714 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.286082128 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281877454 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.281394163 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281844144 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282738772 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282337083 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.285249331 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.282679934 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.282197659 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.280839807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.281339502 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.281392633 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281500821 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.283603327 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282887059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.279151452 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281587881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282155682 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.282818843 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.279783346 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.281811472 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.281939708 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.282149183 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281932065 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.289610336 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.279674091 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284503163 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283711314 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.284213264 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282377431 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.28209668 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285354301 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.283845308 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290623754 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.301913604 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.284355489 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290888958 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.302004035 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.283993955 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.287084283 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.283145818 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.281407533 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.286913875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.290958893 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.281842721 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.284350017 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.283063097 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285003514 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283774396 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.289823419 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.280710507 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.283946371 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.284013656 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.28622819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.281857948 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.286841101 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.286042022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.285706179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287509719 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283742311 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.284185709 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286048877 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.284257854 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.285517892 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.285466528 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289191173 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.292244524 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.290074314 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.285411988 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.288245109 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.286914998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.288378344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.287519654 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.2852714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.284637772 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29819509 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295132593 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292453276 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288060767 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.28490391 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291826176 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288492894 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.290433322 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286016432 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287721246 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.28675527 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.2866491 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.283195476 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287821385 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.285963519 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28878457 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.28949369 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.290086246 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.285482111 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.286923739 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.286536781 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.286814315 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.286948423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.286832702 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.286241311 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.288706232 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289972192 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.286433753 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.288084475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293654831 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.306090189 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.288148011 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.287056598 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.287361917 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.286706932 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.28853323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.287449519 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.292710401 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.29490553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.291224425 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.297519971 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.289473176 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297298959 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.288074445 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.292183341 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.295489857 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.285135524 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.287132392 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.288115011 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.288321598 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294513691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.306583846 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.289186853 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.291545736 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287946974 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.288528167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.287386028 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.288130433 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2878849 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.288495849 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296975344 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.309082686 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.29282283 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290497843 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.284804387 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.289405331 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.288007496 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.288778656 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292518346 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.288895532 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.29042918 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.28965674 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.289850144 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.289087593 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.288123965 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.287933568 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.28618778 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.288996045 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295443934 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.310149173 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294127176 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.289595964 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.297405399 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289950349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298128152 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308922666 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.29131841 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.290090248 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.289793772 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.293241349 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.290767051 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.292652062 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.290506795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.291641062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.294985696 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.290583439 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.293525364 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.290671339 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290476254 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.290640624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301292717 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315578146 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.292985122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294322334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.287154833 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.293377427 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.295800771 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.291661211 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.290775439 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.293998224 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303773421 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298280096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.290986075 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.290691468 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290898826 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291766102 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.29042521 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.289771051 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.290826381 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.291433739 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.292582541 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.290814633 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296013046 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.291186987 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.291331392 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292868739 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.293757875 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.302185217 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291943512 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.292743117 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290929525 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.290473873 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.291571401 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.293350846 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.291948209 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292961725 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29119009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.294435441 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301624121 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.301876724 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.296000008 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.293165602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.292343833 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.293061718 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.293893487 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293474714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.293346786 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293802149 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.294386507 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.291657831 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.29388284 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.292473399 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.292388522 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.293489969 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291873959 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297088936 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302237767 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293582686 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.290164183 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.292920781 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292036099 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.292714332 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.294214558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.301058114 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297828663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.307317702 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.303418412 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.298674325 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.294092944 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299229628 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.304252578 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.29286918 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.294927334 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.294431992 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.296679893 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.297181181 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.298667435 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294094643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.301534433 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.295286491 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.295359542 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303220041 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.313460527 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294861149 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.29708116 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.299238609 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.295014213 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.29235435 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.293878002 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.293582758 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30283901 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.314898923 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294769577 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297188493 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.294140505 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.297764691 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30001692 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293805313 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.296274679 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.292405725 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.296149644 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294996963 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294852997 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.293172549 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.295064594 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.295544353 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.298839617 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.3055138 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.293624279 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299615305 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.297175532 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.296812453 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295753923 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294689982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.293298601 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.292983797 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.296149638 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295432993 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.296021821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.298754149 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.296352057 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.297637071 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.297721562 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29584596 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301429246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.308480149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.304329854 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.293719055 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.29629853 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.297870008 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.300799556 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296590018 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.296426035 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298464227 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.299519734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29691957 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298051559 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.297080954 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.301648245 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314486406 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.316693229 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298205217 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.298038069 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301545864 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.298200241 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.295024045 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.297734342 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.300125077 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.30166292 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.308889771 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.298356555 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305297715 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318397205 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.300635187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.302057168 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.302903666 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.308682016 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300739495 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299299595 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.298569665 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.304053291 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.316012342 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297854802 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308916925 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32950479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.318650412 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300370521 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.298324356 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298327989 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.298563743 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.301742415 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29919234 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.298596358 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.298845327 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.298224798 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.301120001 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306119313 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.300891146 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.298041065 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.298306409 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299296464 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.300978143 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.295487354 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.299384902 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.298872345 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.299124597 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.29999299 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.299856255 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.301138196 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313041206 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.311400166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.298951774 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.300083926 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.296280743 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.303578966 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.304467044 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31431494 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.308588878 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.299599289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.301412526 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.302012957 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301018449 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.296202462 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.301211452 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.299738975 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300278474 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.297640804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.314401165 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31066067 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.305241338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.301858258 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300904107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.299777941 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303542179 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301290363 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302293558 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.303810556 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.303482637 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306334562 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.301373045 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.300470816 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.30589474 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.309499702 seconds)
  done (took 769.66928559 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299243817 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299145834 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298602327 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299109821 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298716618 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298769234 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297640207 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.298972727 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296765824 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299205391 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29881485 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298711235 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298543758 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299618464 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299821618 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299156617 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299237708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.299234798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298683751 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299300111 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299371702 seconds)
  done (took 28.508341326 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.30157863 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.299003901 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299923063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302052701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299598402 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301003842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.300359398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301994643 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301953163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299522555 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.301972471 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302716139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.300171684 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.300665247 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300081622 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303804923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.303559319 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29994091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.303148564 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300393508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302510045 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.300613382 seconds)
  done (took 29.860516029 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.304295987 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.303699406 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.303690259 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.300752682 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.303512997 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.299776829 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.303616799 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.303520061 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.302375859 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.305110015 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.304081635 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.306146473 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312420573 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.309317098 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.305892795 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.303982877 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.447555259 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.304841168 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.304871109 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.303845071 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.303926028 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.310253726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.301153002 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.302870952 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.304036815 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.304373735 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.305049387 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.303872248 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.305155066 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.307472882 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.310258535 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.304549725 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.306394978 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.306876443 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.305178544 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.306836362 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.309885518 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.305786796 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.302299038 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.305433129 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.317144289 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.327000527 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.306336919 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.312287586 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305629062 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.305178059 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.311573492 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.315181896 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.302236374 seconds)
  done (took 65.382829771 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.30626155 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305416614 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.30283516 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305486251 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.305386591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.306103099 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.305418664 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305281108 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.302205299 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.30319655 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.304691005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.302980525 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.30345639 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.304971913 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.306042238 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302938417 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.303084271 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303776486 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.302994618 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.303944718 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.303262808 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.306641484 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.306000848 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.304034493 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.306638073 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303279733 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303677516 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.306442377 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.303749856 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.30405461 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.306708984 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30641033 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.306192818 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.304354034 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302702382 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.306305081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30699448 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.303812903 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306365537 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.303983247 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.306759945 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306574999 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.306019256 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.30738346 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304331999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.305280433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303783528 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.303824145 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305261525 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.307481108 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.307837761 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.304929669 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307295336 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304109997 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307624689 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.308328379 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.305332717 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305882012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.309146224 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.306802402 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.305937342 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308599903 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.305808247 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.3089269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.308387908 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.306595493 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.306093199 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308804598 seconds)
  done (took 90.010451478 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309508597 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.309276145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309354767 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309501539 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30930078 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.31015089 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309151135 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.309197077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30911863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.309372558 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309306198 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309491163 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.309550279 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.310152103 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309649946 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309867767 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309820535 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310527674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.310668228 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310266814 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.31026963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311100458 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.310356238 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.309268725 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310346084 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.310385209 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.310149135 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310734077 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310203496 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310388588 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310284627 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.311028785 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310933151 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.310452981 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.311330435 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.310452361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310819696 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310874857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.31202417 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312186884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314215354 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311404522 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.311171678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.312046099 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312525514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311117208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310481379 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31147834 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.310577483 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310576564 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31163635 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311710152 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312408292 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311470142 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.312288155 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.311584949 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311432756 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312096888 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311959689 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.312110128 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311894382 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.312653553 seconds)
  done (took 82.507415589 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312176727 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31154655 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.309965679 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.30897368 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312945916 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309739779 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311898082 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.31226489 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312084624 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311586627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311907648 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309019586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309690038 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312927648 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.309775396 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309874335 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309112812 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.309794308 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312105014 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309753892 seconds)
  done (took 27.459637336 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.310040561 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.3128147 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.309786781 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310596556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.312131725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31065732 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.312074975 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312689167 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311440776 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313681978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313938367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313322067 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310951888 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309813107 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313344965 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309973571 seconds)
  done (took 22.230715516 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.310781766 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.313017216 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313571273 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313620584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309478373 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.311182446 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.313558616 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.31089641 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.311216916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313925623 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.313619609 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.314222708 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314080582 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.314691219 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.311784199 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.314286619 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311831606 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.310964381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313261765 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.315090033 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.31275532 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.313119007 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313841487 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.314594931 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312790315 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.313130942 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311882734 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.313564817 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312681242 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.314376613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.311878005 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313161416 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.311889951 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.312253235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.315995909 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.312874008 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.314962645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.315155352 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.314606415 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.315251803 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.316062403 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312588681 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.316143505 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314946975 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312475623 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.316382838 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.313878869 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314018356 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311961865 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313380198 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.316843166 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.315547176 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.317803649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.317019605 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.316263415 seconds)
  done (took 73.497205651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317425342 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316026121 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31303807 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316473062 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315838611 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.313388188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316079532 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314376204 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313823754 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.316473405 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315093813 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315864269 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313396343 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315844547 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315156856 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316409178 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313800759 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314331611 seconds)
  done (took 24.920091104 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314984292 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.314080622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317026039 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313900898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314515559 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316473655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314754866 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.317805498 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316726112 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.316086398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314531156 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.317909154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317718115 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.318173173 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31639093 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314731976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317378428 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317158202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314664042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314545057 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318105722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317588407 seconds)
  done (took 30.203187746 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.317490522 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.318645266 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.334712581 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.362556159 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.351274134 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.319133687 seconds)
  done (took 9.252087851 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316855783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318372007 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316426377 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319316897 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318380466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316524388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315057597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316714376 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318517011 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317157869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316508813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319189006 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318733062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316592902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319570329 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320497432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315169712 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316068047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317969238 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318977765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316711996 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319432955 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316161277 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316653785 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317140645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316756105 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319686831 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317482734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316263229 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319450812 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318455943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317874576 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319796371 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317952002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320234209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320060054 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316790265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321131722 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320035448 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317612419 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31939733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320195055 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319616318 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317993608 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321054824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317147666 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317780384 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317648926 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318515295 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32092779 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318699056 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31832799 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320908994 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321228621 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319802347 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32076518 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319233837 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319000142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320530302 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319231242 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318467124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320721058 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317907524 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318562073 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321203423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319304608 seconds)
  done (took 88.273637855 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319078145 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318616315 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31886205 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319866187 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318437518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319113374 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320214197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320102798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319596084 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319311312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320315799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319282277 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319011388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319939837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320273101 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320271722 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3195433 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320514528 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319105909 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322893977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319512202 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319487073 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320951969 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319731628 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321014656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322474195 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319865301 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320472278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320625815 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320116586 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32070587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320911385 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319709167 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321199255 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321091221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320595653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321369659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320238486 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321928899 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323128587 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32080598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323826624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321430874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320789333 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321489019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321690099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320679629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320889893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320288765 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321086455 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321548927 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322039657 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322176876 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320889299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321651276 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320848725 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321841609 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321632738 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321334594 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323750892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321073122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321780376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324051062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321734717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322182516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322131497 seconds)
  done (took 88.427592233 seconds)
done (took 1793.364987139 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.410260795 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.330983839 seconds)
  done (took 13.994845354 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489097901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.44256671 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.3244568 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.337058233 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.325370242 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.334802573 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.342367123 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.325257012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324465116 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324931845 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324318594 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.518374086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.325588992 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32523306 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.324347948 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417880355 seconds)
  done (took 43.068482805 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352415643 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.329767162 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.45362087 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347919258 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352513578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.529365896 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386587727 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.328917632 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.517641178 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372787798 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.982490178 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.352642569 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327344535 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.50463452 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.348302235 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52776047 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.598913382 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.990986665 seconds)
  done (took 30.860109513 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.822523329 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.366902927 seconds)
  done (took 9.445553753 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.326782752 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.365773316 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.349357404 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.345683838 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.358899914 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.408307267 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.358630662 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.364883942 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.342979237 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.382988376 seconds)
  done (took 64.866737925 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.350281664 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328974934 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330597723 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327999178 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.32138858 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.336872257 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.327626833 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.325922537 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.313151608 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.471305971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.3506714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333989387 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32891435 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3306493 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325251013 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365795904 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462255549 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325701725 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.323677441 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.333692302 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329596048 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417443602 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.373891299 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.329026768 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468414705 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.334669296 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336314422 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335744533 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.439218843 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32549442 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329627914 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330041394 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.332264621 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.918242776 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.861888997 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.344113075 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355432913 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337634343 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326254919 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462445567 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331297901 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335463195 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.322770285 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.824364031 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.488965118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.454791888 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.728169858 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.335899519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331230627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394804909 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.331139134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.331614445 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361453908 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.109985879 seconds)
  done (took 112.14354258 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.377178333 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.823959721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494865148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.348755154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.137373546 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991220897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.326623209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.637560026 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.377595224 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324290294 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.677639553 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.858261511 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329435161 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.375757033 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.007473071 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.412826156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34030977 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.123093071 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32932616 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.328701885 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750109225 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342271378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324296541 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.504798004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366899524 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812416294 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.872795132 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.643405264 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327828305 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.325685439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.811416312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.335444427 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.360400386 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327072039 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.617347047 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711954956 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688618356 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.331708646 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357993911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.329251753 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.342242229 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824041491 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702453513 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327263946 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345234141 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814737773 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327008423 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.334894431 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.330873254 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5309779 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.300534256 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325736389 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.876294379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326956156 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.701015383 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38132974 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398553382 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842567347 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328814435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.322659496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361802147 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.328179985 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334776559 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331594173 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.325769776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.717196965 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.452919594 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.327390864 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.712539073 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.822556596 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.329941744 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87945129 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.275362819 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336699697 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.397604511 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326574325 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.937242154 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.861537198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.347298816 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327777873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.70293324 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.332533578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.666640445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.348102547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329320583 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761612642 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.351221306 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.382546993 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.328038076 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.346170916 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.962145384 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331155903 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.629270482 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.3984511 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327480434 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.328684676 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.371015645 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329007482 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330925624 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.333877162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882112506 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335680748 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.650842477 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.352174508 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328872296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.329667166 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.330179301 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.329361571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549060671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.863830102 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.33916639 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331683875 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.33476821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.337497191 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.48627224 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.332514553 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.673538534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335446229 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33157164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.335530911 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06509763 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359826731 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32929067 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.348511614 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.209030319 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544774531 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350132846 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.345790186 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328662026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.345664328 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.784509426 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330561307 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.358358106 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.333051576 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067773554 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33520571 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.354636035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.950625735 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331105603 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329040946 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337445034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331601825 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643501139 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.618984423 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.390211592 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346424411 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.330303843 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.041275869 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.363374756 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48216249 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.353729503 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338894922 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531827756 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790564337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332877732 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.908619043 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.334710167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548000621 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331544383 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65753314 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841783184 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331861871 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332849631 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.053420023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019873387 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.981274031 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.335265025 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.67667764 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.333935627 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797315022 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.332268715 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33255531 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.769393549 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335554917 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.339652184 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.332951908 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.331449153 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.480831841 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512783517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.601270348 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337442978 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818764746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344097255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333300131 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.350717251 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.334203625 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.687167426 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429880515 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336982442 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.373393049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.335260719 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332057331 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833297112 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.30606174 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.335818677 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490698873 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996177647 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.335821488 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333855502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.030293416 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.622494928 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870554506 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.389519759 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.668132935 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.342186565 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.375881847 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.085721825 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345733208 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835486564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33715525 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.334252608 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.964404709 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.337999519 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702175903 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.333828042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.334284617 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918143857 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.336450089 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.340356404 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.823763337 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.337172687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585801862 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.334323383 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.379877543 seconds)
  done (took 1113.230970691 seconds)
done (took 1388.867296878 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.334849259 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338291238 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.324126164 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.341284596 seconds)
  done (took 26.608789789 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34614541 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.343337958 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.343980448 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343548804 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.344856893 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.343340681 seconds)
  done (took 9.33762516 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.650473944 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.342723621 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339849038 seconds)
  done (took 19.605151115 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.585078776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.71139548 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.755322844 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.723427051 seconds)
  done (took 11.048193529 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.345949912 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344891821 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344660438 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346219471 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34821308 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.350107905 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.346178892 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34704881 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.347796145 seconds)
  done (took 13.392382489 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.6425139 seconds)
done (took 86.906166855 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.322487512 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.961447311 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.792220484 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42590457 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.330779284 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.324474412 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.223722526 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.454018755 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.420154366 seconds)
    (10/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.533754305 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.60146746 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.001558059 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.381940389 seconds)
    (14/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.725228913 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.452623605 seconds)
    (16/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.254948559 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.364528872 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.732062269 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.389375863 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.313094535 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.937926083 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.096656225 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.334231092 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.45354622 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.820590392 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.34038566 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.848424819 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.229087859 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.371423919 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452085549 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.340301333 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.672501651 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.362980285 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.97323223 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.363822866 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 6.357098785 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.391445028 seconds)
    (38/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.366447028 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.754698963 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.444287943 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.326906176 seconds)
    (42/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.832627336 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401809941 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.327049162 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.329183488 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.336818967 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.463886862 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.33952478 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.464620123 seconds)
    (50/309) benchmarking ("sort", Int8, false)...
    done (took 4.405773942 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.341036502 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.363301834 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422171522 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.00493514 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.361769485 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.471566301 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.747537912 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.605890833 seconds)
    (59/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.756719122 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.624476718 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.089149737 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.046861704 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.779361186 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.511541479 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.418200531 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.838955986 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40078182 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.328770688 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.370070361 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.336564351 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.41722614 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.239026361 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.310239713 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.345107607 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.37601272 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.367469814 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.650820369 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.330624673 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352253355 seconds)
    (80/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.813250844 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.339614021 seconds)
    (82/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.758091175 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.595287993 seconds)
    (84/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.023770555 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.415717069 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.530695163 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.649141985 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029546592 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.277772995 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.091386037 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.342669051 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.363952288 seconds)
    (93/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.120203255 seconds)
    (94/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.372232327 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.087628193 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.435485385 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.964170007 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430011752 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.263368211 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.044505713 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.909515877 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557966463 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.202943276 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.778699152 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.362180554 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.375755341 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.344934204 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.282210887 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.347605566 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.188249855 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.361271611 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.407278359 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.346724819 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.386419566 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.583897273 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.454847398 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448281817 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.575370591 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.364347901 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.696518445 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.867468748 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.366333017 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.733469287 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.605843499 seconds)
    (125/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.735967908 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.087835357 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.206795811 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.078983135 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.186577879 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.624235757 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.344776498 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.379004529 seconds)
    (133/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.653826567 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.247969444 seconds)
    (135/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.997858508 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.471614558 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.659658933 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.954909325 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.899261001 seconds)
    (140/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.086975466 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.331740494 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.045350984 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.367839773 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.391329623 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.34520999 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.245771436 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375014092 seconds)
    (148/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.779999971 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.357951815 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.346269038 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.446196444 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.813531549 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.326236245 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.369837214 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.279070182 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.36479043 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.363487209 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.362748025 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.364464413 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428165331 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.679127902 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.804866467 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.390467362 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345174404 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.911154938 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.333465676 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.395582675 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.951128885 seconds)
    (169/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.364445603 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.356726083 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.072323838 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.712322844 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.692244216 seconds)
    (174/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.058165807 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.024129279 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.541551567 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.622573717 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.391141945 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.339700824 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.420671103 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371771598 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.336215562 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.341945165 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.862061231 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.390274041 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.445683188 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.864423408 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.415901048 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.719242956 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.806440827 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.542307128 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.357444415 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.103768401 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.422544654 seconds)
    (195/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.999979078 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.375747627 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.431808326 seconds)
    (198/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.348270345 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.358041655 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.496376315 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.805363872 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.997430991 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568035415 seconds)
    (204/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.217129258 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.639863637 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375967799 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373005653 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.435591509 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.371847407 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.373168026 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.487296865 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.849030611 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.107461295 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.873248253 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.261794897 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.372350477 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369673392 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.457520881 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.349121793 seconds)
    (220/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414994085 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.387855328 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.357494292 seconds)
    (223/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.372219505 seconds)
    (224/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.676572163 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.776831547 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.355403195 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.423459621 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.35846669 seconds)
    (229/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41194985 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.779280723 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.188800292 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.494525888 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.973303304 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.494130302 seconds)
    (235/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.571543867 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.633936509 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.368975593 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.996968663 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.863000273 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.092979686 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.045701192 seconds)
    (242/309) benchmarking ("sort", Float64, false)...
    done (took 5.732357886 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433701932 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.576052895 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.427855081 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.335233902 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.566007481 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.487050696 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.87978559 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.335498626 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.36911434 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.361854675 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375927049 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.907548754 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.798220999 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353682161 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.139882055 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.717700394 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.723124644 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752326614 seconds)
    (261/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.06156599 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.336950757 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.395322427 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.468795535 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.430277233 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349502795 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.068344488 seconds)
    (268/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.431720681 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364879502 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.252297864 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.842645776 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.199388044 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351337587 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.183805592 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.433068904 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.434988992 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.352613059 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.432382687 seconds)
    (279/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360113394 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.467459116 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.352332066 seconds)
    (282/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455781069 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 5.400745644 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.63996096 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.775263504 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.095725635 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.791173332 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.04383093 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.914444336 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.377091923 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.392263671 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.911946964 seconds)
    (293/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.17744208 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.357961572 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.280523818 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.067234103 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.869344289 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.457492921 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.361081579 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.478870119 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373887272 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.550231096 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.76205162 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.487407199 seconds)
    (305/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.461422665 seconds)
    (306/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.737430109 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.91975775 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.880089817 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.013226396 seconds)
  done (took 943.068772772 seconds)
done (took 944.344266016 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383160862 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376762069 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.360582646 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.381928262 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473873666 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390106063 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.370792687 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.363096547 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408989692 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.410843737 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.360025791 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.387418019 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.362752259 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361218903 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.360732101 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375292491 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.548842941 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.366188656 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378273558 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371221394 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.37812633 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361182928 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.41229265 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.389248688 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.366274308 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364776368 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36546727 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.382472127 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472881072 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365304177 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365494429 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.373124428 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.547388167 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363390034 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.35716521 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.383248855 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374285017 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.373392048 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365603744 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394337395 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.933127696 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361931281 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.364825058 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364059614 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.362571196 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369782706 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36465097 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369874297 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375954798 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37714077 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.92239997 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.378380447 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366530024 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364187164 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374430893 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363262012 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367576738 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379939394 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38246876 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379395613 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.544579645 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.371725761 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.365275459 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379920682 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.370508692 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.960213106 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36019444 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.368207613 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.012658855 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.375014266 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.961735868 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372779507 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.366279385 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377830254 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.395748166 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.555097124 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.363139285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.363566407 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.371824711 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363083166 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374830439 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377256029 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.37053316 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.365827774 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379198838 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.394575154 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.375490509 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.36557599 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376032967 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.385176354 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372628758 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.376977025 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.367608188 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.360174912 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.374907062 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.369531724 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368159608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368710957 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371262684 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378079918 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.940001493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383501808 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363094441 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.362812594 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.364467278 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.379146113 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.94184859 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.36749286 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.38739193 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.413820335 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.367326249 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.541677222 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.373221378 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381322577 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.375070479 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369168441 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.361950897 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.489691648 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.935059266 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381879671 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367036986 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.36437467 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383279588 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.368011659 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.362454757 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.504722881 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.36951706 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380172677 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488201037 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.377830379 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39897036 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367079232 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.370499964 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398771981 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383755469 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.399308449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.369863979 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382562684 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.383258037 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363726058 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379195831 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37918808 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369722935 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.373962207 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.362466145 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39717573 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380656269 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381264916 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.388184392 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.490173213 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.365449291 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.489734408 seconds)
done (took 232.458074562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.430256652 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.366242436 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.460620513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365154321 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469221577 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467874528 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363698924 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.364455955 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.363205337 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.744989378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364827224 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.363822902 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.361181013 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364327701 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449170853 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367330153 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.363252064 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707420507 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367779414 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440033664 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.368215054 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.364491519 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.366475516 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.750722373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.368274783 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.367515802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440452862 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366220179 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.715301074 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.366353539 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.368549113 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715119268 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458771856 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385435679 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.377128427 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.374996826 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470695354 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.386727899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450764557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449847142 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.462178946 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40733684 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.367777613 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.367359551 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370284019 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36839233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366348908 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.395956136 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.367977672 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366978338 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.711804262 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.378916213 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.365667739 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.367485847 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36750098 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399029498 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36731571 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369492832 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460184652 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.369460822 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433016306 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.753409653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746947779 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369714975 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.36326921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.366301517 seconds)
  done (took 150.784956412 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.437336746 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444491392 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488286607 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371775158 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421568064 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.49223262 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371967198 seconds)
  done (took 11.324874521 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376711726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369655817 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420610246 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419948858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371115738 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517432753 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370717113 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38253463 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.367856684 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428340743 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371060176 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371060803 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376839865 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.372572461 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420823208 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.3829515 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487681994 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372866831 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371607827 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523255195 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368821496 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.377219357 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.424226095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383595048 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.372621381 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378475604 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.970640325 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372203343 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368796269 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.372411256 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368346186 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.411363084 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37160328 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.37161388 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369667727 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49945921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.371762423 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368254592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37127095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.370713422 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370483211 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370395021 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371547255 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.368585739 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.372435614 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.394884965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371892546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372204244 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.372091279 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371348217 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.423787352 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37113179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.369684775 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.370335538 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.433230466 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379175618 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37353736 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370828907 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372731895 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369780388 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524378951 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422634538 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.372819202 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422114021 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372254364 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.373161313 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373063545 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.373368842 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429137709 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37265464 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422701367 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369882323 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.548475355 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397645758 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374946791 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376960057 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377844921 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373525667 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.367790515 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.380307975 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.371425291 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.376252122 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381414332 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369973295 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37067992 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477868341 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493740702 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.371712268 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389192007 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381687246 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.371627201 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.428282919 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373905752 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371909472 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428507271 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491430838 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.432403872 seconds)
  done (took 157.11947193 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381597705 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384126619 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.376556814 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391061178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.375630148 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376208904 seconds)
  done (took 9.588789238 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379339376 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377115172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374451714 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.374754926 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.373854625 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.37526731 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375313989 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378208151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378646394 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375500025 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376019678 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.375628269 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.377252893 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.37562137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.377170322 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374981692 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374811842 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37295045 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.375493317 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375509591 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472368255 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.376235569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376245061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.378353753 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.381731876 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.375477655 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385114209 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37563312 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377070492 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.384539788 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.380041284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376446197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379113846 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.384333029 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.380048547 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3793984 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379475238 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378561036 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373946893 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.377718424 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.37796063 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375864662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37656276 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377201414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.380367957 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.384344785 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382388276 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38564095 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376781966 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.377637811 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.37764855 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.37734005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377848342 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.378645003 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379974717 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383425294 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383194495 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.378572489 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377876562 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380508703 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379803003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378059121 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380806946 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382537899 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.384959506 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.378747079 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.38148298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382945441 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378330917 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.378171901 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378823067 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374967766 seconds)
  done (took 101.644928225 seconds)
done (took 431.759098605 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.396097273 seconds)
  done (took 7.700916791 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.544776935 seconds)
  done (took 7.851929078 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.837111538 seconds)
  done (took 24.149774129 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.440861017 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.471394131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.401756012 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.373527722 seconds)
  done (took 26.99540293 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.441354864 seconds)
  done (took 7.747607502 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.37087679 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.370465131 seconds)
  done (took 14.048190681 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.63154741 seconds)
  done (took 7.939076283 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.094001749 seconds)
  done (took 8.407211905 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.385068849 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.394701299 seconds)
  done (took 14.343931659 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.35807214 seconds)
  done (took 7.664519773 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.64668828 seconds)
  done (took 8.953874774 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371987841 seconds)
  done (took 7.679689419 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.39416097 seconds)
  done (took 7.702280277 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.13720536 seconds)
  done (took 10.443904398 seconds)
done (took 162.936362779 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.373017931 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373488155 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.375538726 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.374207739 seconds)
  done (took 26.801957459 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.41254045 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413381889 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.417297707 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.424550417 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416051821 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413033967 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406618674 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404570216 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424188782 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416211693 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414168291 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415875596 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.413967625 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.4055615 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.416158083 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415666032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424576279 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415171003 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405444709 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415857588 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.381484904 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423576852 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.41684442 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379640225 seconds)
  done (took 35.201255496 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.578183131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453091175 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.53557607 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432668389 seconds)
  done (took 7.306505186 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432800979 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433756162 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444612897 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485665191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511436965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444241109 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.403857092 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402182159 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.388248243 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434704561 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.509579596 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.449974622 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.517249481 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.3810588 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.565570684 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381052606 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380932427 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.43251133 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485300174 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505852736 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381067694 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432762766 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.439988146 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448143593 seconds)
  done (took 36.002913265 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.381388938 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38821551 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.388357088 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380930617 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381258182 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38140511 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.387300566 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381640422 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.401924485 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.381327183 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.379479555 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.380451602 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.380694441 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.381348693 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.380158381 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.393904846 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.393985365 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.382159403 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38380435 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.387473188 seconds)
  done (took 29.007895028 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.377360375 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.230554007 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728290462 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632493454 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.376579689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.380289139 seconds)
  done (took 28.03576559 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.463342663 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.61094843 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383427696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.78229317 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.859188915 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384367143 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382687302 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.650851285 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.993496043 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.011584535 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.449590586 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457397902 seconds)
  done (took 20.741829271 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390203297 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.379523362 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.385766576 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396835174 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.446309273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389087688 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391692742 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.378882335 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450020815 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.451208293 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.389375825 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.447406175 seconds)
  done (took 38.208585923 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465179221 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428863854 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.409560751 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297723684 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.586939892 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589858532 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302331163 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854469341 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381030367 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651900705 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393967263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467370704 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637339532 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387502581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382052233 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.507474466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607680059 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949404317 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381932127 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.737835731 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404518713 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392252647 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833564669 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.411067421 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591598529 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362035281 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640570917 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.155077436 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697934901 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391657621 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389741976 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379538973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65557527 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067832262 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475020194 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390486759 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332905522 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.01085105 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.380999215 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.743188148 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395351547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384997656 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3900345 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380656569 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315575781 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388786125 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869105425 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385293607 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.091351394 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380351719 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39083767 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473537891 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.384327405 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.37302288 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577889341 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.387846161 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.377845739 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38902933 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947964358 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211835591 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391630557 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.318903256 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.94715266 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.742574074 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074543441 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.48310536 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.384440243 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38582382 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316190893 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.879048901 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402257651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519320176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406102209 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043232829 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18071249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383108522 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311622439 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0138099 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397809827 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.31958104 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61048332 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157774153 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322082525 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.331925298 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316720545 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180452932 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393158074 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.027100692 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390875049 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858861826 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393093466 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398915964 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406126234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606717319 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.346393231 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382126632 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.382892991 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521278011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404291446 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86331064 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318164604 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386330608 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641307958 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593758483 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382082131 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.507603713 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622640827 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401481571 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400867006 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383246009 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.412713896 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.045361927 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39601561 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213325335 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40004106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159425443 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223337847 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384969594 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.487377999 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3892432 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651943818 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.261505809 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277071313 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451495126 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388471431 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38424598 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938412279 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239374124 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.291209993 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.387547429 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383765606 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397261541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.384583137 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338202266 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.390402724 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389870366 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.16212499 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609875198 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384151463 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663745065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319174165 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545191522 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41886148 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609157682 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.690167523 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.383965171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647485103 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388016497 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391724612 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400122279 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405301312 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483215335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407066444 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.395893682 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647176243 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389176202 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389347651 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937242951 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.169137994 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393288296 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391823455 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365522096 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064962671 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359060526 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389694676 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28119234 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.400369937 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453354975 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39162069 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395958582 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.442750811 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455997145 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390632877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.384488878 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61175045 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398221629 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.93935818 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47226508 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.618196808 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056803234 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400339141 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.321643771 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.099182386 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.080314681 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386590269 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.577227292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387199758 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398149972 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398923501 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.117870783 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056090268 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389977248 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.855342264 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396516483 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399074521 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.394377181 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387596724 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.389711729 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2368479 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400707832 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403439135 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530835756 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401491277 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323621871 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905278763 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394335174 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388416712 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166582559 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423137277 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.774230993 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894910124 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647959367 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.304883106 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400358934 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.059623125 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424341835 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388695508 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39657289 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396766779 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.397867901 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415723144 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.400447045 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.919911726 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84131601 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959061075 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190799044 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996050483 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393296676 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.39315876 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274830933 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875029906 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322898033 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048734064 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601404957 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876155223 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33810876 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6247401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.697904846 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234163234 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401262072 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619544142 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387913756 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.404214821 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403119145 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602882029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424792414 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395910116 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322710209 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.678013546 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682161564 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395157869 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47149136 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871763171 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40455636 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169975085 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.391468308 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.852006897 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584629522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.938583373 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781354208 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398393221 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408677046 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897979001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395216749 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921159355 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095608999 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404249305 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.628283152 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331521409 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.402966945 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403003899 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392144466 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.890191707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400268271 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650268043 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402450161 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326711682 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396420301 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00446746 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.248586422 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.39859489 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392211655 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235545191 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405937413 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71367387 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.404331046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.377208434 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396613924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328387706 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326637001 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085737213 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40192253 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362269808 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967974757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.906053292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56812856 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427252715 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245444171 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651307497 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.408547301 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065753037 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619718251 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.426234178 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414118236 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.493133246 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402376456 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.380588418 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292414161 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6296846 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371633735 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617414627 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.414593616 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.299133675 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393102821 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60668316 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293595898 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395352415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662091405 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.10485359 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.403131178 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183204031 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419841635 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395060348 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415971384 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.96242279 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402583215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465388731 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405674919 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.405791414 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.407652352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588129302 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407066004 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40002418 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409485901 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488565321 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527889347 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.440360292 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.172129511 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072532711 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220309941 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070077855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406896525 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395570192 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39698724 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329838079 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543600354 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924820726 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670282055 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516384974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.044708817 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418104455 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39968105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41531486 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61098199 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669972258 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270493341 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414529785 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061974836 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.308237629 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408613193 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607703914 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975135939 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037460407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519498065 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399705514 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882368797 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66966765 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489098776 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395984363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99089626 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.41072158 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.871805359 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.40343929 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414127353 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546797075 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407074176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09101174 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.405813555 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.553556784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170469891 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909134146 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659637134 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.977714764 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409942052 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075745364 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237320016 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664381513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468553153 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410123489 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510006723 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54341395 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.405030329 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.283517623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398701737 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246440524 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.109023317 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408094251 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07759398 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662332461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.396351729 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.407507739 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423090202 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.407130161 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62371536 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211171535 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625405685 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408415807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40827786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.971892101 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076119001 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412054335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333479295 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401660611 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666061324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635512389 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424889867 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.851694566 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110211443 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039684097 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.376407405 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420758957 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400776717 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211060392 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073187758 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.453082185 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979104923 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062452252 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399711088 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677428556 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.404465645 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404323768 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678131109 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404237489 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399978284 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415667275 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.074576217 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273547866 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.417442773 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.920020893 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.340440064 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629332015 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182519688 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335762032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402475823 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.608503749 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400209987 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520640158 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412859506 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.41255982 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412188916 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.136789807 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688434914 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407292764 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.388093825 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40437349 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418290817 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412221587 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693064107 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405890184 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.076648335 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.751334035 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658798674 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40349642 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390283624 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.405738042 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402134398 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121969075 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375438763 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.147621009 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042819269 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.411095327 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416257541 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406278093 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.620086403 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614470755 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416223844 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414985144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41082751 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419247793 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.311660397 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175301908 seconds)
  done (took 1631.375572076 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416770646 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.455213516 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.440998649 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.514263234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447221462 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.487485125 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.443480686 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490620697 seconds)
  done (took 53.032710328 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.403329982 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.562964174 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.436741564 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.415424103 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.416726251 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.415757065 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.915952481 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.405698089 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.414885375 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.41583511 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.413964098 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.410591228 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.137722179 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.414190094 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.417916856 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.409677579 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.413002382 seconds)
  done (took 66.76273449 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.407534305 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.92450554 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.445045544 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.408301404 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.848218867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.423144253 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.870447309 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.43651389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.429561471 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.757349929 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.077345074 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416960191 seconds)
  done (took 81.783561273 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.414273757 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.412756992 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413383847 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412380468 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413192881 seconds)
  done (took 8.403901359 seconds)
done (took 2063.974562531 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.649711993 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.210525373 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109788118 seconds)
  done (took 5.658764523 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.553787419 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.602446431 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.766191937 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.756559511 seconds)
  done (took 8.017686538 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.693005812 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.796545929 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.599258113 seconds)
  done (took 6.426805889 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.009402381 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.407276224 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.548397939 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.404106285 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.405215685 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.406719428 seconds)
  done (took 20.554438872 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.409073499 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.412339556 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410047335 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.411113388 seconds)
  done (took 6.982194971 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.392423247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.121087129 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.390146486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406656322 seconds)
  done (took 18.649865467 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.156521766 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.169509874 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.152291553 seconds)
  done (took 7.81683066 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.406902964 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.253954213 seconds)
  done (took 9.999996925 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.716930917 seconds)
  done (took 3.05494067 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.540584395 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.738816852 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.649731679 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.538384828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.671268315 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.744184243 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.327275412 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.834442706 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.526415771 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.882825954 seconds)
  done (took 30.793681827 seconds)
done (took 131.908850064 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.613887311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433079737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.609061924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.584990301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.791958209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.610378632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.700821244 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.552385827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.091808328 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.078022295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.583449984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.766249792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.649747017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432281841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.650243309 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434581653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.651506477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.646353412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.280143608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4126872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.700712887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.222887077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.423045803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.239838455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.673306939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.562368383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.803725161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436357007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418631155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.821722916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562587967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.409182197 seconds)
  done (took 198.18875724 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.407394035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407774954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410283112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426005234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435405958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410808963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445039682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.41764353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410918514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.425940238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.415988576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409549835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.409719518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42493249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410035311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.410615162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411528418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410472272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40972271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410159203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428179332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.442603528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410324761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.431895608 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422291617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410689397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.40960296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424423334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410726048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.409759707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410843318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411252463 seconds)
  done (took 206.685189539 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4135446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410787847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40918253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429293574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420825231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413211253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.430335067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441962442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414575335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.41039777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411161424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.420893365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411656498 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411159561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411907537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411451148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.410491914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411959023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410777234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428118167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.415143692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423159609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.41187883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413183291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.412380326 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411650957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.412207222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412516473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411768243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411722678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412230772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.426259532 seconds)
  done (took 206.652076623 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613840146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.418407125 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419291505 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.375515914 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418194497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417520561 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41498896 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.609503735 seconds)
  done (took 15.032106425 seconds)
done (took 627.899232373 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.943156873 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.636508834 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.628295332 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439723825 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.362431449 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44392395 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.438083835 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628359135 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.403663452 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.633245254 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.745870774 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.438768476 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.895746415 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.437484316 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.705472993 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545982832 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.330346408 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.44710287 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77926439 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09043547 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.718059615 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.961177672 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.625901553 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.417770559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.903166081 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.964974226 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.270289689 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.33195289 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.43877506 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.77868758 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.309234058 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.544037435 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.51165316 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.488424119 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.541330946 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.522707295 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.453780413 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485431498 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634912244 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.714052315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.12973781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.216019268 seconds)
  done (took 97.282606967 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.409057313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.408719856 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.407358105 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.409288979 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.410542073 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.409680674 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.408648286 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.409827408 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.40897495 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.409742133 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.408438215 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.411008778 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.408842392 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.411464049 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.409023011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409570563 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409690399 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.412015486 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.409561557 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.408596422 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.409094932 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.40979465 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.409146935 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.41001692 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411407832 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.411259332 seconds)
  done (took 37.999637013 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421468763 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.687627036 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.866489041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.430317961 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422157368 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42941627 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.510993425 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.423286751 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426112601 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427928716 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586903446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.42555009 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46033066 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.892856174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.426188242 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423081597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423297513 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424550214 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.694613843 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433242368 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531886205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.423517471 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.51205074 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433621166 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446033979 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424981132 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429223749 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.957946362 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.42618723 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.58608299 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.332939259 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.511987961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.910066371 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.879235489 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.333172978 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.426534991 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423623408 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.591604244 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426958037 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424733407 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.512708414 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425487941 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.895785314 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.076817044 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444490256 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.424837651 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.981066396 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.589809997 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.713388527 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43741107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910394747 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430350527 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.426074847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427489115 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.713677617 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436419694 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426138093 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.988488533 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450108221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512088104 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426258255 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427918541 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702215568 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42729025 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.691268582 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.42790428 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434723698 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.427973596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.887390228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429325277 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.096031973 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.445663592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.425054489 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589541616 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.693094066 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.013895526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.430221656 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.705779729 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924349631 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.512403189 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.43117556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.946600137 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.516079628 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.430906501 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.427052222 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.426796943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.425748427 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472028183 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.511622578 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.015753875 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084671631 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.006510977 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.534046952 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441027198 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428196446 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.990075892 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447571935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426252511 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.874314872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091832941 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448058063 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.436368187 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.084825515 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449046619 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.516429223 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43497638 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.88565565 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43051943 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.473627204 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428569918 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.43518744 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432415153 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.516741965 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.433855207 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428895513 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.066852922 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.614916394 seconds)
  done (took 187.808549301 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.423460528 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.422469845 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.439714426 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.422167385 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.423050241 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.429020883 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.422437801 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.422762367 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428957845 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.421671399 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.423013528 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.422697146 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.425625925 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.434086685 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43258851 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429644485 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.082826903 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424731542 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.439272933 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.423432114 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.26302349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.428430803 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.431700093 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.422698138 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.424622019 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.42614708 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.450748723 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.425688237 seconds)
  done (took 154.821443985 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.42908244 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.064292819 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.431144447 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.578321814 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452662454 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427701792 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.577361293 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.495342158 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.433358866 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427985173 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.427101006 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.7716976 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.431877357 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.006659513 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.649063212 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.579572204 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.008314287 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.430932879 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427947342 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.42783416 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580288245 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.442367732 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.773686799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.067405827 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43248392 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06886342 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420535051 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.430315138 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.431331208 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070753449 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.428880735 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.774639852 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519180939 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498580084 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.07160873 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.010478677 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.010120596 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.594929036 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432415641 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429236154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.428887571 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419926403 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.11307663 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.436774193 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433018568 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.106318677 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.452495593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.432333488 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439202528 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429474949 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.499776395 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.499865519 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.799255949 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.120264337 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.520383249 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451719116 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.584324915 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.850636524 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.436720078 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.01029161 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.42066889 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.071504375 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.435065573 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.421168705 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.431480868 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436652978 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.599601268 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.580267078 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.012691416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.433678361 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.010885962 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.601058555 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430927021 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431743505 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.434421472 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114639825 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.016284187 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.602004483 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.583748531 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.653569859 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421878709 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.432925955 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.422565708 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.519974414 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.432338165 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116606915 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016757988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.433991094 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.433054068 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433499076 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434199747 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.634248074 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075621476 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.522299474 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.009491402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.797422702 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.779854288 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.433989883 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.499994015 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.43329586 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.778574074 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435360459 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.498539131 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.918943288 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.781612901 seconds)
  done (took 172.210661066 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707371704 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.71585416 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532220911 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.557896711 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.056628242 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.035981574 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.845893075 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.567672093 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.551644912 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.695533936 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.684548128 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.52207256 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.625775295 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.516574797 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.214311541 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508875204 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.533830783 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567853403 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.538624193 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.494607724 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10428477 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.739996373 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.6226222 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.546671047 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.534534516 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.292578819 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.024767884 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.010775907 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.622068708 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.805947942 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.026071667 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.591584373 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.462852343 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.162581294 seconds)
  done (took 69.383081732 seconds)
done (took 720.853964268 seconds)
SAVING RESULT...
DONE!
