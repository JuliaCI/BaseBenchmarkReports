cset: moving following pidspec: 13769
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.312338258 seconds)
loading group "string"... done (took 0.591686188 seconds)
loading group "linalg"... done (took 8.109991551 seconds)
loading group "parallel"... done (took 0.171201096 seconds)
loading group "find"... done (took 1.225026301 seconds)
loading group "tuple"... done (took 1.90466463 seconds)
loading group "dates"... done (took 1.301806584 seconds)
loading group "micro"... done (took 0.20046426 seconds)
loading group "io"... done (took 0.996566979 seconds)
loading group "scalar"... done (took 39.80020783 seconds)
loading group "sparse"... done (took 12.430160145 seconds)
loading group "broadcast"... done (took 0.971749457 seconds)
loading group "union"... done (took 14.198218831 seconds)
loading group "simd"... done (took 4.806088855 seconds)
loading group "random"... done (took 9.537985009 seconds)
loading group "problem"... done (took 1.594759601 seconds)
loading group "array"... done (took 21.465530144 seconds)
loading group "misc"... done (took 1.61274928 seconds)
loading group "sort"... done (took 3.363142789 seconds)
loading group "collection"... done (took 18.322449576 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538963416 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128942862 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139021469 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120211897 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149988204 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.912395954 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124083258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084753569 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.887263859 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153934361 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11563161 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41518626 seconds)
done (took 68.160647855 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175991119 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089213365 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080295972 seconds)
  done (took 1.226164717 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065832191 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128462797 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06806252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068357829 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068346673 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067253836 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06714454 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067655941 seconds)
  done (took 1.597627203 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073993341 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068780052 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066393611 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068528169 seconds)
  done (took 1.341395679 seconds)
done (took 5.4855303 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796121312 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210166733 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189136587 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410775947 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136533551 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180358244 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642291006 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326183785 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206044605 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094959369 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112909321 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362072827 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12441134 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635420594 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078175458 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096437395 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13949653 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451773668 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072486056 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085737093 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092782636 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131361479 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090937121 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076936469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150468881 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071117086 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143536913 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083235362 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069271335 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220801009 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17550081 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658546204 seconds)
  done (took 10.416534965 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101538169 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100141423 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06920829 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125901701 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097836672 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070464396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076146145 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07024059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095378005 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132726961 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091896085 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108679702 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067048358 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07199164 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085682839 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200778819 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080254112 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082795513 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075095799 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080900099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110440239 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078551596 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080354632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080184351 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131012256 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170755898 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096938352 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098514842 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067555366 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08298578 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115173708 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127472242 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067054879 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066468086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125667986 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095554857 seconds)
  done (took 4.57738791 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007786663 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150849242 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090741375 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135330427 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.118921361 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065349196 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112802641 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066745079 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08338988 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239080169 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.366059698 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626566681 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122894615 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117193045 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105156014 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071212405 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069654095 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06809306 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.256675636 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102248528 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111665155 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086081627 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070971323 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069604025 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065454004 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072318464 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065158757 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06944315 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088501416 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07664657 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330603327 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124382162 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068669831 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.832914218 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165702489 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067799704 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105484023 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159414804 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065419616 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093469791 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139833801 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067668851 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064188205 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.297570255 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065829149 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072724448 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067789155 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086296078 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111465015 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12017162 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066119546 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069057302 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172421261 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067777557 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084433231 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.244009384 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15325292 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066175171 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295771821 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093243378 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072376926 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065827557 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.212290898 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118250739 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065196973 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06888505 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068393825 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069533689 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069352938 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365912601 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06656697 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.214849937 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069093395 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077269538 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07094951 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0723578 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065205895 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079391948 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079888621 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091618389 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067915995 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07438577 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070285503 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066766294 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067327746 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093715695 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.393589087 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068338493 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073878509 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067027352 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094825029 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101269559 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06812841 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066457245 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104750242 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070873488 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066597838 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068980609 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120582606 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07087773 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113275175 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067200857 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098451384 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095918497 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06831429 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100511052 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.075415971 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069676081 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.448273532 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064850894 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071639899 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065184126 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06762444 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066839094 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077575262 seconds)
  done (took 21.924131625 seconds)
done (took 38.988287269 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245368665 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086599278 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083941422 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08422781 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083692206 seconds)
  done (took 1.739014801 seconds)
done (took 2.902988683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125739096 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099749467 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06502079 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097557799 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068116217 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101538626 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100542716 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083973352 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099974386 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065544702 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097730455 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065158837 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06521615 seconds)
  done (took 2.286254344 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082342714 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083208265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069319309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081944704 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063432858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082433446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08283727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091204676 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082964897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074398918 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064656126 seconds)
  done (took 1.982510555 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081993335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084484284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069538615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081843709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063142495 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081951469 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081475709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087516537 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083320878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075739513 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064723682 seconds)
  done (took 1.978126304 seconds)
done (took 7.367505854 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076804629 seconds)
  done (took 1.189659843 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.530452179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.626696824 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078771361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100800345 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192897266 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109050967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.234559315 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082819006 seconds)
  done (took 8.243464089 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107456003 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070444766 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07015941 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070614441 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070868664 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069791252 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069582318 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07024573 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069525353 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070052031 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070392522 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069715807 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070823522 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069378534 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071202597 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071000528 seconds)
  done (took 2.359914213 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097216869 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09639476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073880364 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0753128 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07320599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072603535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075317005 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074649421 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072166622 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073764772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075989558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074421126 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073534291 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064649478 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074560658 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07709071 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071536528 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075621796 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075486844 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076421391 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075666818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06472787 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073837995 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075190654 seconds)
  done (took 3.03864437 seconds)
done (took 15.954425353 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116686204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078901148 seconds)
  done (took 1.317610115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07857913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07970047 seconds)
  done (took 1.287496689 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077892382 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06289145 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084418357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07407474 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063785392 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063487274 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082384285 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063695595 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063305351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063570848 seconds)
  done (took 1.829799912 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06527073 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072586858 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069406403 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078898499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070295939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064139551 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068848447 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065143758 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073356683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063524356 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068426264 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083403828 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068065896 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08487647 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06853825 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068237568 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070389178 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067053534 seconds)
  done (took 2.403860316 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063215557 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064025582 seconds)
  done (took 1.262592876 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066612155 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064705427 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066935547 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066173745 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063871425 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06274393 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063743651 seconds)
  done (took 1.586405865 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406978482 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123512593 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333052667 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071308708 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081328942 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25791876 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065257055 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069895233 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069991363 seconds)
  done (took 2.656155804 seconds)
done (took 13.481430306 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080697716 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086890148 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098555604 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412577424 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095800999 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070264829 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116640409 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182270786 seconds)
done (took 2.288227408 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219525952 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.087994916 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.492702778 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208890386 seconds)
  done (took 2.931231456 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346926471 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081254091 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077787108 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067298512 seconds)
  done (took 1.720998356 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.181374902 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070729727 seconds)
  done (took 1.397511373 seconds)
done (took 7.416406214 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064907077 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089470213 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064486103 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06593528 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065062141 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065590915 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065064493 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06531055 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064912447 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064750993 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065094419 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065137482 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066636498 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06671863 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066634284 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066279915 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06650394 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066633699 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066434389 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065078028 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0653969 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065011649 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065571911 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065320452 seconds)
  done (took 2.77800403 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082619792 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067334233 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069968698 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068443619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070333513 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070527436 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070808635 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069157126 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070940042 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068510279 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071223514 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071635222 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068786108 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071242379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068594997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071318742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069972008 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067921137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067929791 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071281785 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070658113 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069335519 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071432275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070534337 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071646809 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070621639 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068604357 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069032807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070760663 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071130623 seconds)
  done (took 3.267007517 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066069748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06134807 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0622586 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070844905 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062182011 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062861418 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061695602 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061690552 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062216577 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061713408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062850195 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062373399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063092748 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064446799 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063649117 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067643142 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081066326 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063236495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062907176 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063828015 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066976523 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062954054 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06206664 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061802195 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064229165 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061276871 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061797602 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061271546 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061996927 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061773037 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065586358 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065861315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061415388 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070323566 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065873581 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062489914 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066997397 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063200431 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064004348 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062790239 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062919149 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062733195 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063173166 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072320244 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063172435 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064499141 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063642975 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06415917 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063599635 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065296894 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06262387 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06286159 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065136302 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064149649 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068983156 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062806211 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064013804 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062776232 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063749713 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062841732 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06146858 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061210722 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066104966 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063687226 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081052558 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072284005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063094571 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064562077 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06365195 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066208999 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064379583 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078398591 seconds)
  done (took 5.812462625 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084843928 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087781578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06754326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068424467 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063864589 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063484668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072450602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063798333 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068530185 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083627862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064287263 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06883564 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068890121 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068123804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063887107 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06863971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072535846 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0643777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063672503 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067744215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064192507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072307116 seconds)
  done (took 2.701354096 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147588543 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068888587 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105253237 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072689881 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071566727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07455039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069821591 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06987036 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069790938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070832632 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070518485 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070109207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072538039 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070508371 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070530462 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070324519 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070568164 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070210403 seconds)
  done (took 2.549928503 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078852878 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067444476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087676579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067727277 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067805418 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06720445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071413506 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07271499 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067663641 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069093367 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073989079 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068892498 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068970237 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06926651 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069177978 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069420048 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068783566 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069910978 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074541204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073448064 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082875001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074291968 seconds)
  done (took 2.746075176 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07931259 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066272202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08232968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068748799 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062651591 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062397512 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068160811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066791337 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067907324 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066501414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068217807 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064209171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070980786 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068725488 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071334547 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068907231 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068002589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068765546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068151118 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063895702 seconds)
  done (took 2.538993673 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083189889 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065461601 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065864039 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071521541 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065346858 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065417408 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071476005 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065228086 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065086861 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086237078 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066772114 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067380962 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073012082 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070702414 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065499884 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073578032 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075958155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073336352 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067470976 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066495397 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088068744 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06705024 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07357913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067201725 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066860455 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066785306 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066855405 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071294185 seconds)
  done (took 3.139819432 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065655218 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064810565 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065473115 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064868466 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065037107 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065458698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066552625 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06690708 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06720606 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067674012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066719263 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066232287 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066648218 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066772456 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066564635 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067177039 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067154802 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067335919 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067287678 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06683659 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066273117 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066420337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066586512 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066652181 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066724571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066676086 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066449568 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067284697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066140256 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066578696 seconds)
  done (took 3.166056137 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076054519 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07398858 seconds)
  done (took 1.320566965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064068033 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079182325 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061528745 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073424566 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072191343 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066983821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073148499 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072787427 seconds)
  done (took 1.729255898 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085846477 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0769626 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066204785 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078560264 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076241097 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086944081 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129189515 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065975413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076476177 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066468865 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084436499 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067968663 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076965957 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070842742 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07627018 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07963576 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063371569 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071177796 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067423273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064181816 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066275137 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079917719 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075410767 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064076751 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07210637 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094530641 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082634321 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06528044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073232642 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078392046 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076264745 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062866242 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065545084 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066250409 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063747727 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076526577 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08499713 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072739531 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078827594 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06651239 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074124308 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063460934 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074573765 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076958183 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081940264 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065688671 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065555864 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063160199 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065980321 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071816229 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063361842 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069795452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063192268 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078251953 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073336144 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081361156 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064281096 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071639289 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072077805 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072464049 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077588897 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071845398 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07534083 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065373294 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081673061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075621566 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078213979 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06342438 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062837998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063511298 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080337548 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094794395 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075556592 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06620302 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066131747 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063844015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072942055 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066130052 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075181483 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07699072 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065017267 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070186282 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077911668 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06995016 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071740752 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0722008 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064172319 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069000845 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066578323 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085945183 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064150647 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063308345 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066286845 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081061883 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074859812 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065000156 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066740168 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076815852 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062136944 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065270237 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065711243 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070906313 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079332523 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069377677 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069526892 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078894205 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074162575 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069995773 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072079143 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062108991 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065749029 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067354955 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076257562 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061828601 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071914992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06859673 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064689174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076584178 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063313189 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064537277 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07701991 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075810463 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061831051 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060474628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069477167 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062397501 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064804971 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075899508 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061406634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061099037 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060851617 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071208984 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062197893 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070014044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065988857 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069968371 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.187980967 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064020355 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070125944 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077912805 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069291709 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071923198 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07470674 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071193349 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063741308 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07801504 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073846767 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06828078 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076275576 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070571084 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064187085 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068705481 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072582092 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064595481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073577842 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068866532 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072714989 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066122453 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065098084 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072106607 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066282909 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06786625 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07099137 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065301661 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081851902 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072228565 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063463493 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063203038 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073817749 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066912174 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065165117 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06802349 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072341087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066434833 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064257682 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065767981 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071915624 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074708984 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069207745 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067484721 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075747436 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084818567 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065404247 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073288941 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065351813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066823918 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066442004 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080476618 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076573229 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070299314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072754274 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062935635 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074063307 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0770663 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067010505 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064344969 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068669312 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068764668 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07571661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068012039 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064440055 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062998664 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069953684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066619296 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070843331 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063818226 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066288729 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068980028 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0623576 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070636658 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064323284 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078465177 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073610702 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064348529 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068270293 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064025527 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076684807 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063616758 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066961903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068586512 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066365622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064790014 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072822087 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062978396 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078156874 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078870314 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071084291 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067767076 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065160464 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077857364 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071396883 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074313937 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073011182 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075651536 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081349655 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068216762 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07252502 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08027089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063643377 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061174674 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073119529 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066358856 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064610996 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064893565 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064049643 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071463629 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071634629 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075962969 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062399449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071646946 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06318981 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067655234 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062681957 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07180319 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069797616 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066719734 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074655209 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062870801 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062337993 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069865845 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062385849 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062969652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063567175 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069249791 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063280862 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068449412 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065000154 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06819174 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064787755 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060765209 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068176148 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062745957 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067780227 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071518708 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061942805 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068247496 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069451014 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062698493 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069064425 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066364407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065629941 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069619157 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06918571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068377441 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069856562 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061713724 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075522975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06274954 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07572381 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068286236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059727268 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067520132 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068927312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.066960476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.062734601 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06282178 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068116195 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.062298795 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068855063 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074559459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063952416 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07899956 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075414352 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070100104 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071306989 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069965251 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069763545 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066482234 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06763304 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06245677 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067581964 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062025566 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069804966 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069037733 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067655429 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068165371 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062250954 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067381585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063023914 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059898417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064932643 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064930537 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062066023 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074120281 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06225398 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064245735 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061021158 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.061817708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061479203 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059194954 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067511276 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067387598 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.061622389 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07126383 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064457256 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067459262 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076033732 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058997854 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.060814566 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060158805 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063700044 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073500961 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.061681037 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07491051 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067501248 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065527559 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060255253 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061721808 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06093822 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059648156 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060268462 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069685561 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064645076 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061412836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061740072 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068334171 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.062486873 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07323291 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060731067 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06620941 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.061543515 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059721794 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064829103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064080984 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068492162 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06155988 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063679094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059584614 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.061255427 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066365508 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067347817 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061599389 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067608163 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073991342 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06203526 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0684403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063453301 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059911998 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068677599 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061574445 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.061932281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064235254 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068721565 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069021866 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062227063 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07549449 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.060803654 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070296838 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061489556 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06065702 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.061173206 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062220618 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.061145365 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064411571 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06256298 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074474483 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059944761 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067532717 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06736682 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065063243 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071325853 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.062690406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068506218 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066851276 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063638986 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068323639 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074609932 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064719905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069263172 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062416939 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067054817 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071247021 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064364897 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072992306 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067349153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061856819 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067579551 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063635155 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061435714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061204923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062192622 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070725279 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.300394157 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068626477 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069442628 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065660963 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073503348 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070469833 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08223483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075301667 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075980705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066611193 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066216484 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069249549 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070530392 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074807164 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076689112 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079256629 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075975321 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072451169 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067824502 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083248408 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078260387 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076009599 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068971298 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076020283 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068272375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074559047 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072705076 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07296227 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068709783 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075788154 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074052283 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070434339 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078302528 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07599202 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067928879 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073105822 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073504708 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072381328 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065410603 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067575037 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074322246 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076309658 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074207759 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067694096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08276309 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06813278 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071899549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069476421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066248984 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075307454 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06467233 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072996222 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067298372 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067847672 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064570546 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068799236 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067787425 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072949885 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06902761 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064689554 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082459274 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081136771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073186353 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065971896 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065500153 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064182884 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064421593 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069176523 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067414535 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073079096 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082253915 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069362672 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068949055 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064707739 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066752188 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074128064 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075052027 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064678859 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064745807 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069275548 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073068912 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079146091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065360117 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065736554 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07266112 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071602766 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062594114 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067494827 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062186247 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072243128 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081790207 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066677474 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072695864 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076368339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07942622 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066824246 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064753869 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066969585 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072594167 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071258083 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067370374 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067530984 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085968687 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073721991 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069489601 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065344811 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073893444 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068412481 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079475376 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06553184 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065413546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073433836 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073660652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071261636 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075119386 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075784742 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070448841 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070921846 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063512402 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069284706 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063071559 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067309538 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067053172 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066650159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070637184 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072648707 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069295596 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082874496 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080640594 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069079901 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06337015 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068172258 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06804234 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063832086 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06664067 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064118663 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064536111 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064285316 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065126752 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071809184 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074821618 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069949035 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065834823 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06479824 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.201483 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074505341 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071573068 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070635856 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061628855 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064653638 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066017367 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072487708 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066674149 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067665173 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07255985 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071922357 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071927302 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063920083 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078076788 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065303912 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071956419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068427781 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066258094 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066471509 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074412521 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07075068 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067536399 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073402941 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073221392 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068187469 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063957264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063530133 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075670631 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064165028 seconds)
  done (took 42.96338759 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101916438 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064684254 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063781889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078997335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072905921 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064245127 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063709092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065985591 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065663099 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067232906 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064135663 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06300309 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070991541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079587343 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075347787 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069200906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064602878 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06587637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06435924 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065581774 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072197845 seconds)
  done (took 2.772884793 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071103642 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078675486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075203889 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080192462 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073377432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069739562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077845776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06964416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078179589 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075421707 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078278921 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06950331 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075210317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075244343 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075308458 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069795782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078481297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074128902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070680549 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07814483 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070395988 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078026949 seconds)
  done (took 2.946389978 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064605548 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063796381 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07028296 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062303398 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063560177 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062497698 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067177147 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063183446 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067802107 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06889233 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068596825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068372007 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073291463 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064510569 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06948177 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064629499 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110840101 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068119544 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065524349 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06667312 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064200766 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073661031 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064340782 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064901858 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06823437 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068535811 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066183794 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064155685 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065452133 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067879489 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065452244 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064258444 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07228387 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071603758 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068096913 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067822978 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065129521 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065788207 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064009604 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064024441 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071869285 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064687188 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068675607 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07272502 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064125826 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06378001 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0726037 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065417094 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064516281 seconds)
  done (took 4.622376695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075771967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112258859 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070715626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094215496 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079167787 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071820099 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070623231 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095780233 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065873335 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066997272 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080703118 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080838301 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068798044 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069650671 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072499909 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068077465 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068746953 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067325987 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071200657 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067457218 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071480394 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072692858 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07944135 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079960706 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069367624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06750815 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067847142 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069559146 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079592417 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072225334 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069818416 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070689082 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080478494 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073600968 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067410798 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067934983 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080688113 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06851821 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067659834 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06590871 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067429262 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069553903 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072550333 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081356492 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068027431 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072984659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067686043 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065781904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07978142 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067982101 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072334238 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080834428 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068967552 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067933131 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069624501 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079979375 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06821896 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066622034 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068091885 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079700779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065596366 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068794198 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080699937 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067015096 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071492119 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080794104 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07342663 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069313386 seconds)
  done (took 6.418864572 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073949619 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095234592 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080142619 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080675182 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074443668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075812076 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076569886 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075188149 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0738028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078014758 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074440564 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116028318 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070265856 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076482924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073906567 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073793165 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074216845 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076369617 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075945731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075880074 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076410566 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082160069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075727991 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082356915 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079751351 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071639518 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07555015 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075958128 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082478065 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076736803 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079131455 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075821826 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075951875 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082254312 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07975815 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075601231 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06503586 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075467596 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075550403 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073892252 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069720519 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080492128 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073957965 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070251325 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073886466 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073641232 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082344916 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079255866 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077736044 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079626678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076050331 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082373009 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07563491 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075999338 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082330712 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085105131 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082485438 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083019657 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075801715 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082490448 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083197979 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084069981 seconds)
  done (took 6.169566801 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078578071 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070259083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082302903 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06250897 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06229175 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072680724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062806814 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062523547 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071409099 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074409909 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073107551 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072987211 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075740841 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074884127 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074756107 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077362693 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074910705 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074811913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07334695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075161118 seconds)
  done (took 2.779429449 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076889528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082177565 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068054754 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072256263 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068106154 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073040425 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069267821 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070075654 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070167036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069831252 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075959205 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075968407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070498734 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074568147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075662997 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074501355 seconds)
  done (took 2.488577279 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084954106 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07088 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077894677 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06383087 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069087176 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064910597 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06524812 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063657176 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064695992 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078945154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065087812 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07699063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065646438 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064437107 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065006424 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071179408 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064837211 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065692199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065493495 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078842364 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073015271 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067012351 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069516397 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065633124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071396736 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073362382 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067335535 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069394621 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065459982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065675057 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071647913 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072794394 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065204599 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066042311 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065214448 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065551019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065534892 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086182838 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071913771 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065596145 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064245805 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071379781 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065566719 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066900818 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064869512 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066281598 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065119827 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071752899 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065883874 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071437681 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065637513 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067946739 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066168458 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073382789 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068569638 seconds)
  done (took 5.107626082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079256502 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06800667 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062563261 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062115836 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067784191 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068533908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067741663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068728112 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070816133 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064422756 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070674045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069462657 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07096135 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07021387 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070675795 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069952582 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064230342 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070409532 seconds)
  done (took 2.572208882 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073077903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067281116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073003773 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067881844 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067029675 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068481726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064350168 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064318904 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064641603 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06927074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069266587 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068691896 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064319677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068935803 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069311385 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069380232 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068968253 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064277544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069111009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064090195 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06891048 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06438203 seconds)
  done (took 2.814825335 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096610131 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084064433 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141342653 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081349289 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090080565 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074806651 seconds)
  done (took 1.896598155 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093106439 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099219719 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068483326 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067671571 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07341809 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070979051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072335577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07304493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077589683 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077160017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072683569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076854326 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075797201 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077846928 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07535122 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075962048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076357753 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07429943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069854633 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083485155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073675133 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078620149 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07326234 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073124736 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073016696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078572441 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07616213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07622971 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072655314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077569289 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073728433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071410912 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075815655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075747534 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067836858 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075591374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072512343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083285922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075355768 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078664403 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06910127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075776805 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077720188 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07736781 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077975951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073009558 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07637933 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072709289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073804753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084365207 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076360372 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079797985 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07577701 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078346297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0777608 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08446018 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078363255 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079475882 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074771945 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077716607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079336971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075225866 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07934131 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076433268 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073465722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077396451 seconds)
  done (took 6.365619843 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105360414 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06832201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072887099 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078060563 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079457191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073655356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073548773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073622008 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073299261 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070322643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109478347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073870981 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080601648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080501844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07391676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073893495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073520976 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079870368 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070813739 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085242795 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073542802 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079625744 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080327525 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079642348 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077810754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075686975 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073424118 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07300846 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073436962 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073043742 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077193169 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073502464 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078047503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068618097 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079727883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073456947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073066406 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077259329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071718555 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073588523 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078076535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081462214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071190919 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071351706 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076190672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071006905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07095305 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06823198 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071600486 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068826099 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075989109 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076127724 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075840532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077863013 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071712839 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072906961 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073384994 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073030791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075557349 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076289537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079968683 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073587965 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084949711 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073313951 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0733907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079965799 seconds)
  done (took 6.365764293 seconds)
done (took 129.181927913 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210917522 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18489536 seconds)
  done (took 1.710521223 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074647286 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105951587 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083708766 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133451948 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071896558 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105659426 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104879645 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083810702 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072099041 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07188214 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072050263 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074760667 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137118605 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071554128 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071654234 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074223369 seconds)
  done (took 2.742189924 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106097555 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167486758 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108920002 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069705852 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105032553 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077911387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06953824 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08284164 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076258854 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072250923 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077913603 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075792733 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071429007 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078177223 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076271885 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077528005 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071757263 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078231359 seconds)
  done (took 2.879735697 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104118188 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095323696 seconds)
  done (took 1.537094374 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177782617 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134978736 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204760859 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341691662 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.152237383 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.427934524 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140774623 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.1404652 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117353575 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13589637 seconds)
  done (took 3.311548352 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1050515 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190850343 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294332089 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121260611 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076282795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111385121 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123081103 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082328297 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080118652 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07973776 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079886518 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079050499 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10159947 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077099139 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076331755 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078598898 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104140584 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075550745 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07640273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076612131 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105148622 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071016012 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078083042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076370575 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078957428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079203097 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073273159 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.0720208 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079347501 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078612929 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082692156 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.110431628 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078373057 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105155207 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075137261 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105584751 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079065907 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075248541 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07652931 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075633757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078504076 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078242501 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079489041 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078637351 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071771796 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079385223 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071931817 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07029008 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08036221 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071384936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080308162 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079630229 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103992522 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071306045 seconds)
  done (took 6.203456833 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109262965 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107676268 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071712149 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11366021 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10502486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071007543 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106017391 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099597377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108629555 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071397202 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069914588 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071577683 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080121584 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082036901 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116608108 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108748919 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073457605 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071226573 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109200003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108621598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070502772 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10264548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098894409 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108233013 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069175812 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071540277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06966418 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071243447 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076993761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077846427 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070202245 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079882228 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083895172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077527998 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068624507 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069779198 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069908159 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07836654 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079546564 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078763106 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077123998 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069223003 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069859918 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070260806 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070231017 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068770852 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078537382 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078928979 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077755493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070054993 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071325761 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070343552 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07129597 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079753596 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078284942 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079431262 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078568925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069614317 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069709531 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072065981 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079593202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0784209 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078193544 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070205979 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078892195 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06987646 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079943373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083078277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072279614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070810075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069730088 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069939042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070641373 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07679829 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07717854 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071080844 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069680403 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069647128 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078942385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077283397 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069761505 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076742592 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068790393 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069748302 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070928122 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070839092 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076734577 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.0783308 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070609928 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069407001 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06970139 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069325002 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068639555 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076073397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078602563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077851625 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077104856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070218028 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078166077 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077387082 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07094925 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078059779 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069785461 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071529481 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070266139 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077414515 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07580853 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078004606 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069504617 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06880001 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076345699 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078880425 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069131693 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075559022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078051727 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075843877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067771699 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078344846 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068642721 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076909987 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068521861 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211997773 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070646135 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078750234 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071113484 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070257317 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07058413 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079163665 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071763909 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069787915 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07074389 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070870252 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078326784 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082004842 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071449651 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078055782 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077856647 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071569444 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078145155 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070226529 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078058558 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070587503 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070857168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069619194 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081181081 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070396227 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070146729 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070305412 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080489926 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070509176 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079343456 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077352264 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069170647 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081417884 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079764737 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0769141 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079318418 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071538891 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069953174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070227476 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070233377 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077059107 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07917924 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071604159 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069776244 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076986128 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07957621 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069230319 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077677158 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077421076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077658604 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070190404 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07051399 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080018766 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079739448 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077324296 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077922983 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07842007 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070312267 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077586691 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078056025 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070156651 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083097822 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069959485 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081532569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078185817 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076714539 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07888517 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079344921 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079493861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079865075 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081966228 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069565246 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069972908 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078880166 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071223744 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070113098 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077157973 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070710285 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070740949 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082661524 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07016218 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079242868 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069255051 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078378166 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068749523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070872204 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084711833 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07266203 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072780307 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080104696 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072336813 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079523845 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081081321 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07790592 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072042356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071400165 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078384945 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078282022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06928907 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069202221 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071131519 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076740687 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076370692 seconds)
  done (took 18.626819669 seconds)
done (took 38.362749872 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20941047 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152983454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184556484 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114799464 seconds)
  done (took 2.101963555 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107650338 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098484585 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087898479 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065886421 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093974343 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066455348 seconds)
  done (took 1.888899654 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336471856 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213036143 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193631643 seconds)
  done (took 2.113801743 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223044204 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211753588 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464175973 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284079501 seconds)
  done (took 2.646836629 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143592696 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082879273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065128517 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.078128167 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125085161 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.175404333 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092738942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12707012 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072106891 seconds)
  done (took 2.383661871 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146081671 seconds)
done (took 12.672876434 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.215522799 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132691971 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.231545268 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.195232803 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103456689 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 0.18577289 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076130173 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072965034 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0750664 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198418474 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071027352 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072126089 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08650905 seconds)
    (14/309) benchmarking ("sort", Float32, false)...
    done (took 0.136602367 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085990419 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.241044852 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207004072 seconds)
    (18/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072902625 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076789589 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.355799303 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.101550445 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210627119 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18568598 seconds)
    (24/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077920293 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076638834 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109270627 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.176459708 seconds)
    (28/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.16956383 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068056433 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162841894 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091758161 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075473609 seconds)
    (33/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168851064 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147994054 seconds)
    (35/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.167619875 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068367214 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205983033 seconds)
    (38/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089278719 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096787004 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171802737 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181203033 seconds)
    (42/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073185409 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078896296 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118930536 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176133271 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.23030029 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169752476 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.101530398 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.1695618 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074518504 seconds)
    (51/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066847106 seconds)
    (52/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120402389 seconds)
    (53/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137017589 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066972208 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065213969 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099174355 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099486691 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125003831 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074906686 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074129012 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066071159 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07806115 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.155948657 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072738758 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074284938 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.192345811 seconds)
    (67/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077920595 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068758261 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07507316 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073747223 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192530648 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.067628875 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177201691 seconds)
    (74/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07466603 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.20007085 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.171223251 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074264337 seconds)
    (78/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065679761 seconds)
    (79/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07480593 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086913503 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065192773 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124400547 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065781931 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077959772 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089264464 seconds)
    (86/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123680574 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169911511 seconds)
    (88/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093196172 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.176361426 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076080518 seconds)
    (91/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.222978127 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090602949 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067417116 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073940128 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067465924 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181172921 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091052775 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089106111 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19643062 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129429464 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073392611 seconds)
    (102/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105651476 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066635132 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073687637 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075872645 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.214795463 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231720258 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119235119 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066291679 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090256466 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075286737 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066992107 seconds)
    (113/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072933703 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072942997 seconds)
    (115/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07799908 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116547189 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175583549 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220158785 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072952024 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176836258 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068012699 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066809213 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088368945 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076704482 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066284177 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093231008 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066626768 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130300203 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066398765 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066979368 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06682253 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169211807 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066689194 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07477829 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181594101 seconds)
    (136/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075391952 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.125955478 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066491036 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138223097 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090236363 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112043431 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.08157817 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068279146 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087835741 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075535456 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068289423 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073890465 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080114312 seconds)
    (149/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066656425 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079548404 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069703635 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073783863 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.128056146 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075558047 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17967069 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068080689 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165112999 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07451206 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072597581 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065806105 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066802753 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066020642 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074487747 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143813699 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074079331 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074614035 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070530828 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065811349 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064960529 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135336167 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074232381 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17009857 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142835929 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067248057 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086193098 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066242582 seconds)
    (177/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13721343 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074888139 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.19499158 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140898637 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065539851 seconds)
    (182/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178372182 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217581354 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071559303 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122684888 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065166335 seconds)
    (187/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068359341 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065962367 seconds)
    (189/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080971407 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081749766 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068501623 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065778268 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066941408 seconds)
    (194/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066079126 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077986225 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091306879 seconds)
    (197/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065756745 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091531767 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073014866 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169044173 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066420852 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065294099 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065184328 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065623328 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.068366454 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168681483 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091771389 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214186042 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072647939 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.245623186 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070809486 seconds)
    (212/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192090767 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091745103 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066028023 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088232349 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066569716 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076234337 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073331963 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066375126 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076358722 seconds)
    (221/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066919458 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076627518 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074553937 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088110532 seconds)
    (225/309) benchmarking ("sort", Float64, false)...
    done (took 0.132785583 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137046997 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092107705 seconds)
    (228/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079807094 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067344782 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118677291 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074465906 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065992367 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067900804 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067273958 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078526367 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066322101 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078946257 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066850399 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088904646 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073255775 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069672917 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07783073 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069774369 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113699172 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132292122 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066889528 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066350417 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068598912 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076655997 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066858423 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139842536 seconds)
    (252/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091090086 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065511895 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068923739 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067466495 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072982584 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077178703 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066697443 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06641008 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066900533 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067188617 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067264622 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134022875 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066781725 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075753961 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068155002 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069154177 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067140185 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07298761 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070508485 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079313154 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067558628 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066333923 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066891091 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072783871 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068932996 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125246531 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068194983 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122358694 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067400474 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067345212 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065517275 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069364844 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066824878 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066819392 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068030932 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091636846 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119681078 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13084824 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179177583 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07424757 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078422767 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088279632 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066216281 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066601293 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072975294 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066883731 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180009523 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067872877 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078005432 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068398049 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078541762 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065260812 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066178519 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135862929 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06591316 seconds)
    (307/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069991624 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076367276 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065146077 seconds)
  done (took 33.029911159 seconds)
done (took 34.414182167 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087891952 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100080408 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074065763 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093662314 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082224617 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096807884 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074993967 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080168875 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082640203 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080876399 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079609681 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073173524 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075851452 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075899036 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073752571 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097265968 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080047468 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0743399 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074587672 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065758698 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074816684 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066605827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066219909 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072042167 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077524455 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073465851 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075502153 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075599937 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066408507 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06669487 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070831567 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075068522 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066023477 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078494676 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074936296 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074337886 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076085694 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078820111 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066399754 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067370869 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076094153 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06655215 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074672255 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072738405 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071345743 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072764893 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074560777 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078529166 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097161106 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070718752 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076603511 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077301698 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077858191 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071986045 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071610513 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074509144 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072230632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0969824 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074816984 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070924224 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075948046 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075352081 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07295972 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074183628 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074338479 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076990915 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078432711 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072721564 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076448332 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073088994 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066453828 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074123156 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071074053 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066604346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077109561 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079083558 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065532463 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070701655 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07392996 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07433849 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068702693 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070501784 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066132985 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071239488 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070756728 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071887646 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07110052 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073260924 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065847821 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074318474 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07348224 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073985647 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066067071 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078813184 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066359307 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072268003 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066661723 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066262797 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065711683 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071180283 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066299138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070558004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074774541 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06542363 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071145478 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079490312 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065928417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073149031 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065740306 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065887193 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077635732 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075984394 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066120088 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070488618 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065534499 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071638773 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066058459 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065696034 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066066386 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065921252 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07059169 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066044112 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070214871 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071227196 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078364001 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066052748 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071088001 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070581222 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066194045 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072601645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066355783 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066094752 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065614409 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079328438 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07016716 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065563318 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070857158 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070520743 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073548622 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064640844 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074167729 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071833123 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069769649 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071588157 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065027807 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075953359 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069739507 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069384779 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064638056 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065277153 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064595546 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064646628 seconds)
done (took 12.57788019 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069545064 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118369335 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092499256 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092791623 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082189893 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067133397 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073855328 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091705044 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068393839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096085211 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088219834 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088246335 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109648776 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06641369 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067125358 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067875185 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068254812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078402767 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09356178 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088732645 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105662768 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067198901 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086254959 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086499345 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08330291 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090388693 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067978448 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068446401 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069747247 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087162692 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091832329 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06963744 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067737888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090336173 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084380172 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079563114 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067100768 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07524274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067897738 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06658149 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068394381 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087820243 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075046378 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077488934 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068156495 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074694775 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067981121 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082245802 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085197969 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074859027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082632873 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090793135 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070831344 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082827675 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066173099 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082862025 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075928543 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067547213 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067656183 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072406646 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067178287 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069429 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078085254 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075559474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071309352 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08174475 seconds)
  done (took 6.635092934 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084469092 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094533787 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084196333 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08355114 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066506846 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067174632 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067283584 seconds)
  done (took 2.019318725 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070013742 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087069493 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090606117 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090654697 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084587982 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093936263 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077605432 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069348741 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098870422 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068908139 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090522945 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100553558 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073401396 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080915156 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094210272 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068593023 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092698702 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068114533 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068101463 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091600641 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071805271 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094157799 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078558353 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067579827 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079943894 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067632179 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099320854 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075176892 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068860076 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071063541 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070701178 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094812569 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079406262 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081802643 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068638457 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08261827 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081062023 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070789498 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078387866 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076845883 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080683362 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069716073 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066907962 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069927764 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070624525 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078759644 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066410244 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06875468 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068449985 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086829119 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066366081 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079560318 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07115923 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073052946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072940384 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07240434 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075538761 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068811891 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086844069 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068617395 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083961018 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08366996 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080727423 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08361325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067326646 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079499136 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080922653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068683548 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069536389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06884508 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083712686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070446539 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06907838 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07896317 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067238037 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091706242 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091415594 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067019104 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080080372 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067843367 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068686996 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078819797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091949545 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073293131 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068373727 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071470136 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069705016 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070426046 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066699587 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071356279 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06884746 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072940157 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068781036 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071079837 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070338098 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083666674 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06697311 seconds)
  done (took 8.907769422 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069645954 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069425658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070380394 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06813739 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068476951 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069336322 seconds)
  done (took 1.915331832 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099952142 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068792508 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081543251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070644488 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106633051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086360188 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086355116 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088095361 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083914654 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082573201 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086779455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088641439 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08921939 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070895837 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083073093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069550047 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083503339 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072579596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079656937 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071332487 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081337865 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.0704055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070892806 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087826 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071744971 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069744717 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077760799 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079344676 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079454292 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092368158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07036942 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071852577 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076484679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085584635 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083986729 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076466368 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068088436 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074705113 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071041232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071662834 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085737274 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070637567 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070790544 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074281324 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.087970316 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076046696 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074241829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076571227 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082940447 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074277766 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074636548 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068996674 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071715597 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074300952 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076052237 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085744136 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074223439 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083085237 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069872191 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075655242 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06802229 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071558886 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087329491 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071247451 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075366439 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074079108 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075910557 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070738367 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070659294 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068186124 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074744684 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067943637 seconds)
  done (took 7.054932582 seconds)
done (took 28.017693366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534056827 seconds)
  done (took 1.987224426 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620457888 seconds)
  done (took 2.103227406 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.529189025 seconds)
  done (took 8.005209304 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411315893 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.638863887 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746017529 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133801046 seconds)
  done (took 3.439653196 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711648844 seconds)
  done (took 2.201708271 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234413648 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224654283 seconds)
  done (took 1.956039573 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346874761 seconds)
  done (took 1.826038379 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.055284525 seconds)
  done (took 2.536614246 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250239009 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168938332 seconds)
  done (took 1.902452012 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44367296 seconds)
  done (took 1.926333405 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.223900721 seconds)
  done (took 5.710767503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21849918 seconds)
  done (took 1.739703443 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233435047 seconds)
  done (took 1.722542868 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.721367891 seconds)
  done (took 3.212454542 seconds)
done (took 41.763649465 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082618571 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085291849 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084737194 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080998801 seconds)
  done (took 1.805559852 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074923331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071009857 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074609503 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070897848 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075035574 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070825539 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072098432 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072928759 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070379947 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070893422 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070855925 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070723481 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07376006 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072721841 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069840585 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074389636 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0744092 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070719399 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073568373 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070625696 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068629039 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073241673 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073659621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070054839 seconds)
  done (took 3.224432011 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078567168 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073001965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075794037 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071954831 seconds)
  done (took 1.798800611 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076665241 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087457738 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085899529 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077014504 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088278816 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083693674 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067056918 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06732064 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068665839 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076614407 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066096823 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0926569 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085710175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07739178 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079098949 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064010607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066608793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084965752 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077406164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077787702 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068799314 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076838025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066406079 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086766001 seconds)
  done (took 3.344717455 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085840201 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066268233 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08647359 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091566341 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092662965 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066382728 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084338484 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093918971 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140233172 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066168728 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07218189 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066513586 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104624603 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06621881 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085474891 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109188464 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112491441 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070633436 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098737485 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06914664 seconds)
  done (took 3.236082859 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083556842 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069855598 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071029109 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066711103 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077110567 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073005571 seconds)
  done (took 1.947964553 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068746629 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067974224 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067968178 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067317519 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072490245 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067722555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067283501 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070579798 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070433024 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069778724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069773887 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068839122 seconds)
  done (took 2.332406765 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193149984 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070108401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071017742 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066867559 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072587039 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067399625 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08314723 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071803718 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096587999 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069379075 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069644801 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071813984 seconds)
  done (took 2.508961322 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192200467 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073734256 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220227334 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143865344 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101992222 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109265085 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110647708 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107502953 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132811564 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096974497 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152266425 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158778136 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10365164 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128596777 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087040072 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119998015 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143368879 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154809086 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099140377 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153563165 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134128673 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121572366 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140626893 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096665791 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100775887 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112138421 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071691393 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076964421 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157749948 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122351838 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135138205 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104727167 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089281754 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164487176 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160673568 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131217848 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140664558 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081315614 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116879888 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128296796 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192156821 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086961076 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149882365 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102049768 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077000275 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122674914 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108523852 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113652118 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.09857608 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086049198 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272709695 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172276192 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127990792 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085255392 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116353023 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104656124 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108757616 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113594762 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21549208 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149339538 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121403712 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069595382 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106219822 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142426776 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12523569 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103944063 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117447398 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089737787 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123687147 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150995459 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134399661 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132039111 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.13446843 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084275606 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114372159 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129778395 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122395156 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160559461 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117298746 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07122601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11484538 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094770705 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077611454 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141664858 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073657471 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164162766 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095398723 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119829954 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124482165 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104462594 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104471729 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14894737 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133381125 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100667899 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08412917 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098871268 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113185989 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14022653 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083315465 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102668023 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108159721 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07638846 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124658568 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07251542 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113711262 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091876979 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111832784 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118644557 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076192172 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11459164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096235728 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096495686 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120051421 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142678804 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082572276 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076281684 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150361252 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112070928 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096563905 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129510646 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143706142 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114791312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090717019 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131912201 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15666098 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084926231 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14599391 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095271375 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079178402 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09921671 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113438093 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101761516 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.113171926 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076097163 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110158486 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149712471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07076727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090331407 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121604185 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077112315 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076039478 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097115444 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096230207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.0905518 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094717715 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096621857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123898792 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113000736 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0985463 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11273534 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093256537 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148911291 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082406516 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096450593 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097604001 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069217357 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.120971928 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14083207 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074436459 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144103851 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.112403774 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107253152 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10984703 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078815212 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12224865 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0738966 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068505241 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122717887 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.362755661 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107335984 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146778469 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112506542 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120669543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116992199 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125752667 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125195353 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126011396 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112034792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088157695 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112941449 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161529644 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072570311 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091456117 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081433037 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100776115 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09183325 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083570042 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133957111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119588352 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107191472 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111522852 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094252571 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141306889 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077574229 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118245421 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11694379 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092643828 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145847778 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143033248 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125491746 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097844702 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13097286 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074188061 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074242177 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087380766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119228997 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0849724 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083891359 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110885321 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143265515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127355028 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133081143 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120683533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116804568 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148536014 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070928387 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115822849 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136615604 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11552774 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101093192 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088028308 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095097038 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135527437 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099287776 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195210353 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108213955 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116901082 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302196782 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099362685 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077791334 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100283583 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125933969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098995261 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135994624 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095451075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084200605 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103285356 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075852095 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095616988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128767484 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111483779 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128272372 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107315772 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122536915 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075660313 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107402257 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117820059 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118500904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081868476 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115414346 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156991504 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101012397 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1113741 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141969982 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077092296 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134527679 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161406645 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134895045 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083982097 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103592376 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117529131 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120833742 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120834217 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135409925 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103319565 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131348553 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108040544 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084923999 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08531609 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092773654 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099349075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108148457 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099976562 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109641501 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092650755 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129065127 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098565412 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106200353 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112126257 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09749514 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092984158 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093119303 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162631434 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111689689 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156012299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095565401 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132856775 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302199919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074679522 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078091024 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079137295 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130456868 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083504495 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123000914 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107579652 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111249651 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11693649 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130040937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092720982 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069821419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106522816 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126138488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11727945 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092789002 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099201146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153059476 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114058309 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076606798 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108281811 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111770207 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10063809 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163469022 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079412709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105484406 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075082279 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077810013 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119545864 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14270396 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080853095 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100308079 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114538018 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106512561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120028424 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094433008 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106949737 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125003629 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138294008 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119762028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086917841 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105903846 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121673378 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143565401 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099596751 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097303908 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163268312 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141928887 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151594603 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084721615 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109238904 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108976958 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105023279 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127807712 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08175484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149494432 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078619639 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125244496 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096484866 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085826819 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272842901 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108474563 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085813637 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139290179 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112056143 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080421126 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077719833 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106196233 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113408923 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097690842 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07302631 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136671189 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071885816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127588632 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158739009 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078726288 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102691199 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094558428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081204058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101140375 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097750199 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083145899 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097032377 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159742475 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085676486 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143221175 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125723485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109536083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129463532 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099844363 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642448249 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077616839 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142149949 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110670995 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168775578 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096186731 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113349402 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106182302 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115564663 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134018682 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098101502 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175314511 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122574259 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112372809 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076432521 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097889425 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098834708 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085726787 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102271959 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108612571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107948432 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091332146 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112380838 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115652399 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080386545 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093332537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143966398 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109267796 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138233731 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27960661 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082873875 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112293258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126366339 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078407116 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11325297 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141512236 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101562762 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11940115 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080957667 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096874907 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162353339 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071165508 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148165662 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114179074 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105324182 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110902673 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106313549 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123668513 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099693574 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116091491 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089982762 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140925527 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109441631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081634616 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077210729 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101431196 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105821581 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094971999 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094628611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096519814 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142301748 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069965382 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094118413 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109674049 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139998266 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160260969 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10212507 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081434266 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115508306 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151378033 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109677652 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115311789 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079563151 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078603755 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079369153 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098080716 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11947946 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108660402 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113778233 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107968146 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150282331 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081835384 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223130863 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092553214 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101282338 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086816132 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07796112 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092567061 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092017295 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09824998 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105881793 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312222424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093695049 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087292351 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089885061 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074599387 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083393709 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120487715 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104601045 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112109547 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116531153 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079961777 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098808304 seconds)
  done (took 56.749125732 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10310338 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076514417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096438533 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143858146 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120738578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19906215 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150431918 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188186673 seconds)
  done (took 2.705516275 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067833069 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094339349 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103236622 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082459417 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066987768 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068392645 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223681288 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080690709 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067077538 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091093125 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077024365 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068642466 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452785396 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067413864 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068260311 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076841865 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067928876 seconds)
  done (took 3.443035942 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381257615 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61419552 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352087527 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075775189 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.999907382 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088850261 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.242305307 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137343193 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081417637 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549925444 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368116079 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135967824 seconds)
  done (took 18.654572062 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080900201 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075215473 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089408577 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090061849 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077427999 seconds)
  done (took 2.041466041 seconds)
done (took 105.306239966 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080727265 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439999425 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068949277 seconds)
  done (took 2.16248661 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090452972 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089013904 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088388182 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086324525 seconds)
  done (took 1.990188135 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074529911 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076431323 seconds)
  done (took 1.779823476 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.205387275 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172854675 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096522443 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082943278 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079849112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080321061 seconds)
  done (took 1.87785456 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072384236 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072622224 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074091304 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073656619 seconds)
  done (took 1.922436261 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068534161 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066751221 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068792271 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071589708 seconds)
  done (took 1.906453893 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083823468 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083966192 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079190009 seconds)
  done (took 1.877316437 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100516008 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090007476 seconds)
  done (took 1.821163618 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080800583 seconds)
  done (took 1.711749177 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089876277 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099732569 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129461382 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114081848 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135342232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113670233 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088310937 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085163799 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078586775 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091633335 seconds)
  done (took 2.655643265 seconds)
done (took 21.886182912 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078550683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371992053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360979026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090668299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669184787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356977971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993416073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092572683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14200991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069152226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0861189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649581783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983102418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333108401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969446316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331120254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653158293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068822453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068117867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069084259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973798953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068798904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069613149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070193247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649748605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374791887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071200442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330897445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068902145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073399389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35861373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07043479 seconds)
  done (took 16.231648067 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070404385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12144373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073424019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084361816 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070792572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070241205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071850274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069291037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122488555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069258711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086803623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068437267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0725627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070430765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088605868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068593501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071394017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069851696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069256909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070545688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087829716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06925146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070247405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072565205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070356292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082400637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071376671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069400891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069832618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073765905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075160979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071149397 seconds)
  done (took 4.089827692 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116611213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126054348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074025623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105588872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112290843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070830048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146289237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093251179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12956468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069907566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087168207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068790397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104227459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07063627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089965639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070080175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072674715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069845358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069236179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070666571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088460352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069250392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070147805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070041354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070367478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084632754 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071299657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070013453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070334586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073735285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075780469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071235682 seconds)
  done (took 4.351740989 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070302444 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073055433 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081819372 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082094914 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06788245 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069983159 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071728978 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068178486 seconds)
  done (took 2.236560056 seconds)
done (took 28.549234539 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078241505 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068137157 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071542336 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086997239 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074191604 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078756364 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065393463 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075204126 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072565588 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072109945 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073467616 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067406485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070582389 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065527078 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072976907 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066577546 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080903147 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070910771 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080194114 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081216464 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069695867 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07288566 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075364929 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080639219 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08075686 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080843515 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076746488 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072990124 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067748484 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070760131 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070339858 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079550943 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080700645 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081003236 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067454855 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067537185 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071551257 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068937564 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082095618 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076252034 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069090674 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076171716 seconds)
  done (took 4.735935594 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084067941 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090051985 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08233973 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079648769 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089735514 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082376069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086349934 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077108806 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077518659 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085730317 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073758334 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080832868 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078563223 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072577169 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077450251 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07446622 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078924949 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073726305 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077125434 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077994141 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087090174 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072846757 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087427467 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079514794 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074790392 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080298725 seconds)
  done (took 3.740131952 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073651198 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08577386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092507025 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142370035 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110460665 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079958337 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081910116 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091227489 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09629448 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068964959 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07256071 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092289021 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093102145 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074235795 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068596196 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083903132 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083860395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069966499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075018917 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096552637 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088783689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084980216 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093192564 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084362223 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067519946 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070734297 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07274845 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086154516 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070252591 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079104348 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070854066 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07175923 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069448478 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078682537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071195443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06772005 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092299712 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079576084 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080618331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068559638 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07778124 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069082759 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093576471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127209944 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068291354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072660255 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07197651 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079417712 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067609327 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095131191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080062431 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067989764 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068681829 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06744158 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067504245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070578811 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069512848 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070267538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077820042 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075346836 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089476215 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07282987 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085325105 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06762417 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078280206 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067269397 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069764825 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067184841 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096219059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069337777 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11128746 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068875679 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066739868 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07926391 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078001203 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074067848 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0678922 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085144485 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079308294 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072398524 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076313142 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071645356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071660848 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097675362 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068197039 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067782113 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066731184 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071954295 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07187044 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0688308 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079960748 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067464035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072184459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085867213 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068119813 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068747105 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071876307 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070376667 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067505285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078799861 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072093694 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06945043 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078547975 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069475834 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071577021 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081193544 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074598352 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066982337 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070586732 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071421093 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069730139 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069590201 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07135427 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070230959 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074559587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07458616 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073561804 seconds)
  done (took 10.718218047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162627974 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155433099 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070571379 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1471034 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076989491 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080323764 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150582055 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094725464 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068608336 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069783734 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068682985 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10926215 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105467699 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116171721 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081545153 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069158566 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090898257 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114500208 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152606417 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.1464359 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091166453 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076309634 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071349456 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070135806 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07089026 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078284201 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085385259 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077447934 seconds)
  done (took 4.443486183 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077489801 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103084109 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072654534 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091364939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088393492 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069010064 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070495436 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070265829 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085358305 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077783773 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069117468 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074018322 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072931993 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071490252 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069532962 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075742711 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076272644 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067966447 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073133634 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074035394 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078559171 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093317521 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072780123 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068847452 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071266335 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068917319 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076874956 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081329841 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071456527 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104378079 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066656839 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073758144 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082724203 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069491136 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068348056 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068923657 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068903972 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068829079 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070466823 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067352745 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06731238 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07269324 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067536432 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077038474 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081604583 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070218577 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071055038 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07145617 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071473957 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066435877 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071345054 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071389103 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071491107 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075765157 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072872595 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07202375 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069762222 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095884882 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074325322 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067900469 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06763232 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067403416 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070925742 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078377824 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084213877 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.0709761 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067422656 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068498191 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082854089 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082350675 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068933612 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074207135 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066565741 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070496106 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071305941 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071463697 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072868707 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067453652 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068374345 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068767363 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06973532 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068569494 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067855646 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071540126 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067570913 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068132993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069277023 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070486283 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077422075 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067911441 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072496249 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069346718 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067606458 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071463235 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073955896 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071610981 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079546142 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079505965 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069135863 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067250072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082216254 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071931835 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068482294 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074517732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073558597 seconds)
  done (took 9.395418245 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090420921 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069147738 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084735341 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091412079 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078605 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073934795 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078449298 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068047511 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084541369 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073035918 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076470614 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066960428 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079437644 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078588495 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069043464 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078706484 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071433658 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086002671 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082742251 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067077127 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077023708 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080565851 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080307107 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082436377 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08204336 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.0833501 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080231652 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077974464 seconds)
  done (took 3.895281635 seconds)
done (took 38.57389375 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.730736181 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.891487648 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.720706653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.916178466 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.913491015 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 78.867585137 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.917721697 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.718011313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.043066338 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.764770054 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.036722277 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.969747416 seconds)
done (took 137.285774576 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.749357482 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.875319087 seconds)
    (2/2) benchmarking "String"...
    done (took 1.972930081 seconds)
  done (took 5.510062274 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.91630886 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.394246239 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.966239045 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.721384265 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.72712012 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.975088773 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.492739104 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.168722223 seconds)
  done (took 30.109054926 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.909881725 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.945764557 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.420761328 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.454151979 seconds)
  done (took 15.434274175 seconds)
done (took 62.472093454 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.7742726 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.781697913 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.764911961 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.7314412 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.812287858 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.732492638 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.335689906 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.817775204 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.720526865 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.74491887 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.723450243 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.147410427 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.733981012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.173792094 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.723070563 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.722683519 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.756448482 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.188991488 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.875624977 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.740436344 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.74192195 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.751491082 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.726166343 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.888792295 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.748578875 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.723783542 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.147586095 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.73185785 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.337549408 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.722587754 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.759590265 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.183006412 seconds)
  done (took 203.128705439 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.723082769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.855530922 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.934332607 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.726043279 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.305885563 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.91669239 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.819973364 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.327346108 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.724978538 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.729534073 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.911932947 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.726904437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.941484713 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.672825815 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.758850488 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.732289628 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.837495608 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.945017365 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.764966034 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.870377935 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.736737892 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.874098058 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.825901033 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.899373357 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766892633 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.816936267 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.728792493 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.732964269 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.906719858 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.814900062 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.740317142 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.745763526 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919562426 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.592410868 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.724374627 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.745990703 seconds)
  done (took 168.462597561 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.907228296 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.724905085 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.723135895 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724075609 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.724024619 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.730101489 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.723862758 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.845664191 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850366171 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.393311541 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.096565829 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780455479 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.7243841 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478860765 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.722712369 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790002612 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.738385529 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.729116381 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.739472825 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.750096338 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.728768524 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72482829 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848851847 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.737713529 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.724441134 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736714061 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.724598311 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73028941 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.111258896 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.724171046 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.832101571 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.729435776 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731194482 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.965504419 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.725660489 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726331687 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550984065 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.214576466 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.725603617 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.805002766 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.72658854 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730497552 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.725209041 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.942893525 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.726967334 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725898361 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.726667729 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.726311684 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.838733306 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.729252198 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.847804709 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729072252 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.20344557 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.72650375 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.72725987 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.883338077 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.284757048 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.725785696 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.729361236 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.725525279 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.726433948 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.731269354 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.105916017 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.798299461 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.727836111 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.726939547 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.728044817 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73355833 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.726612107 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.84654048 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729984713 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.148216193 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.74217847 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.847895849 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851294724 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729541628 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727426297 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.792909924 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819467399 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.72808249 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.727862341 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728972121 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.729568646 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.809226529 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.729731385 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.814515579 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737612293 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.730403212 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.780630097 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.796006379 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.728567055 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54919301 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.730494499 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.728512415 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971415238 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.793640531 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.729032787 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.728983298 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.8073371 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853876647 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.451201242 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.731985607 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.090066732 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.803638661 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729883635 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.824127334 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.72879593 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808274538 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735127791 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.729739065 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764260315 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.730314965 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.741485342 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.732087823 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.10097142 seconds)
  done (took 394.530305749 seconds)
done (took 769.748748137 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.346462359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.31996085 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.420682765 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.332574716 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.303899959 seconds)
  done (took 13.394289916 seconds)
done (took 15.065045239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.806609353 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.811305288 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749329624 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.810796794 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745707216 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808499861 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794783318 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.752968728 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.778190457 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.753217705 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.780686902 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753364369 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.737833836 seconds)
  done (took 24.7545251 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.963921704 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961542134 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80009894 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.960466911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772894457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964809066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881449852 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871823323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.872066595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741859999 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738748737 seconds)
  done (took 22.202308645 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967166611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967049097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803563922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.96603813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774259618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969553521 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887366938 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876405583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871929861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741579345 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740617817 seconds)
  done (took 22.237731419 seconds)
done (took 70.866152715 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.732976602 seconds)
  done (took 3.405365163 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.753872623 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910572881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.73569237 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.735504137 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.733129194 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.73437877 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.735280362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.737828822 seconds)
  done (took 15.749679886 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.733684259 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.734651805 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.732320511 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.733502721 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.732425939 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.733878151 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.733195924 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.733427597 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.73342102 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733328271 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.732789873 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.732820569 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.733759522 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.73404001 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.733411958 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.734603999 seconds)
  done (took 29.409050055 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.735792063 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.735451499 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.732947964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.735062417 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.733567402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.735551385 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.735802945 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.734631129 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.73560942 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.734047077 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.735040862 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.735044662 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.734688905 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.733896467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.735397864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.736015027 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.734028916 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.735950761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.739616871 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.734435161 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.734068753 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.734850379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.73446971 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.735326603 seconds)
  done (took 43.317364347 seconds)
done (took 93.555380221 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.441342932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.623771497 seconds)
  done (took 9.73918796 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.739039515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.736495325 seconds)
  done (took 5.228059153 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.73608393 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.735103712 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.736507859 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.735509192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737357874 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.736120337 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735990703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.736267292 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.736744554 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.73570894 seconds)
  done (took 19.038060824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.736145751 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.736198333 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.736153719 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.735856033 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.736772685 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.73620801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.735580398 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.735756805 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.73648887 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.735371174 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.736673818 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.736253439 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.736181084 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.736437463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.737722828 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.737394633 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.737276727 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.737535205 seconds)
  done (took 32.931820072 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.738463877 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.737310698 seconds)
  done (took 5.152333807 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.737580198 seconds)
    (2/7) benchmarking "second"...
    done (took 1.738676837 seconds)
    (3/7) benchmarking "month"...
    done (took 1.737545395 seconds)
    (4/7) benchmarking "year"...
    done (took 1.737150265 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.736079323 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.736254224 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.736521893 seconds)
  done (took 13.836775979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.73729986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.901222589 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.965327685 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.367624715 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.738503216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.740102345 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.664086863 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.739945338 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.741090638 seconds)
  done (took 19.272082884 seconds)
done (took 106.874239928 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.613044603 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.741438923 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.018493546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.804712688 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.808529374 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.739168494 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.775742763 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.015111307 seconds)
done (took 42.194947964 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.786271623 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.485172782 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.510678572 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.773450061 seconds)
  done (took 15.448252396 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.748480532 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.043670022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.762053114 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.558038571 seconds)
  done (took 21.794881061 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.101073959 seconds)
    (2/2) benchmarking "read"...
    done (took 2.086000349 seconds)
  done (took 5.868650375 seconds)
done (took 51.578610107 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738717489 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.739090195 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.739768455 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.738530193 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.738745746 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.738423494 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.738340163 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.739379253 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.73788093 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.739337693 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.740279165 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.740066598 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738886006 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739538243 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738704844 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740267896 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.739188333 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739660954 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.739664265 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.739981499 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739974804 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740111794 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.73952579 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.739098292 seconds)
  done (took 43.421379405 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.739185489 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.739623198 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.740280518 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.739455204 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.739570665 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.740629572 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.739808363 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.740849677 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.740157751 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.739491128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740579149 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.740977122 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.739518936 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.741186308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740655058 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.740179694 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.741127572 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74093273 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741732245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.741346955 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.74231798 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740631725 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.741762036 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740590744 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.740895842 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740553414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.742402617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.741141797 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74029895 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740719888 seconds)
  done (took 53.89966489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.740255882 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.74097329 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742077833 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.741838249 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.741428638 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.741996168 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.741050486 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.742210501 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.742005159 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.741633377 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.741383585 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.741363908 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.742591941 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.741286716 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.741502294 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.741602473 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.742128705 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.741137615 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.741672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.742642951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.744860964 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.741828978 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.742880187 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.742774878 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.742280042 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.742551602 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.742153174 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.742917716 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.7427424 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.742247749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.743029103 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742085213 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.742462848 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.743077773 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.743229529 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.744229648 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.742825959 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.743408734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.743315178 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.742976712 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.743425981 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.742777536 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.742466441 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.742615022 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.743787512 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.743785726 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.744243651 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.742940728 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.743458467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.743787417 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.744046157 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.743759758 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.743361338 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.74433791 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.743351325 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.743370636 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.744531922 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.743158326 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.743985721 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.744154932 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.744418324 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.743793767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.744261893 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.743670341 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.744090789 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.745178391 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.744484696 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.744979076 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.744649524 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.744443702 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.744378446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.745681109 seconds)
  done (took 127.179146515 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.744943719 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.745892357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.744575731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.745055126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745194286 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745353999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744480884 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744523949 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745091549 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.743862874 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743193473 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.74542925 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745361435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7454071 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744583868 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.744294645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.745336937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745725123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.745174582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745454269 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745340551 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745961493 seconds)
  done (took 40.074294485 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746157668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745321999 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.745650054 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746547501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745518958 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746604267 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746237793 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747413084 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746777848 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746249357 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746779741 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746150269 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746782858 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746524273 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746706977 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.746426826 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746249103 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746904143 seconds)
  done (took 33.121626 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.747334431 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.746720148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.746050149 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746353432 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.745658132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.746459308 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746036595 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.745997586 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.746494775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.746765478 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.746753001 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74691859 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.746771838 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747485875 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746643128 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746834193 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.746805891 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747539788 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747972337 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747637016 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74791004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748179237 seconds)
  done (took 40.11744537 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747148111 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.747098574 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.747894279 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747295033 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.746964979 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747438717 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.748454139 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.747380275 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.746998185 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.748016878 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748110549 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.747589277 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.748325677 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748053263 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.749319388 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748585362 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.748008459 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.748081171 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748243029 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748487986 seconds)
  done (took 36.643693217 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751556683 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75141891 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.74992034 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750673415 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751945677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75200936 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750313435 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750621388 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750855325 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751897641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.75149101 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750749592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751435894 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752172572 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751817652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75185293 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751829474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751146411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751448198 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750590604 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751971839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751938034 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750775362 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.75245842 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751556154 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752127649 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752236829 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752078505 seconds)
  done (took 50.729367614 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748941309 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750171141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.750023691 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.749941916 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749345789 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.748959741 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.749242724 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.749954773 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.751027439 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750125795 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.749900934 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.750154573 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749249995 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.749648088 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751379823 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.751102246 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74986869 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.750508849 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750363157 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750901959 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.751255356 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751075813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.751311157 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.751017324 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750938301 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.750263427 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751281391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751208396 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751054203 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751068757 seconds)
  done (took 54.201603213 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.772472043 seconds)
    (2/2) benchmarking "in"...
    done (took 1.772440994 seconds)
  done (took 5.235354897 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.752131643 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7527531 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.752203511 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752122572 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752734636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752116955 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.750214106 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752148033 seconds)
  done (took 15.707539415 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.752557914 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.753345579 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.754098386 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.752558242 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753414891 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.754800526 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759660361 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.753333523 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.754735232 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.753345715 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.759974185 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.761437986 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.755874849 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75386793 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.752309577 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755854023 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.75330511 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.754802627 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.754774372 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.755260312 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754332715 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757625862 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757561567 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.753915409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.755431062 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.765985186 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.758883454 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.754064621 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754624398 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.759517435 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.754635255 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.75458043 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.754625217 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.7552786 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.754788974 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.755717289 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76682586 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756226095 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.75961436 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755854495 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756621964 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.754720156 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.757989075 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.757852078 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758573956 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.756739097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.756988075 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.75519968 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.756979623 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.758497942 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.76381132 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755567143 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.754527271 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761981638 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.758098342 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765158239 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.757385642 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.758645855 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.765401208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.766440143 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.767676931 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.763751556 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75770528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.756618501 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764507146 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.781809975 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762180617 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.756454535 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.755423279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.756869472 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.766474555 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769081722 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.76799953 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.757349282 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75700221 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.757043822 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756709805 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756062852 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764831318 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.759265118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.756330049 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756851163 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765616031 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779898847 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.75625241 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.75713718 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.758158521 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.757011032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.757768454 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.769713284 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.759658784 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758092412 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.757999419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.757039381 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.759193617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.758598158 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.756939157 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758248325 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.758058382 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.758450552 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75756634 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760739525 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.768826485 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759616911 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758976939 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.76568745 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.759369823 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759036926 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.766837158 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.759684407 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760682014 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.7598168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.765585844 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.758206316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76110983 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.76937413 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.757934842 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.760528812 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.758235315 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.758569324 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768030914 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.786231703 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.759240944 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.758343124 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.761969863 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.772227126 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760302693 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.76256658 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.759749385 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.759151607 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.759030087 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.761631993 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.760131041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.761255698 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760450113 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761545259 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.759826343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.760070434 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.761203583 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.762793358 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.762626022 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.761722576 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.762538634 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.762065895 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760747269 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.762434067 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.766096168 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.760118482 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.762290432 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.764548964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.761777537 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761262237 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.76201056 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.761317885 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.761839012 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762285821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.761280533 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760844932 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761626997 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.760707578 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761889366 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.763664773 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765906752 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.762664755 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.765306318 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.761256467 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.761623764 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.762076031 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.761576527 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.761150344 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.76183789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.761466579 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.763974238 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.771128786 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.762081021 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.762684491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.764699888 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.762444039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763000635 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762378995 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.764950308 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.771090634 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.761546583 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.767435634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.763135739 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762437959 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.761980333 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.762704242 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.762327795 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762329805 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.764180476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.770880611 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774297043 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771225477 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.763095831 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.766717973 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.763456967 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.766789011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.767688839 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.763637095 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.762638826 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761995149 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763075502 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763078368 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.765113167 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763318432 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.763580501 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.763296058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.76281899 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.765153965 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763212408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.764643665 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765226157 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.763783879 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763065846 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76358809 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.76332125 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763110158 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.763292426 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.764211646 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.762813631 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764661704 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.771380492 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.76498248 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766707428 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76617611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764256401 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.764080767 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.765194113 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.768309099 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.76501226 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770710783 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.764340868 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.765559146 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772424594 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.765475348 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.76416526 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.768195787 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.765620796 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.764792685 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.768522064 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.773414259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.763479412 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.767055454 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.765987667 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765895096 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766063728 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.77121562 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.765475606 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.765230796 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.764956686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.766846562 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.765381513 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.766952277 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.766901485 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.766841892 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768570481 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765947362 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.766465558 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767871621 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.767612208 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766461436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.766839635 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769044973 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.775885455 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.771240609 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.767236768 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.770493059 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.769061528 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.770073828 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.768051618 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.767348336 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.767136465 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778314897 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.775266614 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773430912 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.768159396 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.766765488 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772399609 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.76778118 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.771673643 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768118301 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767576936 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.767396927 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.767124814 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.767419106 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76807381 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.766901625 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768801781 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.767485674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.771432547 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.768189048 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.767444581 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.767888484 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.767437184 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.768563776 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.76711551 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.767775301 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.770692819 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770705114 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.76707879 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.767945706 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773038247 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767980304 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.770156666 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.768116263 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.768167343 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.768035825 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.769878701 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.7697324 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.770819738 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.776764209 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.770730515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.77890719 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.769322342 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777811516 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.768642332 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.772264998 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777560042 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.768826899 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.767395367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.769625368 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.768992739 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778033803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.770409193 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.771030526 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.774257389 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769032697 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.770078356 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.770388121 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.770413977 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769869546 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.769905849 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77883432 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.771708767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.773340598 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771512093 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.769491372 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.769821158 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.770647572 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.769930095 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774711837 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.77044016 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.77117423 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.770487917 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.770963833 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.769427917 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.7701665 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.771627537 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.76983756 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.769707779 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776135424 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.771431423 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775515008 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.770664722 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.780063391 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770824909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77966778 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.771018126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.772031436 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.77067946 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.770752976 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.772382644 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.770717043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.771289474 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.771433847 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.771892808 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.775636529 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772164936 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.772824353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.771882777 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.772265277 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771708329 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780592695 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795480198 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.773793452 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777098575 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.771083492 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.772929985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.776345937 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.773108365 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.771571773 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.775030628 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78448594 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779869117 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.772608327 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.773396517 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773695055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773170296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.772406095 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.773290205 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.773484561 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.773015899 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.774996548 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.773897889 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778416485 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.773798365 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.773717233 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774502528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.773651428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.78272579 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.77454699 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.773915472 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773569766 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.774323937 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.773890904 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.773717118 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.773272599 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775177841 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772774751 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.774307983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779940511 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.780407666 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.776602613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.77373887 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.774636736 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.774325843 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.773797166 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77353041 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.773190202 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772848561 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.775533909 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.774483777 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.774543018 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.773588645 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.77410813 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.77502007 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773456002 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777325503 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.781581957 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775173424 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.774056243 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.774137838 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774646423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.774128052 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.776100535 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.783551122 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777326827 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.78646242 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.783429088 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.779494512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.776387107 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778218004 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.784172236 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.774455062 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.77641452 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.776030174 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.777094567 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.775776977 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.779465842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776385895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.783297226 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.775569422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.775326054 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784917653 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.776269985 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775449303 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.77689376 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.779921921 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.77520991 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.774966603 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.775493222 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.775927444 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784005637 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.778180288 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777258524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.779129652 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.773991538 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.776373214 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780598057 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775761563 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.778207825 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.776229308 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.776873053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77534573 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777024769 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.776283101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.777413405 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.777031566 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.779288358 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.784485398 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.777277106 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778649052 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.777051531 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.778277702 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776692325 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777324861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.776894631 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.777106327 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.777523299 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777424324 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.778910122 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.779955344 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.77777572 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.777925932 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.780720779 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777318883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78091782 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.788078214 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.786063744 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778221423 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.779668713 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.779030958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.780721732 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77775731 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.778160362 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778535304 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.780242577 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.779249434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778077406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.777937021 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.780711324 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795717794 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.778752298 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77909797 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.779062241 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784680638 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.778324345 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778483561 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.778718505 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.780277951 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.781335435 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.78815564 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.780240765 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787026461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.77912705 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.779912184 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.783523717 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.782699261 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.786934455 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.782714227 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779853752 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.779664045 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.784788171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.796253884 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780511904 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787705879 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810385845 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.781398805 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.78107135 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.780704143 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778142124 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.780089344 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.782042839 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.781089851 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.780045999 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780334969 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.780793947 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.7816285 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788404005 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.782194129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.779239638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.780828324 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.78026097 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.782192734 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.780783253 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.781188664 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.78145912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.780793365 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.780857045 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.780809792 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.780829217 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791425831 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.791520937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.781432075 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.781316632 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.781626923 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783454126 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.783870872 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791787269 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.790333449 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.780943414 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.782225285 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.783802387 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782195904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.781224237 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.781171082 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.782127608 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781807357 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.780256673 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.79216221 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790917981 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.786009729 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.781299082 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780819797 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.781130281 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782565497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782178047 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780966965 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.781686086 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.781401805 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784936545 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.779594873 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.781063 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.783288415 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.789576275 seconds)
  done (took 1056.680656497 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782234351 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781362977 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781269338 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781107964 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780889393 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781065498 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78162105 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782390575 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.780919507 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780927151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.780791082 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780880077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782093839 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780104174 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777987289 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777520697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777903764 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.777902144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.778710037 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778154591 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777731022 seconds)
  done (took 39.101512586 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.778385081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.778158517 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.777764798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776531404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777808395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.775669344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.777194448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779055162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773280306 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774376949 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.77438273 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774438362 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.77419187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.775221179 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77450316 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774086436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.77402924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775070791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.775038798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771158435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769292195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.769746982 seconds)
  done (took 40.764364815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.771270018 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.771330507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.76740882 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.765771575 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.767284111 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.766690042 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.765937891 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.767038999 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.763426405 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.769425669 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.765994633 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.767710224 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.77280999 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.771370065 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.768530196 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.764630356 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.909928372 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.764157973 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.765577797 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.764729071 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.765191693 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.771259798 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.765093262 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.764732497 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.767276123 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.76624644 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.764998348 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.764979609 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.765686261 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.770413879 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.770337464 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.765346267 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.766763796 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.769284886 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.767285063 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.769874894 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.769434184 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.765258763 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.764888255 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.764822627 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.774570873 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.789152181 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.765647549 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.773082885 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.765725559 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.766043937 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.770369511 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.77523532 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.765749565 seconds)
  done (took 88.485974499 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.765226152 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.765688954 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.767478333 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.76460826 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.764814091 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.765571531 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.765389597 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.766033411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.766370641 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.764768231 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.765758482 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.765243273 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764978808 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.765516192 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.766808883 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765248186 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.765896757 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.764885388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.764658144 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.767172183 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.765480367 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.765595299 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.766023324 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.765772055 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.76638528 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.766705706 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.765344847 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.766191817 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.766955651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.766513841 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.767286118 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.767553996 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.766741428 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.766376162 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.766193921 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76559488 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.765867937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.76642363 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.766999756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.766140302 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.765845029 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.765889672 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.766475875 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.766446353 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.766756543 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.765185078 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765891789 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.765795265 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.764000772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.76292416 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.762362181 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.761601364 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.76217483 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.76339883 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.760472988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.760920631 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.759974172 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.760739817 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.760500648 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.761280839 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.760271104 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.761187445 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.760459385 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.760893833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.761390002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.759862452 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.760115832 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760280118 seconds)
  done (took 121.697020239 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.760710673 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.762913011 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760616657 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761388066 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760782452 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.761032493 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761193305 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.761559904 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760925324 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76057613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761141931 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760868165 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.761461433 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.76194779 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760651227 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.76081304 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760100668 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761157702 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762798419 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761276913 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.76142878 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762324326 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.762172802 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761497347 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.762474662 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.761591065 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.761116914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761534327 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761811975 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.762677437 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762135676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.762611546 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.762164249 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.761779722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.761467613 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.762058813 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.761662338 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762006321 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.761099049 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761739837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.761943773 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762407931 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.761811085 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.762688275 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762558457 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762242479 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.762704272 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.762911997 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761702951 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761899871 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.762076565 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761366943 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764253325 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.762017738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761540916 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.762252567 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761575832 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76206514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764190701 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.761390511 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761385129 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761517049 seconds)
  done (took 110.929651207 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760193107 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762091949 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.760591281 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.760187367 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759393666 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759928804 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760617327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.760545405 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760168948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.759508763 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759872219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760334385 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761222514 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759411105 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759353748 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760415118 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759496229 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759945209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760757526 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758764506 seconds)
  done (took 36.901929518 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.757734892 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.758137479 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.758788737 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.758637456 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.756913427 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.756698661 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.756704782 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756543272 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757565553 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755708597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.756075474 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.756434495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755579962 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.755040529 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.759005599 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.755160426 seconds)
  done (took 29.806329426 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.755982774 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.756218882 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.756006591 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.755202694 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.75596718 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.756461099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.75598343 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.755719209 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.757006964 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.756305181 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.756461133 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.755926805 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.756148307 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.756846442 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.757157598 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.755835755 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.756165457 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.755879322 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.75573288 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.756545845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.757665898 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.755218677 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.755093497 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.756146081 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.75591325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.756546342 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.755242365 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.754933953 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.755778613 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.756062937 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.754823274 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.756367023 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.752500545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.752988988 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.753299575 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.753614129 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.752783304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.753466509 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.752224906 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.753314066 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.752551881 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.752231636 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.752720565 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.75461863 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.752606454 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.753178649 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.752341419 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.753198663 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.752894407 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.752229119 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.752674269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.752222956 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.752576155 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.752307489 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.753126622 seconds)
  done (took 98.203754066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751234272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751930053 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.752533447 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752035749 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.75248936 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.751862061 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751846236 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.751307966 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75156933 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752729139 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751866173 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.751228266 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751147579 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751410359 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752241333 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75298332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.75083005 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.751690978 seconds)
  done (took 33.222588741 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.752534028 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.752706621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.752794644 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.751416029 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.752067848 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751537728 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751970811 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.751377348 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752973353 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.751909654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752274638 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.75378011 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754169825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.753436339 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.752231288 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751401055 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.751661644 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751763278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.752922237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753417886 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.751981443 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751086699 seconds)
  done (took 40.240812792 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.753499335 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.751713524 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.767077006 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.771926985 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.771612358 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.783392269 seconds)
  done (took 12.287528241 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753299582 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750407799 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.750575671 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750627418 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750972947 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751078673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7519071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750420285 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749449719 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750941807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750086662 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751874987 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751731407 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750227054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750305356 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750182956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750301165 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751013681 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75066503 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750365321 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749851991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751339222 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750607895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753391821 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750638073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75045541 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7508773 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750380831 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750049982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751742475 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750380984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75063571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750218654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751170499 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751676741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751772255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751262035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752004773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75080111 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751905836 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751022932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751117535 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751185491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750633886 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751318513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752191962 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752395673 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750407923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751121027 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750953612 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751072733 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751094903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75161998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751776216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75094911 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750513494 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751120178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751477944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752934449 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750945657 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751492724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750935213 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751423357 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752483543 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749450666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749284184 seconds)
  done (took 117.258328087 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749963947 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.749753685 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753698628 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751089742 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753095708 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750002546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74942528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749744118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749862255 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748284945 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747778845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747892318 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748337612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750438602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747999088 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748264474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748342953 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748511337 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749013272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749981049 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747157644 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747837272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74812676 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747733481 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747881975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749385357 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748236539 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747707155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748623282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748152293 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748158646 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749659508 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747430607 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.748345269 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748575156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747907043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748896314 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747373744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748926628 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748230842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747418091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747453142 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749323102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74816592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748368612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748850969 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748749034 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747537705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748358793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747813087 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748390888 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747203917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74843242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748225086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749769446 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747005419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74851162 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749080508 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75082875 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751524878 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750085686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751278312 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750441712 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750300717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748158694 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749186597 seconds)
  done (took 117.116195405 seconds)
done (took 2444.710053864 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.833697149 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.772134854 seconds)
  done (took 15.290801549 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.91444509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.864135322 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.749845969 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.78301064 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.751148925 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.750373982 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.764009435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.751153575 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.752757983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.751090222 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.751085156 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.936888196 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.754098986 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.751145147 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.751999232 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.842666316 seconds)
  done (took 50.309163549 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.753999646 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.754984052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.764183896 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.756816981 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.754282507 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.767091873 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.784430889 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.758108977 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.787675439 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.766876175 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.822683084 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.76644483 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.75514323 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.803578111 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.767462166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.769233837 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.846036626 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.830365816 seconds)
  done (took 33.695911007 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831728943 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.764772024 seconds)
  done (took 10.29017179 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.758634408 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.764617473 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.793321557 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.778694781 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.759361107 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.750418195 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.789045068 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.781773374 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.778351295 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.792018768 seconds)
  done (took 69.436500762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.75880651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.756770435 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.757022041 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.757315732 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.752837618 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.757617883 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.756727815 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.754991348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.41408345 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.789122592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.76123277 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.762359468 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.755768746 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.758003231 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.752026327 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.777745038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.86492695 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.752494347 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.751009762 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.762402504 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.7573614 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.816315376 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.770140519 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.755837498 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.784422431 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.413763547 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.76197476 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.763285744 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.865315004 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.751970176 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.757254638 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.946339683 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.756963841 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.216769902 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.019682129 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.759833244 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.769815189 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.763965151 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.752196838 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.873850661 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.757760426 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.762927501 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.705281526 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.99922892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.850157753 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.800877466 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.071664206 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.772932694 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.758283169 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.786570476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.759433972 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.758539531 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.768205681 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.255338672 seconds)
  done (took 126.507031985 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.756430887 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.098066093 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92069077 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.754584174 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037470072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959500759 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.755770051 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.801696791 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.757877366 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97993606 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.005929091 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856582194 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.755277107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.753649885 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.756908185 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.755149118 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.907346691 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.823504511 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.756806073 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.753498849 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780667701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994048287 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.875038081 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.757691001 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.780483042 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96270558 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.874583131 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.855898028 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.485081522 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.753604568 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817493912 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.755598663 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.755312278 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.754553708 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.908116982 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.847835204 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835002831 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.757008046 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754129993 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.752895742 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.500931892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953871498 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.849044314 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.883575159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.003957153 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.957463818 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532798591 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.754953371 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.494859383 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.917668076 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.980994549 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.982282046 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.875156553 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.758960002 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.021219207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.75504075 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.754508298 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003247632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975958866 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.85227314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.758509119 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.754469019 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.755568584 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043238059 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.757280839 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.85072832 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757163628 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.759529781 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.849847031 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852441648 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.9808711 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967023632 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.784962504 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.094615405 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.264332382 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999535615 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.820959548 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004304274 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.758057467 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.75561405 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83360824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.599989307 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007731875 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036628687 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999747678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789225013 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.469886058 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.756967351 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.980574001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97552942 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.015739609 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.997653928 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.995505434 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.076498688 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.757077217 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.756670618 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.02456212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.879790919 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.760292875 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.104371303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985613534 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.276553188 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.782551237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.057236329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.8861469 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.759905128 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.384777048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.759354491 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984817247 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.794367146 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.75981322 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.75910834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.974522336 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.743215994 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.759081317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.647576779 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.817879855 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.76122569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989809514 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.762576157 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025781786 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.761949739 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989709781 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.76639591 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.787667774 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.929289033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.99914255 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.762983197 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.994772034 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00038965 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.871739783 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028189907 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.660551184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.76099179 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042057456 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.761686438 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.760561438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.92627169 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.761224777 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.899887931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.762745034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.049953745 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779752498 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988267687 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.762247837 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.01031384 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.791469049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80865633 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.762458503 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.889471393 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.760215158 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.587167356 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915099513 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.76434239 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.761348605 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.307561727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.760950012 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.907391351 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983919469 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781672264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.830650774 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.422342532 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.759953452 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837351589 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.781908177 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.140482284 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.762073536 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.008051851 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.762611513 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.173560946 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.760569744 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046373875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.997897451 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.76151405 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.762173986 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.663262125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.7598643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.759928151 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94032871 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.085178074 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.761281792 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959626499 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.762560219 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.886080266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.76310809 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.847350306 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.092174438 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.761866102 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.762476686 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.763114131 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.764328393 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.761439022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967346762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.784128297 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.262417985 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896893797 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030229935 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.070213933 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.999251956 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802408484 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.763662267 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016658347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.76447065 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.822574329 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.764033543 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780762061 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98587173 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764691741 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968840893 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031543118 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.604173406 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80871141 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.764047942 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764056668 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.761771501 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.908339356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.846849289 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.764277849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.76280223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.874817356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.882516087 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96763671 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.763476655 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.805909615 seconds)
  done (took 878.831324448 seconds)
done (took 1186.048425736 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.763422739 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.764147849 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.774938987 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.765150476 seconds)
  done (took 28.769224422 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.772846484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.763864402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.765341378 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.763813615 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.765125408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.76509425 seconds)
  done (took 12.294669602 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.770203218 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.765305878 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.766308783 seconds)
  done (took 21.002122256 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.835545913 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.146209906 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.894147223 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.177159597 seconds)
  done (took 9.753368402 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.767431015 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.7667668 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.765836446 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.7639452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.77557706 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.772143464 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.765256094 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.764173237 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.772711157 seconds)
  done (took 17.615588406 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.948898563 seconds)
done (took 95.085386765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.013666693 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.143233073 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.776278789 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.172884437 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.079216985 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 4.651510495 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.786574809 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.827855445 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.785272256 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.918887408 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.8655915 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.821440382 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.136849814 seconds)
    (14/309) benchmarking ("sort", Float32, false)...
    done (took 5.458045144 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.023830993 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.776054968 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.22162758 seconds)
    (18/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.845427743 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.777042848 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.647565815 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.77966484 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.084148915 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.767632063 seconds)
    (24/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.765040822 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.589225465 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.732535252 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.917844398 seconds)
    (28/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.780037306 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.547736202 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.815558861 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.757357909 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.802192378 seconds)
    (33/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.050599812 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.778339249 seconds)
    (35/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.906081203 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.795205255 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.660113183 seconds)
    (38/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.779140284 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.773965987 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.156276363 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.90405293 seconds)
    (42/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.864944784 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.778881497 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.839260813 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.988912335 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.090341506 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.036260685 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.765094005 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.995592992 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.947229394 seconds)
    (51/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.905200968 seconds)
    (52/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.779593846 seconds)
    (53/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.954423646 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.154030356 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.883149143 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.076161066 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.177607001 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.908135316 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.85558868 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.855404578 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.014761881 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.951981648 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 1.99345512 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.919031332 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.804073673 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.098263428 seconds)
    (67/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.33494098 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.083528267 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.78291536 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.797154487 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.171579473 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.461969678 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.792461285 seconds)
    (74/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.370961688 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.619684255 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.98409197 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.78958701 seconds)
    (78/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.931939776 seconds)
    (79/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.796054932 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.122817046 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.868786713 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.083667998 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.087418684 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.783244645 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.859988351 seconds)
    (86/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.159083339 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.878801598 seconds)
    (88/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.806883415 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.788950084 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.001059112 seconds)
    (91/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.793047663 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.879441232 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.967962902 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.793837843 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.982472938 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.000941889 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.69923128 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.737204008 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.992144034 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.920216531 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.006606544 seconds)
    (102/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.666922268 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.02291199 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.864281922 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.854676545 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.98330193 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.793756913 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.96064929 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.259084315 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.470955024 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.802926915 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.103927211 seconds)
    (113/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.791947663 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.020885391 seconds)
    (115/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.78345903 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.431481594 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.027426099 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.284330212 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.800305321 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.777414035 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.781711907 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.114488767 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.690317302 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.784939121 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.572353863 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.398444857 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.41102054 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.875906202 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.163300805 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.915053242 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.782103465 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.989603836 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.933420311 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.994141768 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.778270462 seconds)
    (136/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.804855885 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.074753168 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.251278789 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.781520609 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.139832501 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.913190263 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.033910141 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.094378423 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.691582583 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.815448606 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.791242732 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123411157 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.697052591 seconds)
    (149/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.986716139 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.482912634 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.84612352 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.028991444 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.881342017 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.88563809 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.995259654 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.575386659 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.908831666 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.809232234 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.867841077 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.865874807 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.780081456 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.244909474 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.809184942 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.780615844 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.810720115 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.934407897 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.906417938 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.932250985 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.804455368 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.930696296 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.815301423 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.898323965 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.787953277 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.797246811 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.563324962 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.982034717 seconds)
    (177/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.049485678 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.785806571 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.644954025 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.79037466 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.997338692 seconds)
    (182/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.796496139 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.902792864 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.866937137 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.883359223 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.876721391 seconds)
    (187/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.916269765 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980425495 seconds)
    (189/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.614609822 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.613718876 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.946542568 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.139548192 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.797862267 seconds)
    (194/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.537277665 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.049986575 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.402948957 seconds)
    (197/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.927453192 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.782624308 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.950551087 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.782482991 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.785611404 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.151334694 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.112540711 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.904575538 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.042692771 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.707746902 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.822818179 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.79482004 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.865059351 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.090317644 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.800180453 seconds)
    (212/309) benchmarking ("sort", BigInt, false)...
    done (took 7.423533608 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.584106375 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.968591099 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.18472018 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.950255156 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.810483337 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.014799937 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.044908682 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.788498702 seconds)
    (221/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.773717805 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.438600877 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.984914664 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.129216262 seconds)
    (225/309) benchmarking ("sort", Float64, false)...
    done (took 5.562770844 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.788054584 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.790210924 seconds)
    (228/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.585948905 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.904880099 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.782973782 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.29405814 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.136936115 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.792743072 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.207841548 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.277490556 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.180055235 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.457471003 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.141356857 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.793669873 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.794712049 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.943809552 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.78726369 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.777317477 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.117004447 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.90307411 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.547890368 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.905994836 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.796256077 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.911598209 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.793009301 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.999076957 seconds)
    (252/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.807805248 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.881306121 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.916461751 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.029489455 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.790438183 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.25393654 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.787409425 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.587846701 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.904218727 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.788007921 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.454340375 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.787158308 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.78577599 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.210968055 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.190323809 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.789234717 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.347868623 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.809100627 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.842605184 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.797021457 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.792481759 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.181449256 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.125376658 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.938473883 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.783286347 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.557866505 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.911460128 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.788088509 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.87394318 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.265788493 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.883597405 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.845139072 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.108118708 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.880692882 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.802164651 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.542377339 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.799381981 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.89779173 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.784656777 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.593977952 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.271400825 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.699069709 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.172045389 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.883903612 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.818165879 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.133913399 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.792965414 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.799740298 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.027987085 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.826792469 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.50731185 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.807185568 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.178018612 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.925316629 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.995760581 seconds)
    (307/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.805657461 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.250209287 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.91873736 seconds)
  done (took 981.490408939 seconds)
done (took 983.257113799 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.814111205 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807887606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.789382043 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.812474446 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.902346652 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.836558995 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.804555668 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.797057199 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.842178879 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.841861842 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.790864537 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.837463795 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.794342541 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793452523 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.791564761 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.806284332 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.101908396 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.822522658 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.807950924 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.803295936 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.808340105 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.789456794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.841552051 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.835952489 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.795701177 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.797785229 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.794389176 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.8107366 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.90481392 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.794947369 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.796047596 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.804095239 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.10241731 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.822319277 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.790542914 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.811670147 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.804358825 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.803816297 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.796877712 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.824705148 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.189199803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.832844449 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.792830632 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.792932069 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.791913492 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.79956934 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.79391144 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.800994864 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807750862 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.808774572 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.18429418 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.851119102 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.796474611 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.7934406 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.806805795 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.793779453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.79922648 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809577839 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.812363322 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810185787 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.086997815 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.834702522 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.79807867 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.811594385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.802821562 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.217934833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.83388047 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.800518343 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.190029225 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.842578794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.218660859 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.846221681 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.796699244 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.80857687 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.826509396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.104413675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.824212166 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.793920429 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.802972057 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.792290776 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.80680561 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.80874606 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.800896981 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.794423458 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809991611 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.840443287 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.807348776 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.795704974 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.806584189 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.814206294 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.803725607 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.806068677 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.798292638 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.794228175 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.806674164 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.799154416 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.7976654 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.798660989 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.800755605 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.810151484 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.188832218 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853314433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.793174294 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.792623724 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.796242582 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.810088195 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.189183727 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836312449 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.818556859 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.846902041 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.797489466 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.089549178 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.831013918 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.812961138 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.807808449 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.799867483 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.794676371 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.090229352 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.217067707 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.853377021 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.797484341 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.793544953 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.813029875 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.798422741 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.79275658 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.105316872 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.831318958 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.812117495 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.919188004 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.81015366 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.829436787 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.79599373 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.799984634 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.846045799 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.812843993 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.828511031 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.800645367 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.813248996 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.813636837 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.794801941 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.80929917 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.810137766 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.797408335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.806016916 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.796046398 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.847059913 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.812134054 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.811977936 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.819163093 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.920725904 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.796161505 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.091176421 seconds)
done (took 282.605183239 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.876439636 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.793936769 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.886898455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.794351067 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.885715289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.870072394 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.79681237 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.795623706 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.794863141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.292309135 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.79518642 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.80252555 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.795778996 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.794230114 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.865966773 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.796321815 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.79498955 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.241690652 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.796514451 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.874458669 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.793804925 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.795424659 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.796490715 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.30821846 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.794958603 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.794871928 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.875308491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.796091323 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230275175 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.796785671 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.794608971 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.230504847 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.874988958 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.82454659 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.805867862 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.80133227 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.887262729 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.805542377 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.863742017 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.868431383 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.891247042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.830132557 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.79583797 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.797937625 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.800496735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.798496916 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.797313156 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.826607298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.796888071 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.801488065 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.241908812 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.803682012 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.802152598 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.79740906 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.798202941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.824579389 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.797268816 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.797567417 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.876976475 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.798566385 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.865064016 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.310305976 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.294885663 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.797914415 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.797399374 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.798870301 seconds)
  done (took 180.354326083 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.863886156 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.874613912 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.863957263 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.801775662 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.84871737 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.86532165 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.802863933 seconds)
  done (took 14.65215408 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.804163618 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.798285653 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.849652214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.84885631 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.797058804 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.954794716 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.797509246 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.811253306 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.80252875 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.825750397 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.800951553 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.798472702 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.806106868 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.798106382 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.847585871 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.811753906 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.914034766 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.80138716 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.798844441 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.947829767 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803749081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.80760437 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.824564408 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.810682243 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.800853305 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.806410996 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.360368931 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.799426004 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.799448424 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.797953559 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.798712343 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.841548631 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.799050828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.798881963 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.799523704 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913228552 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.799250113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.79909197 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.799043314 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.79904275 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.798592093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.799325265 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.8005453 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.79972043 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.799263587 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.822672274 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.798725187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.799888012 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.800016228 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.800437652 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.826825669 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.800794534 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.799222783 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.805856095 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.844047182 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.806955016 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.800702109 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.799251312 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.800314237 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.800980997 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.949575029 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.850467958 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.799846205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.852105508 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801552228 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.80053124 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.800684098 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.801125959 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889487412 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.80004759 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.851316315 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.800887341 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.959867899 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.823753375 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.801404956 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.806066422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.805135487 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.801087521 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.801290791 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.808121716 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.801233415 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.803588395 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.808405418 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.805578722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.802256623 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.913911942 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.941799076 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.800927583 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.803719092 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.811633931 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.801496726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.845962509 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.801632393 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.802477392 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859114531 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.918593461 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.829811295 seconds)
  done (took 198.968919102 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.810272011 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.809887807 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.804995317 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.818279225 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.804078207 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.803263963 seconds)
  done (took 12.586024525 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.805776731 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.805762336 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.801803594 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.802501513 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.802925576 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.803699552 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.803151308 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.805075727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.807466895 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.802592387 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.802967327 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.804611903 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.805535909 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.802665476 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.80349294 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.802116478 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.802383133 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.802423534 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.803030693 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.803744529 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.052088313 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.803330836 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.803413665 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.806556319 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.807545215 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.803582383 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817303195 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.803701487 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.803228286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.812455074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.808170993 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.804030307 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.807702987 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.811088443 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.807789233 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.807942083 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.807859879 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.805285958 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.8041884 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.804044488 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.805310434 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.80431501 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.803790614 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.804663742 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.807298363 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.812743932 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.810124341 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.818547342 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.804053331 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.806386392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.805820775 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.804038351 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.803810922 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.806222582 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.809762417 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81339583 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.810926824 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.80446048 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.80501401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.809128105 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.807974182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.806928049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.807883074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.809440658 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.813306705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.806744285 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.81201633 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.810407962 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805548856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.804774632 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.806579459 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.804779126 seconds)
  done (took 133.039902424 seconds)
done (took 541.353167023 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.036080523 seconds)
  done (took 8.776612796 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.820007904 seconds)
  done (took 8.616677971 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.289552269 seconds)
  done (took 10.031243143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.817107875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.830841804 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.82062341 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.806557207 seconds)
  done (took 29.04004276 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.157720335 seconds)
  done (took 8.896316373 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.826104854 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.803087281 seconds)
  done (took 15.434654183 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.949093226 seconds)
  done (took 8.688520665 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.11474703 seconds)
  done (took 8.86431937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.806787149 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.818860892 seconds)
  done (took 15.387046918 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808044713 seconds)
  done (took 8.545777842 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.053489461 seconds)
  done (took 9.892373259 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.824686158 seconds)
  done (took 8.63480297 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.855147439 seconds)
  done (took 8.594832549 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.854988828 seconds)
  done (took 8.595320743 seconds)
done (took 159.742138735 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.80925248 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.806575075 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.807691584 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.804907089 seconds)
  done (took 28.968079928 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.838537524 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.839364857 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.840804411 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.85035268 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.841397807 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.838003851 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.831510875 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.831597537 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.849267121 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.844933889 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.841662419 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.841225401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.838366387 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.83138071 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.840487415 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.841969604 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.849791202 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.840665502 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.83197867 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.84110604 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.807514355 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.849969551 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.842120066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.806428064 seconds)
  done (took 45.850960862 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.997465707 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.87951792 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.961385833 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.860211679 seconds)
  done (took 9.439088293 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.857536595 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.860931651 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.870344326 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.910121328 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.933152004 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.868233879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.83082875 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.829501848 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.815037981 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.860060367 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.935094263 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.856680477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.949119115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.809315701 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.994285915 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.806751433 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.807103426 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.860304048 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.910679646 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.923603435 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.808011546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.85908968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.862260791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.858091379 seconds)
  done (took 46.61759105 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.809215404 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.816166161 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.816243267 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.809541487 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.810070234 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.808319638 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.815798236 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.810177399 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.830872816 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.811362962 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.808827998 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.809134316 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.815355958 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.808991672 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.809758346 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.823039041 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.823467858 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.808893488 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.813878822 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.81617681 seconds)
  done (took 38.017544581 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.807216166 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.653367625 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.152990854 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.059630932 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.808750187 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.811362646 seconds)
  done (took 31.037185039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.822246359 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.816665439 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.80909583 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.867035779 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.953142041 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.81969284 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.810609802 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.821632434 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.859012831 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879971507 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.833202944 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.838842946 seconds)
  done (took 23.874217857 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.810456732 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.812319769 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.815571097 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.82414653 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.823246103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.81735304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.817957543 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.808387237 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.824100432 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.828742305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.817818355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.821151989 seconds)
  done (took 43.567969791 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88894566 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684667542 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262376009 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271309825 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333197853 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01208508 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.809704087 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894336183 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.810404919 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08057117 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.174853588 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015669206 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051912468 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539304626 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.81545428 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.293270575 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100249098 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032388621 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839359559 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507512693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918858976 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311863499 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.461734108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924313761 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014855714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.9343189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.074254582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.759729981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858463294 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814339346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815247192 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.812172191 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08316089 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930155152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880974817 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816193767 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225444704 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.519640849 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.829696462 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.482433992 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.328045939 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.933834859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81477055 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812113519 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739465332 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311090975 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9018917 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.812948701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.512356403 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810937 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816427446 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886132561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.812742217 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.61830532 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49415187 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079099341 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.812215121 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814021233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363002221 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843143938 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419617194 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.744549483 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.897280595 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.461925108 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283169242 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.968300372 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.812931941 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812675889 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739469009 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.467874431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929399433 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949324355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.829629087 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.452935084 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104557897 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.240435516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867683987 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105309113 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.590053831 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.745118583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030063666 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760681853 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739825916 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.662618809 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739741368 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023749225 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8473981 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.410800818 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848690295 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89493466 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819652282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826745751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815048256 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026493389 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.708061484 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814382724 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.124312419 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077367614 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830598586 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899184262 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740952603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.81539228 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058105559 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.01700025 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.041283048 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.298719109 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904307899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756036552 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.827780771 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.732725112 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82342248 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.091168222 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874792131 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854986065 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933141904 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.758352987 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071168076 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780227303 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.914767515 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.179072509 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060028854 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.160785315 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05907667 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877534362 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82127208 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816911521 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.532933838 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42698195 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.033521377 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.831074732 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301225387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823959134 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.820942742 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751483392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.440498479 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.190152165 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.89416348 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030891376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.770846888 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092070678 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743755682 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953149986 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.81542318 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.031673106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.467326774 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.905049334 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066190259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044334444 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.046545423 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824977272 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830542202 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909793078 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835236197 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.220577792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064076372 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.820322084 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.818900387 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.523432736 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.874619105 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818363836 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.820694494 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345583858 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097088744 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842229189 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.823785343 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693070886 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.829493625 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880309038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820315407 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.82115014 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.333863785 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322811503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.82311065 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.468492384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03442703 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822043923 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.517475688 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005059405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.83100765 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092982748 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888589158 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.74483565 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.518273982 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.520681207 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818729177 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744908297 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.818673359 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821911073 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824089425 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.006772056 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.101649242 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872395192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.469161117 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.926413142 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825530083 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.821544258 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819052734 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.334851654 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859733278 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305699615 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944813337 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9475963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.831083345 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.746626619 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820800198 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821423263 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.819967829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.76655828 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868682652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.478530371 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02294707 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068909186 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.224894669 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829093667 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.467851211 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.937691456 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.857214045 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.130556589 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336582866 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.92552662 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886028175 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.826124918 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.473006832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.555024308 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376330784 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120372096 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151687528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172764394 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.180082673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138198244 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906525194 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047595564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343049147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877919488 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912272388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757839078 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836584377 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.47275013 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178501163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833567144 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039490776 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110249566 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.199907713 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95755966 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025205566 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85112047 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.607348459 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845023133 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.359847416 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838435552 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.247047982 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030885645 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904670433 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.135679592 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.905463708 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.825435488 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170971754 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863779 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.525693507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175105471 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.209811417 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.30265572 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048334085 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.828659954 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261808828 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189341542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.997228826 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.93741742 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749721156 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828715785 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.829393546 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.838028011 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.794430587 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.672117845 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.066325741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828902939 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051115051 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.192417975 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195937183 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.744329301 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.827253761 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824250705 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069093607 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.55719863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973648694 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.105419339 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386609075 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831309194 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.752691105 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750368393 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.526653792 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.833447702 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.789432407 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037784676 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.930052884 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.505100263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.19144374 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129344532 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.068461142 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.836452204 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100977161 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102440955 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.317498199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846818295 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.922510144 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.145167424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.54986654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.040734656 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05232155 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382744925 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04359424 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281506414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.796930179 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.826891196 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032813534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.040582649 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.203012745 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004900515 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.535398802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.841874914 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190946733 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887358932 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.217552866 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.014300881 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.914800617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833972873 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90161487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829621242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.832090665 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.832804893 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835738833 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.218561863 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947215991 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.838520994 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902602121 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881105034 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399022892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.835219937 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103064282 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190955902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166481008 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891704817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827844548 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836696769 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754535861 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955764146 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267149822 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099688729 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9444062 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.963361318 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849276005 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.151701012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.06581124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131971148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100589379 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.710392438 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440230726 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941922561 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.044549158 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833043747 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.032931812 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047002962 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129016572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393037849 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.939684322 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013595863 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100970795 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187066485 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829190043 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412093254 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.83311722 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233066154 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.861409275 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.210095835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087919452 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832715324 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949095494 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.832537474 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.032796503 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.280143299 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548989541 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177665262 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682790287 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8338317 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108649305 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.16716313 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13600822 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905103508 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83488902 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520111809 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962040542 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.690934731 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053701692 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831622162 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033607286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.54039749 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.834276525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110412083 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136130755 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.831832484 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.729296314 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856423494 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.834686162 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044586845 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047552394 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077152069 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835100851 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.835839741 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.637698113 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112897394 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892730521 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758569004 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.83291515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876393536 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.057481326 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849185791 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.345782938 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.531269637 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11375261 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.734494254 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849137383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.218069529 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212774051 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171104483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.352933476 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056903852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382688731 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.661376217 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203518543 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.834136699 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.218374405 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205870039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.832925765 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31095143 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937302295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.10795238 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158302923 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.853732428 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593176917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.865191401 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047547017 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188265409 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761983273 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837160615 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.880932246 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.832633926 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.816052092 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842530863 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.765524576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253198611 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.668661652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38997751 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.836232735 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.969573455 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.221702306 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350226554 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935466135 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850494408 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836653768 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.535370468 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.121487005 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076525982 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.309824206 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.925864577 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.835161476 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834701821 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75290232 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015692235 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.022267764 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113815191 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.154268007 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.935863627 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834906318 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.041549088 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03707654 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.226687042 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971947008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936757528 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941948449 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.775002943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.53900244 seconds)
  done (took 1638.672340584 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.849792572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.855488762 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.850349366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.883124185 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.863970237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.855819391 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.892163422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933879604 seconds)
  done (took 56.753163001 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.839475416 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.006865119 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.843114706 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.839894302 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.844695104 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.840539553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.99972526 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.85387016 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.853171366 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.846762572 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.844133819 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.841942673 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.136082437 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.866486506 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.842942548 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.857246339 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.847518794 seconds)
  done (took 73.785940819 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.84696093 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.094242016 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.875463209 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.844674053 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.815234194 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.845599137 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.871449695 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.865344532 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.851068055 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.088416258 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.139479229 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.852101672 seconds)
  done (took 89.7674693 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.855242227 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.845645024 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.845630288 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.846022215 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.846224888 seconds)
  done (took 11.022589729 seconds)
done (took 2139.136056727 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.070961923 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.049218013 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.678236472 seconds)
  done (took 6.504757219 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.986695904 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.037553052 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.148802575 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.172709267 seconds)
  done (took 10.127844418 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.16175432 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.211243648 seconds)
  done (took 6.151853874 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.439895162 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.869680684 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.232574856 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.846226502 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.847941128 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.850784177 seconds)
  done (took 22.329981748 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.846050916 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.846174037 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.846501416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.845675094 seconds)
  done (took 9.161793004 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859808863 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.578142062 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.861219925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.874795763 seconds)
  done (took 20.953264881 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.000179901 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.962982951 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.989571776 seconds)
  done (took 7.73286382 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.989482533 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.078102899 seconds)
  done (took 6.847291299 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.983204408 seconds)
  done (took 3.76294937 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.875348598 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.116288039 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.336115297 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.377223592 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.449635696 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.749716205 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.184677789 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.071471269 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287499443 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.322157277 seconds)
  done (took 24.550538773 seconds)
done (took 133.515572551 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.410503837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880326138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.052451528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.207966842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.081201564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.049601343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.064254651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.20144446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.892597159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.881804972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.217655029 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.087522498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.015977296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.867422073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.020804477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.866134926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.081010711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.232375294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.931048153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.152326335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.080634975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.851491162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.043895366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.867259966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.085134751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.000174744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.395928617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871671277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.033037607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.407854834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.003244789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.263252419 seconds)
  done (took 167.879347901 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.851533312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.850106267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.851462778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.850088574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.415491429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.85061504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.853150178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.84977109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.311587504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.304556684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.850235332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.40394413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.852240907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85017924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.850979765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.850267466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.490530002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.85184877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850981187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.849980211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.851222147 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.230263216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.851421709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.241814559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.485519104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.851060123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.850180338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.850531652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.852088278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.85139834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.852221704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.850034035 seconds)
  done (took 209.092513586 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.84991313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853495651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.853518907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.852421859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.853148054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.849530217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.851576758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.850158325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.609909121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.606180727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.852155785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.853678714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.853056352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.851769472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.853754519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.851687624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.850888767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.846406268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.853157189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.852387956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.855396793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.4474957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.852297427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.443768788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.851651958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.852363551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.852127816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.85166868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.851442591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.852111652 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.851674453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.852421937 seconds)
  done (took 219.748260407 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.088986989 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.850539694 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.851628927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.840521479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.852111494 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.850979963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.829427429 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.102152197 seconds)
  done (took 19.051549112 seconds)
done (took 617.562018193 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.27186494 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.112561907 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.032425113 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.876955776 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.122504888 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.920694471 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.871298235 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.937238427 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.68157356 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.947602455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.505651344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.897874305 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.601318296 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.902899732 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.995234993 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.931547876 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.46193333 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.563915392 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.049709859 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.941210658 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.056390548 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.775004713 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.953617143 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.709990172 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.63022889 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.826660834 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.890139331 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.461700755 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.885316211 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.029875125 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.54971645 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.144772687 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.886845486 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.87258348 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.927770453 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.908322511 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.083543536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.886704261 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.001229382 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.566305405 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.948875527 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.588704139 seconds)
  done (took 101.996064915 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.864120226 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.859831012 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.861636879 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.859964135 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.869403024 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.860817854 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.861149216 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.860748585 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.860491846 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.861115686 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.861759465 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.868948519 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.860690471 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.869894719 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.861505477 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.860922226 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.862288215 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.868774795 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.861439008 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.861454641 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.860952375 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.861362713 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.858090402 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.862483841 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.862697384 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.862067241 seconds)
  done (took 50.224720578 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.855125885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.027185595 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.102079834 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.877503218 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.857358528 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.859842006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.87616104 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.862973819 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.859248691 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.859038821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.959311787 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.861624491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.875707754 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.099911699 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.873696124 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.855934445 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.855787202 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.859260779 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.036375368 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873255429 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.877032939 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.861306208 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.877243944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87118035 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.859087051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.858731781 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.86091377 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.354016324 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868345338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.958701284 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.91721119 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.884453827 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.29365586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.107685075 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913100481 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.868723324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.857008585 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963035104 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.864660096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.859449394 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.875978276 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.863877224 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.10099311 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.399160372 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.872939377 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.857712874 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.360806777 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.973614425 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.900658871 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.868583394 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103343887 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.876432794 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.858714143 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.859909442 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.895603717 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.866035398 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.859503918 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.223278568 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.872278977 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.877299175 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.864199192 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.860128372 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.038305046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.867668408 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.030430369 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.868954863 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.865872544 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.860629694 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10212551 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.87595202 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.411097935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.873847051 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.858048742 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.961753535 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.036614414 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.386067694 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.870764488 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.039525867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.312477614 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.883864088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.865865698 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.340081427 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.886259323 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.866538153 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.859809415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.858489813 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.858235779 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.899803079 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.874864599 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.326265695 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.409784193 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.238887024 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.886010342 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.87388765 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.86049055 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219343127 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.866279874 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.857405096 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.092669054 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.416940891 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.872798615 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.865342738 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.386501993 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.874241589 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.877287636 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.86565561 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.105986966 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.873879516 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.900053489 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.856224026 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.864020871 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.859940558 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.875085994 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.864103721 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.857266448 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.376975419 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.978567648 seconds)
  done (took 231.503115451 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.855770397 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.858908472 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.853357691 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.860785647 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.856915173 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.855400952 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.852914451 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.85375781 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.855930159 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.854700977 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.854503797 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.855546844 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.856844811 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.856263872 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.868859171 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.862607768 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.465923492 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.859968843 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.861982817 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.860792294 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.50176717 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.865448087 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.862003259 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.8615226 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.862030865 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.861631285 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.863948736 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.865801967 seconds)
  done (took 167.097864592 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.863943387 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975031968 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.882092089 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.891720873 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.870958873 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.862328441 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961543341 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.880615533 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.868688906 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.862606906 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.862401403 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.923819259 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.873499877 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.961296236 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.893535963 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969109728 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.96618879 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.868847924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.863672495 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.863602994 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.893034964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.885478621 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.922437638 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986581824 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.881767454 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976630322 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.896761399 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.863536584 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.86379839 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977152418 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.881864035 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.92337612 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.895475604 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.882530928 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982319727 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.980136367 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.966675907 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.96693815 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.869810544 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.864721094 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.864065902 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.878569252 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.977691743 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.883148287 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.865823497 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.994395976 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.884496266 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.865678299 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.865221475 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.863956355 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.878768787 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.883324446 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.929491435 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.995452983 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.900141864 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.888661991 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.963128875 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.988664916 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.865343092 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.963477658 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.884185965 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.977718241 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.883264672 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.879755599 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.865584499 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.86841611 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.894178316 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.970323866 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.969487547 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.872686831 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.962655715 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.899662476 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.87216799 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.865297052 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.864797568 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.9786098 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.982156437 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.90078817 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.902408621 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.896860706 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.888902114 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.865838475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.880544517 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.882497551 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.869906204 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.979267098 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982325331 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.871249063 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.867010192 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.866681595 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.865723535 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.891448008 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.986843098 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.901879052 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.985849948 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.933376796 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.94193494 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.881263213 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.880293166 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.871473372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.929394814 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.884376486 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.878588875 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.159294525 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.927509329 seconds)
  done (took 202.388752059 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.261352496 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.915777514 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.923079104 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.187992577 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.217599974 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.777827428 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.912248849 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.914054187 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.939123411 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.096246561 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.989015348 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.936078088 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.901906972 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.889698742 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.912185762 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.938068485 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.923042692 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.256421559 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.11411774 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.070555882 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.903258702 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.185780181 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.222785963 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.487216285 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.964058211 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.309410096 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.47454514 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.044370555 seconds)
  done (took 61.472997307 seconds)
done (took 816.470577468 seconds)
SAVING RESULT...
DONE!
