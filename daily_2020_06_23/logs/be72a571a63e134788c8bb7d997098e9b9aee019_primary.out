cset: moving following pidspec: 29942
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.664653984 seconds)
loading group "shootout"... done (took 1.148818775 seconds)
loading group "string"... done (took 0.436797699 seconds)
loading group "linalg"... done (took 7.915710354 seconds)
loading group "parallel"... done (took 0.152068647 seconds)
loading group "find"... done (took 1.352610421 seconds)
loading group "tuple"... done (took 2.030591571 seconds)
loading group "union"... done (took 13.202432731 seconds)
loading group "dates"... done (took 1.417906929 seconds)
loading group "micro"... done (took 0.223265495 seconds)
loading group "simd"... done (took 4.650751696 seconds)
loading group "io"... done (took 0.977364701 seconds)
loading group "random"... done (took 9.17356085 seconds)
loading group "problem"... done (took 1.682253972 seconds)
loading group "array"... done (took 21.6068153 seconds)
loading group "misc"... done (took 1.653884973 seconds)
loading group "scalar"... done (took 46.279061193 seconds)
loading group "sort"... done (took 3.660666618 seconds)
loading group "sparse"... done (took 13.972318136 seconds)
loading group "collection"... done (took 20.10772439 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.552360284 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130775874 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139616281 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123483002 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.158839819 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119147686 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129014432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086171468 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942329319 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149318246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114287397 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.485808535 seconds)
done (took 5.559241574 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175208107 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087457997 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079529067 seconds)
  done (took 1.27855942 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067686518 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128500415 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068562571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068843929 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068473116 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069242269 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068681339 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068503057 seconds)
  done (took 1.652177227 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073901687 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069563305 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067581233 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072103093 seconds)
  done (took 1.39561197 seconds)
done (took 5.697470968 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.256370527 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.110203396 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.30363359 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.325298518 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.441241462 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.093260011 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075326857 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.072056535 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129343649 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330779443 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118059417 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.193971559 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099218331 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.182565249 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.011681642 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.137815376 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088610724 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.132447708 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096635823 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135115887 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.378631711 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080442641 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.086292056 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.074796217 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.071235597 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.650155219 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669822789 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.151223284 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085021612 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.081997667 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118669222 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.653760133 seconds)
  done (took 10.588859058 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101344118 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10126265 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070329764 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125813104 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10151738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073151328 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077482144 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069284763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090589614 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128112556 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091091307 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108258239 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068246127 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071023869 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.095141414 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198186673 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082389283 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082741275 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070710965 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080095804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107916162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079302074 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080252916 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080956344 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130454817 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173863567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09975069 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09952926 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06823211 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08189617 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11605852 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129917713 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06996612 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069302505 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126570326 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105209007 seconds)
  done (took 4.669711672 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.185189069 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.094849481 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104644387 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.620001227 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068211831 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149297314 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235758037 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074307245 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.392499792 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125341147 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.155760692 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12515705 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141888441 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123038566 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074568204 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.336821348 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123170708 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348689004 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.070486126 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.070796312 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066435346 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076402673 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069370157 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064936266 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078042395 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092177328 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.092760468 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.186681526 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.114476936 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.075800983 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.304382056 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07350076 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.091255236 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364398426 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066965626 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07019166 seconds)
    (36/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070072203 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094383514 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.391363493 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.129013785 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067362755 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173031914 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131077299 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06615785 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.121130611 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082372332 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.073309819 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072810071 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070066158 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.08033432 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.083240177 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104881864 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071441959 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067963748 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171719506 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066862599 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067872741 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069698605 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151651354 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068922835 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.159750083 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066864728 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070554263 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096365368 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072567035 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08905233 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069242915 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11704899 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332387102 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.042124965 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.074693976 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906914144 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081321874 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.068105511 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.085158761 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068453646 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.070213527 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068166583 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.078968958 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071741332 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070454562 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.113552891 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070793006 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.072886418 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067820052 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07344908 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101902189 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067701006 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.458448124 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101717442 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.070396448 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.081070756 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108928732 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068920764 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074486595 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071427577 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.074094526 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067956126 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071003845 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075847114 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095579625 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071348369 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.220167653 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.048167815 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.075227781 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068717917 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073257959 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073242353 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071128824 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068018871 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072786558 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070169535 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067074441 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.119295153 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067089537 seconds)
  done (took 22.135198783 seconds)
done (took 39.692251151 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.25828493 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083163583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08346479 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083831644 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083451872 seconds)
  done (took 1.812396012 seconds)
done (took 3.015003595 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.136682907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105955922 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065896127 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103138866 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066079111 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108032949 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106935283 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084592663 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106358383 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066145096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1038399 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066491807 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066433479 seconds)
  done (took 2.40176711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082848308 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086736081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071420839 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082429874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063959703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082033153 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081812802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089121985 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081772919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07342803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06421207 seconds)
  done (took 2.05517513 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082879108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084469168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070600529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08255141 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064312199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082291579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082344847 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086605578 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082269846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075856745 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065082409 seconds)
  done (took 2.047607725 seconds)
done (took 7.694314976 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076007758 seconds)
  done (took 1.255098674 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.5455301 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.501928555 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078953187 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100522543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.205994661 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108662396 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.233141288 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082819008 seconds)
  done (took 8.218295492 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.112027433 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073127222 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072576285 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072027056 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073283997 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07351227 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071276231 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072740291 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071434896 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070598529 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07175672 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070616473 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07113784 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070715484 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07155511 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070556205 seconds)
  done (took 2.456879186 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100153619 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098953474 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074411376 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076110181 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073744175 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073205036 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075809658 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075113949 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072442632 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074013435 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077226568 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074984442 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074980363 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066737264 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07693636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07884238 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073124397 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077227605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078459843 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079007833 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078403505 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067376137 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076202075 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07735941 seconds)
  done (took 3.153982724 seconds)
done (took 16.272746956 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114717747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077819512 seconds)
  done (took 1.378602014 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082403011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081920274 seconds)
  done (took 1.364401651 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077211361 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063497135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083882485 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073623366 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064314912 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063769269 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081678202 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064474696 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064101074 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064166569 seconds)
  done (took 1.901794078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065446997 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076053296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069806532 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083516822 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070400437 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065662856 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06828337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065466425 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072633769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064136717 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068877495 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08340864 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068500641 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085104326 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068352976 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068962062 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071457595 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068163474 seconds)
  done (took 2.487862603 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063602216 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064347667 seconds)
  done (took 1.332574837 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067069199 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064561318 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067099293 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067755005 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064591419 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063659005 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064320191 seconds)
  done (took 1.658215642 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379329682 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135908383 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.343126266 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071951467 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08092262 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253857834 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065802163 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071502806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070877739 seconds)
  done (took 2.718138146 seconds)
done (took 14.046487327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081792599 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087199994 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104021053 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.428432031 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093652085 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069121462 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115048814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187614137 seconds)
done (took 2.382006035 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215812004 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.115103411 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.931322936 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.069145384 seconds)
  done (took 3.320861801 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34579848 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092243499 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078818666 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068056464 seconds)
  done (took 1.802819085 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068073562 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071630699 seconds)
  done (took 1.354229858 seconds)
done (took 7.911850632 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066659903 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093875814 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065809514 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066658718 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065762957 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065901277 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066316378 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066139706 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065767238 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066207779 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066158474 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066496906 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066303591 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066214026 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06633377 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066984972 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067630407 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067825219 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06811948 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067551777 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067941094 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067838194 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067839614 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067569344 seconds)
  done (took 2.878953557 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082732378 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068089978 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069513851 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069681414 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069825596 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069398912 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069414974 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067880288 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070151254 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067896519 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069706072 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070036992 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069408233 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07213404 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069461478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071748865 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071336512 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070072053 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069386637 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07147269 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071455105 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069897359 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07161441 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072120953 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071619525 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072647199 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069985749 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069549954 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070963286 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071494483 seconds)
  done (took 3.346443938 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066651159 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062086316 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062880903 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071256435 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062598979 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06315243 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062411521 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062914642 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063236439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062860206 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063728741 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062395155 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062733609 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063601322 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063657255 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066930627 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079579941 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063000191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062131582 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062982298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066931291 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06254018 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06287573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062553361 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062416631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063709499 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066654073 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063896926 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064699025 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064356893 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067848308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069072751 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063909882 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073661589 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068327731 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063955857 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068182951 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06381044 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064999549 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06443922 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064115586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063979123 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064224413 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073248761 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064586588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065446028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064167287 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065761612 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064717141 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066779101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064110731 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063718614 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066397017 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06531004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069595687 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063734928 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064652292 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063694084 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064207792 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062559567 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062795769 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063039474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065707495 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063441635 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07957695 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07135575 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062416806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064147231 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063000918 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065677798 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064541394 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079987802 seconds)
  done (took 5.935147311 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089085018 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091077782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067485931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067173565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063494222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063203954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07093806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063293839 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067985172 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082291206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063543261 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067817382 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0680801 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067729282 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063527587 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068102941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071738317 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063462311 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062994573 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06723456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064511636 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071950352 seconds)
  done (took 2.7671333 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150590504 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069518046 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106107167 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073510786 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072128986 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074676785 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070816958 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071014197 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071163183 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071508058 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070790955 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070687068 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072911352 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070992538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071044692 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071006292 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071480148 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071249634 seconds)
  done (took 2.632729184 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078786514 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068523452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087670209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068260345 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06856399 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068285841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072468717 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073548117 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06849722 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069321024 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073249686 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068331175 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068324529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068483957 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068368264 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068451238 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067986129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069101664 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073125725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07279972 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073019081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073377223 seconds)
  done (took 2.801765536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079438358 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06737992 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082391366 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069796868 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062713622 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063504911 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068961372 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067584295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069339819 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067548547 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068259656 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063228495 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069949456 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06847833 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070311157 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06832315 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067472107 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06920843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06855825 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064691761 seconds)
  done (took 2.611148166 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092684373 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066034491 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066081631 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072808137 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067023428 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065764135 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07221075 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066265519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066625398 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086860464 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066842151 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066718195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072863882 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069788975 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066292135 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072505073 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072585799 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072643964 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069586324 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066614116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087024825 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066363492 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087675466 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065706752 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06574275 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065767324 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066239139 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069716109 seconds)
  done (took 3.226790443 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066322819 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065543169 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065807102 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067659711 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066529671 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066410415 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067538499 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067186414 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067258084 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067929013 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066884089 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066667014 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067045319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067534128 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067420704 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067208142 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06719218 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067537922 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067381197 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066180366 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065331615 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065622741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065420921 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066074728 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066101135 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065232877 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065552809 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065632249 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065728453 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06573547 seconds)
  done (took 3.250935695 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075655065 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074017934 seconds)
  done (took 1.403241257 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065039549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079536233 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062395429 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073803033 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071695023 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066041141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072090647 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071894359 seconds)
  done (took 1.811003978 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089432367 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079296244 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065061349 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08241175 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078963838 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089273373 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132220498 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064582059 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075597402 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065780673 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086934886 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067671766 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075229194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069557378 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075034256 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078182086 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062585738 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065461398 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063157472 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065226731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081113922 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074430669 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063007555 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070134876 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092426413 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083229282 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064544376 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071307984 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076634822 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075118573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061918521 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064818841 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064631409 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063231164 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081964446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086996976 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071495516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078399607 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065202204 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07551411 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06297126 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073934418 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075135506 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080758147 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064859249 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064649879 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062879348 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06610962 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07078185 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062819181 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069233183 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062294443 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076631588 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072600567 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079423056 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063356638 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070568884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071218918 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072471129 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076222777 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070777427 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074388497 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064111204 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079928605 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074357904 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078914575 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062623513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062045352 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063248361 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078645391 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098707439 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074930473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065094141 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065315776 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063188991 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072288626 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065242913 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076337625 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076275093 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064777397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072396564 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077384397 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069404375 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071289905 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072125182 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063435089 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068256714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066521694 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084196176 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064076671 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06326892 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066750484 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081426801 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07234548 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067028808 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066254829 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078234664 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062660758 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06464676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065453683 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070084029 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07747357 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068023059 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071381699 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07772981 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076523593 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069415272 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071375617 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06260555 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066226336 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068611838 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077716365 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063165094 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072516437 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06977794 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065275244 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076631832 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063640852 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065203615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076800558 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074806156 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062115432 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060934448 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070258785 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063211622 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065419618 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075992472 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062124954 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061652376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061587115 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070748306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062493099 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075594098 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199520298 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075382056 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065252539 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06611728 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070303958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077963228 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068622932 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070756584 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074334286 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070810363 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063540005 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076570938 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072432496 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066917495 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073825063 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069124495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062564714 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067171071 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071567209 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063574487 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072449742 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066543271 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071371359 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065173812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062905321 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070306687 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065177927 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06725343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069867539 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063554217 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079783956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070991945 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062860589 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062241009 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070735648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06607113 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063685099 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067292668 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071161223 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065393144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063231721 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064339135 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070707031 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075678124 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066828318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065102611 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074082839 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081631717 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063873596 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071547149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064333287 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065030324 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065217172 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078590825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074745494 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068896764 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071732115 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062338112 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076327325 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076656246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067455031 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063464506 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068088755 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068489063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076316618 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068469216 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06508192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063440794 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071538637 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06772226 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071641484 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064561435 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067404791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069553664 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064009315 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070405294 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065421603 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079121851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072165403 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063384263 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067003606 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063507069 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076352023 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062958258 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066343338 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06792797 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065536723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064343479 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071608874 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062214618 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077463926 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077216183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070128512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067206932 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064501717 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077344745 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0703316 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072897066 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072007652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074129738 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079607263 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067181425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071426638 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079054027 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064449125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06188661 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07610356 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063146037 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063466695 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063195198 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063107602 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071183079 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070394532 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074397073 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062147848 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071044002 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06309329 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067051404 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062721386 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072986479 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071477994 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068171988 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075984619 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064203632 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063540259 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071837714 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063194279 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063779717 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064895361 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070871954 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064515578 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069810512 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066147599 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069157815 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065940474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061662677 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069706833 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063548319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068764212 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072448496 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063016134 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.206386515 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072900074 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065772742 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071980672 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069519112 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067924105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072157587 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07090792 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070520098 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072069346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06286423 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076559057 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064156645 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077337127 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069549332 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062068447 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069810388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07116541 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068547704 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065144873 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064887842 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070320242 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064087498 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071326198 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076641037 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066300482 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079907214 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075518859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070340777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07118037 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.0701243 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070239086 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06716047 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068922781 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064778168 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070512657 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06434894 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073628557 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072188531 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070200093 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0710286 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065096461 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07043216 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065547202 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062517497 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067257302 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067618109 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064612664 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076619297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064895504 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067679599 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063864325 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065208158 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063834507 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062492854 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071586583 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074004739 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065122707 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075392547 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068908872 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072843803 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082060297 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06396426 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065111504 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064925315 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068067329 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079788096 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06697982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080436683 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07165347 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069234611 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064088296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066991297 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06524978 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064487303 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064675788 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074856035 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068985079 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065858794 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066543465 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073527537 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066281778 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077357409 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064122776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07090915 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067118501 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064122621 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068973559 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069177942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073894664 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067228761 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067984352 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064178542 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066593893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071144732 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072358514 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066223607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072217476 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079478295 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066492725 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073805281 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068644831 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064179876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074128344 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066584369 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066464212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069396773 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074096287 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07418719 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066250846 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079230136 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068284234 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072644438 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066734321 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064607696 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065915319 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066163298 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066164756 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06866568 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067609124 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079177157 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06482674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072169218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071326864 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06995041 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076023414 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066160636 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072463395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070052141 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067707875 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072216571 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078575788 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06836245 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072012923 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064964115 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070441199 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075848469 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068004052 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076386053 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070944872 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065680223 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070899851 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065906433 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063836756 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062928674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062937941 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073435787 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063430827 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066145383 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066104582 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062436394 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06806913 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06544702 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076171868 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069902118 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070722306 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062129556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061784046 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06433904 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06520996 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069384594 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070604381 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072928827 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070025241 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067456609 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062633526 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07753672 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073014778 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070876571 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064929079 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070839409 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063822314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070060679 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068040827 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068519458 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064224577 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071203242 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069170183 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06612175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073150591 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071109891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064023783 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069165707 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069190818 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068551603 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061856512 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063850495 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069953123 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071831396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070483288 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063473667 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076947634 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064736765 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067842212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064423397 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062826781 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070957447 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061199395 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070116528 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063298317 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063197215 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061466333 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066227921 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065239931 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069948822 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065762379 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061534899 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077326917 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076881601 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06868278 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06222338 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061828354 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061463777 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06139546 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066336056 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063632858 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069230532 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076267195 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065771821 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065361278 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061695689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06356697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069599911 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070429395 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060818572 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060942083 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06572094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068794679 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07548038 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061678986 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063097476 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069794019 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06904436 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061220614 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064392928 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060697294 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070279015 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077803692 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063045653 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06964355 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07173903 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07455792 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.062452264 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061344422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.062363484 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068257229 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068674693 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063592996 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06315619 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079500922 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069415594 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065387204 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.061493431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069933436 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065404043 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076135126 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065257174 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.062824061 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071162922 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069369343 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067507502 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07288852 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072374925 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069375343 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06896896 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061613397 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068427038 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062005388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065976172 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063292968 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063193715 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06535085 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068835355 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065553526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07711951 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076003128 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065750535 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060565426 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065928768 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065992895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061931469 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.062780275 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061450682 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061684198 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061957656 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061503882 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.318249549 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075788094 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071209042 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067107462 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066313196 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064766099 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076535501 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073473945 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073053006 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06499325 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067456362 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067634277 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076400226 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070520262 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069290329 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07387565 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073367744 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073115159 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065132543 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078238751 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065451906 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072978639 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069438009 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066697687 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066695041 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07388249 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06987313 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067462246 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073169203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074223084 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067784357 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064328427 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064019969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075474321 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064567873 seconds)
  done (took 43.026286383 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104177073 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066280521 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065603918 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064889344 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075266146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066267639 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065948495 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066448769 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066818817 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069434127 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066584042 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065933358 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073499548 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081204185 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075496914 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070153018 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066146034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067069427 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066092059 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067105948 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073154787 seconds)
  done (took 2.900832631 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071265777 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078809448 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075858257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08084025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072641614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069084836 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076114082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068677527 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076464745 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073899541 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076696037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068665825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073977671 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074121604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074715303 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069590332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077359221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073612435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069962598 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076759189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069795481 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077084264 seconds)
  done (took 3.017382844 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066186037 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065228657 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072344941 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063718449 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06504142 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063719793 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067418844 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063729828 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06706636 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068193952 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069676887 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069457878 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073900128 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065393826 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071178146 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065246536 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112362984 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069108473 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067639882 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067225295 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066048146 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074265851 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065688271 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065962171 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069411434 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069840852 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067640347 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066069721 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06681259 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069301933 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06726645 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065622601 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073888851 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073470915 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06948621 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069877065 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066831977 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067345423 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068687315 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0657982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073454302 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066022759 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067413055 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07410174 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065775512 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065527918 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074091639 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066881769 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065812525 seconds)
  done (took 4.776020656 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075528652 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114371985 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069945633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095492407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077441098 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070811564 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06956414 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097287825 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06506271 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066057128 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078575599 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078559205 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067226357 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068954923 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069751914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067579104 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068296119 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066401526 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070219821 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066995941 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070570255 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071244665 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077743408 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079444949 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068713952 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066389793 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067197868 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068830917 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078135757 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070909138 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068748549 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069564625 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078108749 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070147198 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066843306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067415797 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081055233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069651085 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069273903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067260361 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068811792 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070010934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07256023 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080546289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067296516 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071795428 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067244838 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064900685 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077887561 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066528392 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070967293 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078528426 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067634031 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066783617 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068571914 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079901198 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069663855 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067686776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070081813 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080475298 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067766467 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070563769 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082405409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069460032 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073305554 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082039768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074693244 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070443348 seconds)
  done (took 6.493448358 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074244701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095959599 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081588804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080897308 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075109131 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076228145 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076385893 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076883543 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077296562 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080191774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076847764 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116155606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071087905 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076458055 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075230493 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075257087 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075637389 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075632879 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077469575 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077737247 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077630629 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08354902 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077583136 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083384371 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080645354 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073503955 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077482141 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077257388 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083772874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077530055 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080480817 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077462173 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077062464 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082623408 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078003446 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075019283 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065133814 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075083393 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075297196 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075417342 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071358189 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081257666 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075203978 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071142231 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07561389 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07542806 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081183345 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077893326 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076570125 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078374608 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074734045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081121462 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074990084 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075217948 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081327046 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084086807 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080906622 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080954984 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074876533 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081045663 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080874722 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08374999 seconds)
  done (took 6.29326949 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081502519 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071049813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082331956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063654048 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067020106 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0744159 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064931461 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065555113 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073848238 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0735343 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075451525 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075503022 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078244442 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075167607 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075614259 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077290238 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073563912 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073659857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07172299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07358441 seconds)
  done (took 2.893778471 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078093891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082845854 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069383395 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073389188 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069117406 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073844563 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068555266 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069751821 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07138717 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071526199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077166702 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07749892 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071581297 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076301367 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076946271 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075719968 seconds)
  done (took 2.594615154 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084499468 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071466601 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078224475 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06675246 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07100038 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066128421 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06697633 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065235467 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065874169 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07975854 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066836608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077814774 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066211234 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065591481 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066395126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072271923 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065562181 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066669668 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066606373 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07944206 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073673941 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06616303 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069158225 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064988391 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070802762 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072949097 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068363877 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070404456 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066590635 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066994529 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072785883 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073646423 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06645275 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067247034 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065783361 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066871896 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066603629 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066910274 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073020136 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066547721 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065283643 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071679691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06697939 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067782596 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066082182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066972176 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065594056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072508198 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067035386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072201855 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066808752 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069171008 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067408401 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074160827 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069494682 seconds)
  done (took 5.229868394 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08088054 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069100316 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06445286 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06452428 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090968258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071668969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070805139 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070690705 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07142504 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064988992 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071697247 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070646535 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072131358 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071331538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071708586 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070880942 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064980523 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071939096 seconds)
  done (took 2.711132013 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074253868 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068058644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072888847 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068515193 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069877171 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070182393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065805388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06546352 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065084279 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070810256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069885146 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0701223 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065025536 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070020763 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070381836 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070200802 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069407503 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07022741 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065230996 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069750004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065314443 seconds)
  done (took 2.932605065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096969167 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085210594 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145808695 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081302187 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091694687 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073661357 seconds)
  done (took 1.997229484 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093817457 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099509679 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068323411 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068882699 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075309649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073457731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073797655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074158001 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078436601 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07874894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07415926 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08124629 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078871051 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080340655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076153667 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076264034 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074116296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074295736 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070625481 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083184149 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074436019 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078458168 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074001752 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074179613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074137197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080601935 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078578845 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078842933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07383351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078362332 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076157247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074188163 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078591658 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078930362 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070754596 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078418139 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074445471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083248818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076430269 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080486228 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070585621 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076251537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078486524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07815585 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078596063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074173415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077736887 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073925856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074296844 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088441364 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076778997 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08031107 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076501087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07905158 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078882233 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085613612 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07944997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080702766 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076893524 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079699187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080780864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076576104 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080740503 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079592005 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076674161 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080242873 seconds)
  done (took 6.55293604 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105308438 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069811692 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072132408 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077412108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078488418 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072165285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071995761 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072761229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072071489 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069248892 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106637407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072494294 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078358635 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079943108 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074857346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074065756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074398226 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080475436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071557793 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085245098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074102455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080746707 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080071981 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080222045 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078582378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07625612 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07461151 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074163507 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073949052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073773282 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077971844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074003813 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079932499 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071407357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079973949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074291467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073862693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077981506 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074077723 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076096218 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080309488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083782113 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073875829 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073792793 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078679374 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073705102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073799412 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070848605 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074215586 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071052889 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079086956 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079582285 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079349572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080581508 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074741655 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074590442 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074199065 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074926298 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073746421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075546657 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078506076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072234279 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083165232 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072337881 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07220924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079233584 seconds)
  done (took 6.506817486 seconds)
done (took 131.806055942 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211857345 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186989024 seconds)
  done (took 1.807807105 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074919582 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104578184 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083306687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135198615 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072415833 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106328517 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105324182 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08359953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07214535 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072034472 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074036543 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.077343198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140337694 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074713149 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072343585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075012873 seconds)
  done (took 2.856214955 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104912144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214141027 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109813264 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070670565 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105599139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077910803 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073393852 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085553104 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079180227 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.074459133 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080532806 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078632932 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.074680927 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078411415 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078878868 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08009611 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.074033546 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080708958 seconds)
  done (took 3.054293738 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103204783 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094428692 seconds)
  done (took 1.636798835 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179771354 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13641715 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205174967 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343847882 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15089921 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.417755595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138632079 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138240062 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118376751 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.133846912 seconds)
  done (took 3.396927363 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104171803 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199141288 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295831478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125277618 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077436514 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10809361 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126201287 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082736117 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081859539 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081626019 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081497686 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078490966 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101390859 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077808416 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07681475 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078404232 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104736698 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076329169 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077942793 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077762973 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106068194 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071868984 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077321357 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075889528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081932299 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080759473 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07440393 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073538437 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079672934 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079705547 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083002786 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107762047 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079694256 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104962575 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075764889 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106399957 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079261475 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07596774 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078620504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076322346 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078966023 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078673028 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079846824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078646234 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073895899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080885255 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074873386 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073315694 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083858563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074430273 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083751897 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08361337 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109018036 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074974721 seconds)
  done (took 6.370297817 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109178598 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108223107 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072389557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113383271 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105232183 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071902698 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106260569 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100704073 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108297751 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072067764 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071065244 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073927873 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082889471 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087226571 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115575847 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109341137 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073982471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071936979 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110649732 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109959803 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070645684 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102631417 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098827217 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1080714 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070231636 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072352554 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070472131 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07174441 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079422357 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081009767 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071313495 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081501693 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084239863 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077919182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069546418 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070555029 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071025412 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079953692 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079477268 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079246623 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07785719 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070090924 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070603054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071518082 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071062248 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070803576 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079633885 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080005574 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077920182 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070636867 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071384399 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070455589 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072249741 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080831322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07904768 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079570516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079651455 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07044654 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070098641 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072743847 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08042481 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079607719 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079099095 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071422708 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079414241 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073132191 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080642744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083229353 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070374589 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07147557 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070272081 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070903572 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071370208 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077921239 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07790585 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071437245 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070610589 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070325387 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081885666 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079993936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072152709 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079241445 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071460631 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072207178 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073567559 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073626868 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080067917 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081356227 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071438241 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070574439 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071220076 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070556808 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06979101 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078863532 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078695412 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078348984 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077989574 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071060252 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078627061 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077457834 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071433146 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078366932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070375476 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073271636 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073623626 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081100553 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080079486 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082242308 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072892476 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072211266 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080208911 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079956222 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069830519 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076710451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078367593 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076777718 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069133839 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080242936 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069882189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07816414 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203470815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08101031 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071494777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079066114 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071561593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070221042 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071080972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078626928 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071670307 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070869656 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07234071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073027953 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080793028 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084900717 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071829675 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078111512 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07890469 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072133439 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080947998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072965194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081693019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073162666 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073849256 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071564338 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08396152 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072882426 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072240754 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073495186 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082830922 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073274486 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082773064 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080141657 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070372597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081474253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079995765 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077927776 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080068633 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071971765 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071262086 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070933669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072685527 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079462373 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080733138 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073783442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072772404 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079404301 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079917268 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069604819 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077754695 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077414306 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077806441 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070443855 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071353804 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081327441 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080168576 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078803433 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077843853 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078382583 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070808859 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077941478 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077869996 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070983648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083750221 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070439314 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081680651 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078419057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077040618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078637675 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079439566 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07981186 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079905289 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082849299 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070108381 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070232024 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078902919 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070415848 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070924864 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077481905 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071824576 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071491726 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082255809 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070794561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080164905 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070040535 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079008762 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069655431 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071525638 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083141141 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07066051 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071347884 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078233726 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073749264 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07766211 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079843912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077918617 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070282363 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071751669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079109845 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078852978 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070592568 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070042975 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071549901 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077634499 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077066969 seconds)
  done (took 18.957603334 seconds)
done (took 39.526155224 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235482292 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174889835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.205035703 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.132765877 seconds)
  done (took 2.292819395 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115339341 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109246835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092018156 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066778697 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097854331 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066819702 seconds)
  done (took 2.028219253 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.347685728 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.236772109 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210796174 seconds)
  done (took 2.269111045 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223998718 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211933438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464963471 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287235364 seconds)
  done (took 2.767745197 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14678685 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087018678 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066467304 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083407994 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128240319 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152613985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09786591 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122337247 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077483331 seconds)
  done (took 2.500433185 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160009695 seconds)
done (took 13.509973091 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113493671 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110383246 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080474129 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073978666 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.209472756 seconds)
    (6/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.186916239 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070806405 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076413506 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077430095 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.173896839 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.12412368 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135679077 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.205831435 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.229307916 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140225385 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075629537 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231103478 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105711517 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095174747 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07739179 seconds)
    (21/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.175157064 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076089324 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108101595 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13732976 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105290335 seconds)
    (26/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16299434 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067677076 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107545647 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112544225 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106262629 seconds)
    (31/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.203668118 seconds)
    (32/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.124311315 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074221257 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076964166 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075564794 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.235595773 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092243036 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067799494 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 0.184774414 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076297318 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184321782 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07571601 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123474038 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076802549 seconds)
    (45/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.141064978 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066363732 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094688043 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080859599 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076282939 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067031766 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.159716703 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092179775 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071591758 seconds)
    (54/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.183922543 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076414795 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124975349 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.068323203 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066850862 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074121231 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075878527 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.203910782 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073921324 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076118649 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.185561956 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067358499 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075815007 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067151927 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140318162 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066258383 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095720291 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104459509 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065910336 seconds)
    (73/309) benchmarking ("sort", Float32, false)...
    done (took 0.132605001 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.2005384 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221242725 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066987234 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090297491 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06692264 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077888641 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066887029 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.210538283 seconds)
    (82/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.132904017 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185618776 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084600482 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068195205 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189174776 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094926365 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135935201 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096710894 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.231013288 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079367474 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.172351333 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065484748 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.267006369 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.229078626 seconds)
    (96/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14422427 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069908174 seconds)
    (98/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081640094 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075785204 seconds)
    (100/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06889704 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068981835 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066906581 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092701434 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200006738 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122557642 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.132117489 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088138162 seconds)
    (108/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.139249983 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071147707 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067777338 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.170005588 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074067081 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067777732 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077188023 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211315402 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067155642 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159072582 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075248732 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066192939 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092741661 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068003373 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066631529 seconds)
    (123/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078186942 seconds)
    (124/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077703199 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176985963 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071196005 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068432198 seconds)
    (128/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139783523 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076050314 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082237322 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077150427 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.20287809 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120845179 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066551388 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068520033 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094718088 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076284089 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068270409 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111122852 seconds)
    (140/309) benchmarking ("sort", Float64, false)...
    done (took 0.132224366 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067704527 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092865681 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133532685 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088887092 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074546539 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075756564 seconds)
    (147/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06861215 seconds)
    (148/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069111739 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077119443 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139250643 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077450883 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077200756 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066319628 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139372495 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075236826 seconds)
    (156/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067517882 seconds)
    (157/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072925511 seconds)
    (158/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075421903 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207750349 seconds)
    (160/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140874034 seconds)
    (161/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075469753 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068738179 seconds)
    (163/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067529232 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16780331 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075525848 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066057076 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066213305 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066937106 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161573013 seconds)
    (170/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139311557 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067327615 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 0.250381247 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067408943 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076921236 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068314742 seconds)
    (176/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06819877 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076703978 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068255824 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.144898585 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076642134 seconds)
    (181/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072722193 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068640693 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078216152 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069525802 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.195455969 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190326334 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06779992 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144886972 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183842357 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163234621 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067888841 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068614718 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115962408 seconds)
    (194/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079780545 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089577341 seconds)
    (196/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069302492 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068461315 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072626887 seconds)
    (199/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067472286 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17897941 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066136774 seconds)
    (202/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07496941 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067632815 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100909853 seconds)
    (205/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068383112 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182180923 seconds)
    (207/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071229723 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067307553 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091555811 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.179317453 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067717676 seconds)
    (212/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163270735 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066940761 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097566342 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076272421 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.229481021 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076867863 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079472304 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076315126 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080035852 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227927456 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067347774 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076047368 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068482704 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074186248 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068299277 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067224992 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070564529 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066776513 seconds)
    (230/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070509325 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08027474 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078478385 seconds)
    (233/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083382269 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144126671 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074271505 seconds)
    (236/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.070639435 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077773511 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072153021 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141765446 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06907365 seconds)
    (241/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079115391 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075064358 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070886104 seconds)
    (244/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068600948 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066727174 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127211194 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150386653 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068184565 seconds)
    (249/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067637144 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068359459 seconds)
    (251/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070459728 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082033172 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068777662 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070671689 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143694715 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069245338 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198133313 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067912616 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068080136 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083411771 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070871089 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068072566 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067876889 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.208950711 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07123763 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090537642 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066624861 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067239907 seconds)
    (269/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.213776883 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067231061 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075319275 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066903514 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148191883 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089996854 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068262506 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077014857 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126528798 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07419986 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067103133 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175912303 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066741059 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067113783 seconds)
    (283/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068191344 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068257323 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067021962 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092047028 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06723463 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081517355 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067801405 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076747258 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141205381 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067956114 seconds)
    (293/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067705444 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07124726 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069116124 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076221099 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070373139 seconds)
    (298/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076013382 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19130433 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068013652 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067313599 seconds)
    (302/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073699565 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069176828 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124905075 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066706477 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068054295 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067406912 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067967443 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141427181 seconds)
  done (took 33.781293786 seconds)
done (took 35.276139753 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089025029 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099747273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076463293 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101229469 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084613898 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09906206 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078750603 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083358044 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085876328 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084824129 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083375828 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077042091 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078938446 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078938097 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07737422 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102214718 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083152964 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076446531 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077584934 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069802337 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078252091 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070521152 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069505183 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076179149 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081261379 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077271462 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079046985 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078789404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069444421 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069823843 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07431205 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078465139 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069554645 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081968858 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078922678 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078188214 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079712267 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082035047 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06947689 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06986022 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080066015 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070432818 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077814576 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07625688 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074421139 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076863383 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077839923 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079594731 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097827452 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072137778 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07796137 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078512864 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078728272 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072952493 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07294423 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07559724 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074199329 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099923024 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07600345 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071858097 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077537877 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076628809 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073755849 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075549985 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075302659 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078306061 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07932157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074610942 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078520558 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076408054 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069299654 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077647995 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074476249 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072369102 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080532275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083105317 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068493274 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07348235 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077284228 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077964364 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069338861 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072032177 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066865699 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073295048 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071198918 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073466381 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07271737 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074666702 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067295409 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075845822 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074368119 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075215582 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066997699 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080211048 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067800123 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073657162 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06834823 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068112745 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066787715 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072769138 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067782669 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071862609 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076174181 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066772637 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072991574 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081430129 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068045451 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07539387 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067384976 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067702226 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078535837 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077210472 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067757332 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072121185 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067414522 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074425931 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068640056 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068885612 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067205245 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067422565 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072084425 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067224033 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07092438 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073130361 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079392666 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067100218 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071787914 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071306487 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067025991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073768383 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067478682 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067086891 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066781675 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080210328 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071029643 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067532754 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072592519 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0717693 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075969517 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066757668 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076417918 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073400002 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072330144 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074016251 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066621562 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077784963 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071316226 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07073083 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066311023 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06639583 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065887876 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066366298 seconds)
done (took 13.033981528 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070377623 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121308184 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.090769402 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092759413 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083194312 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068600866 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074310292 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089627278 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069562395 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095065711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08956061 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088621833 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1084399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067159551 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068291128 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069390893 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069462538 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077944644 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093100824 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089509272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104597536 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068060352 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085430533 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087333976 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083520947 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088003107 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069430717 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069302075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070942987 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089256207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092108026 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071129734 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069238075 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089460228 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085011613 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079742015 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06896699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075598466 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069057472 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067919167 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069537903 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086103277 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074990615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075633471 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069585157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07577892 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069592212 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081877748 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086875204 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075742655 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082155415 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.08960336 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070801763 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082409643 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067076781 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082366944 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075827021 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068749639 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06865243 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073190335 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068548506 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070359239 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.07745049 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075457737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071577074 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08106591 seconds)
  done (took 6.778877564 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087928147 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094688519 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084217814 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084248301 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06762699 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067983511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068540244 seconds)
  done (took 2.146800622 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068393433 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093338708 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095998508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095255439 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088130512 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095658914 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078764809 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068273961 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101798053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067557395 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092568126 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113961838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072475712 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079388845 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097057542 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069083788 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092930213 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068693185 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069575031 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096067415 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073046253 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094787943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079742077 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068451464 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084527251 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068938359 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124327322 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079009621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069924506 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069867198 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071313457 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.116479916 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084480639 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082099984 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069665953 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08262552 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08524818 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0718304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082406017 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07828557 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084697396 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0696598 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067688385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070652213 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074991954 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08158013 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069442817 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072550437 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071848576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097680477 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067488067 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084341493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072730471 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073581779 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074065844 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073222278 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077808536 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070074518 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092453824 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069868504 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087944384 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087835707 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08514033 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087640708 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069307855 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084493961 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084940364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069662776 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070620382 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070028796 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089066638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072295666 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070960861 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082006761 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070208442 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.103208402 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098455036 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068959766 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083096727 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069310715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069928186 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079580559 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09707049 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073190077 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069566761 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074607914 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070606781 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071358958 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067343442 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072619851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069866115 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074318147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069731566 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072154736 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070738602 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087842255 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068196585 seconds)
  done (took 9.300100009 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070465279 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069408363 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070784952 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069601994 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069850203 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06961525 seconds)
  done (took 2.043425928 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091693982 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069633871 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081973515 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069898615 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.119775757 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083318362 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08403472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079904519 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084171975 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083470787 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087035516 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089587119 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090555015 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073507044 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085936252 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072884745 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086046734 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07606997 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08283543 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07411341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084635185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073286356 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073948268 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090900125 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074890036 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072681459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080315433 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08278361 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081268789 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078069421 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071128692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07245842 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078025196 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078940475 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083529125 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079012671 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069937461 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074997426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07142871 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072142662 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085961636 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071971231 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072732406 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075129788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077328229 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076834626 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075161185 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077047017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083194989 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075173882 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075350603 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070693883 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072420457 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074856818 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076644616 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077394071 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075096147 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083624752 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070611099 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076379757 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06967132 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072073418 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077118998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072337799 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075529888 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074665246 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076391859 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070972065 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071143009 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069510381 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075279144 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069231396 seconds)
  done (took 7.198477734 seconds)
done (took 29.077700793 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.524213471 seconds)
  done (took 2.098823197 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.636325509 seconds)
  done (took 2.246335954 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.455964032 seconds)
  done (took 8.064784794 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.428593882 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50337279 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.770114766 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134264982 seconds)
  done (took 3.476852273 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698891814 seconds)
  done (took 2.321280172 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251080939 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236850825 seconds)
  done (took 2.113815372 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349078577 seconds)
  done (took 1.961518631 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.077093539 seconds)
  done (took 2.691618331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.286872922 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163226819 seconds)
  done (took 2.069798467 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458279596 seconds)
  done (took 2.072865854 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.29523976 seconds)
  done (took 5.914251423 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240958827 seconds)
  done (took 1.897726303 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232522932 seconds)
  done (took 1.856125574 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.758499291 seconds)
  done (took 3.377134189 seconds)
done (took 43.779396591 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08416402 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086303533 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086090144 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082030023 seconds)
  done (took 1.936389559 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075908074 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071788424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075924288 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071992476 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07578711 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071970238 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073688679 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075061156 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07218209 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07273404 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072345071 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072262579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075083625 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073580234 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071508232 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075275937 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076107057 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072310532 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075198925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072894793 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070401831 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075287643 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075392526 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071887719 seconds)
  done (took 3.387896612 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082901345 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074895894 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077852182 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073328927 seconds)
  done (took 1.937537456 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078650511 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092149223 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088088658 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079132918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093067847 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088313442 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069063793 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068776415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0723682 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078292223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067720154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096547291 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09077101 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078325941 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080838049 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065601528 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066777762 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089463702 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079712199 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07919345 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070368702 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079076611 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067776332 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08788402 seconds)
  done (took 3.534188845 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088264826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067968553 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088128669 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095047263 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093734854 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068206765 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090848216 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094407377 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139414758 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068701587 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073821701 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06811053 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106972786 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068187474 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085071736 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110556946 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113526561 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071347834 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099820424 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067742083 seconds)
  done (took 3.39308884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0847209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071395621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072570643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068716188 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079971827 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077225205 seconds)
  done (took 2.09053545 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070547514 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069639171 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070673873 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070878591 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076946811 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074654258 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070546178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072099244 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072092013 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072244409 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07146989 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07092275 seconds)
  done (took 2.49463658 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165192325 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071960034 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072553828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068197403 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074093825 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070885243 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084820877 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071061639 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089303131 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068624402 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070090418 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073233037 seconds)
  done (took 2.615082129 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188238339 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075292463 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221714394 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154475819 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101575288 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116283619 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114093239 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112885969 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138123355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096441593 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155749356 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156090119 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10708142 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127106895 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089128552 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124160278 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139313952 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154162089 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100204015 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15204191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138706258 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120367999 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13859536 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098137107 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099722616 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114346421 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073564574 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077279718 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156562524 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122993365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132650284 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104773779 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088783256 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165829844 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154479364 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13096953 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144215619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082044578 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117678243 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127048336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189669729 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088124041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149500072 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104575269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078512199 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120994734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109849172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113327512 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098332585 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087390476 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275691318 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169107375 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130617833 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084162243 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120323719 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10383012 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110007619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11590971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171424863 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147211427 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119966626 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071453282 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110435055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140497939 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124173136 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103940053 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116588041 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088807711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12917209 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145426877 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126811006 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136155616 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116899486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084659644 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114037489 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133015759 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117949081 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158279514 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116011067 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072417135 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112718344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093947577 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079445145 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144880455 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074858703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16183454 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096365295 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119676951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127702418 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106530364 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1054521 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144709082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137829481 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100914475 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085341031 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100150987 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113286961 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132991453 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084970079 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105511927 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107877509 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078177569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122073434 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073998111 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112619899 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093326441 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11406014 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117297957 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.227211771 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117003076 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100778176 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099713411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125207153 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145648107 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085681404 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078717938 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153013354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11298815 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.098313068 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133836726 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146583497 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11978915 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096470611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13882173 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169642684 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091316201 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150400144 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09799275 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081395133 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103498659 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114112481 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105576389 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117346426 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079787891 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111472837 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154890028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07323849 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09268281 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123875981 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079539009 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079083825 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099784705 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098994947 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093635636 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097643183 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099109712 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12553062 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114935185 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100752298 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11668971 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094204748 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154074273 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085777111 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099587339 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101232132 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072508002 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128462843 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144047726 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077247869 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154988746 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118073026 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114943255 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113110554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081584283 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133449188 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077536004 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071839851 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130060024 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107249105 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103203069 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.292269987 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113919079 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116493562 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112546529 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119942419 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121193361 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120186511 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103471595 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087716868 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109809546 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121443175 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072552241 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089084906 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080992069 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100733022 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090804718 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082439186 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129785804 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116062697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109525121 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108675379 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093969456 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13767174 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076786371 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117352487 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115510476 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092100008 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.141764772 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140187887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12249721 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098144617 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128185239 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07288561 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073857642 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085874726 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117771956 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082593779 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081825468 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106852959 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139231543 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120733725 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12435011 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121662774 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117000224 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147239615 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073050873 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119406793 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135387494 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113818797 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102064965 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088805384 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095718657 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13208644 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098743745 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17342045 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10794188 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116337044 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144421213 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097959511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076806949 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099938604 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28151698 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096764313 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132587652 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095899472 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084683732 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103598867 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077602462 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094151624 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119144927 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109664608 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127474959 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106696835 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120530864 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076851299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105431188 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115061587 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112699407 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082760036 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112698698 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152634184 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094592998 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110937704 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138968119 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077307549 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136998829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157952554 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135018895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082464728 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099456979 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114525909 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118547763 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11267616 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134584382 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098708501 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129120086 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106049946 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086474958 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08389461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093282387 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100777782 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109028406 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098677533 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106868251 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09367664 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12278156 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098265974 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105981545 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111053168 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098614591 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095969062 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093877897 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16108449 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110716747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157053792 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09685167 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131297449 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152779193 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074101228 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077203042 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078056464 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28464488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083508539 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120786236 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111136181 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114373418 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113865958 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133799977 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092896462 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071143836 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104068755 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121426119 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120548837 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093470935 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.097848556 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147456928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113662247 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077192252 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11176223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115277137 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099718068 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159801085 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080588384 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108737188 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075742595 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077763206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11826089 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140055998 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084487436 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101424191 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113731561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104531219 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119165493 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093267942 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110070174 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126974523 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135233716 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119308485 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087806408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106121659 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12119356 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142387504 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099869747 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097747514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159006738 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13963423 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148226368 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083619117 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108673674 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10861175 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104962878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12577123 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082433515 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154968322 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081029402 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126343835 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096228469 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085983284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118874651 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111123733 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085197944 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286630086 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109585745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081170216 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079038522 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105319092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110752467 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098331998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073526526 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128979763 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073576482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124766983 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155148273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078815803 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10030442 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09381749 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080631801 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098028661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097808667 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083640849 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097079168 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156521957 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08574457 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136712051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12494085 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106149346 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128099745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10001041 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64055736 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07844094 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139054077 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109232367 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16676974 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096489735 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111012604 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105336522 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111504986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132740116 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097728525 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178019908 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122374335 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110140883 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07715778 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097835707 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098243632 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085393873 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1041395 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108226228 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106427842 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091318428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110221048 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113865801 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081258058 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093153047 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142467511 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109763997 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133721756 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134379187 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082461285 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110255072 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123037938 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230811761 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115049394 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141770284 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100399323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097310378 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082153045 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.094690135 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158067054 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073106879 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147577727 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112040174 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105230944 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10749882 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103639041 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120102876 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097879193 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113307606 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088525591 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1051324 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106720491 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081789418 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077902664 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10107089 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105544006 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094266813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092863775 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097394081 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138345768 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072304509 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09429238 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113611068 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131456379 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162778197 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103815594 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081923371 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111370116 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111751359 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106987036 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113314879 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115573564 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079799102 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080116351 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099434686 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119512012 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106937345 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116910296 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105944682 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155265224 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083612239 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225787642 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092364822 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101120007 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087656318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079343669 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093616628 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092936578 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099324672 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110314019 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159654958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092423732 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087631642 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088718207 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074056812 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081304808 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116843335 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257428097 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111174188 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099710438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082128546 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099126983 seconds)
  done (took 56.720179018 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103547453 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078941146 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098692697 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150690229 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123204055 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204325488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154360508 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190292748 seconds)
  done (took 2.853446262 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069537997 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097305781 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103676176 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085235764 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070833012 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071331387 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.243203957 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085370418 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071647944 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100761291 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081389661 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070467127 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.440788704 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070297694 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071584661 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078857894 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069201485 seconds)
  done (took 3.620454646 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390670352 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595838965 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.387698891 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076763768 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.910075868 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093621403 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.142816837 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141433715 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082847152 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522130975 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370487383 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1336123 seconds)
  done (took 18.603594434 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082799295 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079831751 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090946922 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090746856 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079154998 seconds)
  done (took 2.170239645 seconds)
done (took 107.015150596 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082464161 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.197128499 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069555864 seconds)
  done (took 2.042759342 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091535284 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090223219 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089291661 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087294038 seconds)
  done (took 2.111183276 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075839446 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078509733 seconds)
  done (took 1.901453703 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243769556 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175173683 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100037432 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084943992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081792209 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082364163 seconds)
  done (took 2.006703931 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073971928 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073928863 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074184284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078814309 seconds)
  done (took 2.048459001 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072496808 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06828601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070560136 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073260848 seconds)
  done (took 2.032635579 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085901853 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086266997 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080726073 seconds)
  done (took 2.002368521 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107390978 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09553223 seconds)
  done (took 1.952042427 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082080691 seconds)
  done (took 1.834855314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097172991 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10628406 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131903446 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114698481 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142054017 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119122771 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08434349 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088892547 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079259564 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085856681 seconds)
  done (took 2.800538427 seconds)
done (took 23.081915187 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080257796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37176998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364824578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091907969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67344441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358481305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992735828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093153749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112291235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070650047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087922537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650835552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984421816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336167876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972039934 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327239643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65284879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070429602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070008121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070683086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976937067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070032515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070586203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070373166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650675973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374706746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07117273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327001849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071029781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07457895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360737492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072253117 seconds)
  done (took 16.351233524 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072806243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122736964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078250223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086489587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072012956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071512973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073293011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071088082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12220139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070730202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088269698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070269478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074169599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071699448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090830381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071126707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073789227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071761947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071412094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072361744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09009942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071074739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072204209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07183294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071946048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083897388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072580102 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071204873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071717769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075046679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076001883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073011761 seconds)
  done (took 4.263280759 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118614657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12672984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078535165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107976299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11826532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073105364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146975898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094078243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125182604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071551887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088477778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070993636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104748681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071965151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091856853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071472524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07395616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071827565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071402573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071980507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090463451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070923198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071981349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072531982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072481755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085978674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072518739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072093504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071662417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074979595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076712654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072592036 seconds)
  done (took 4.52282247 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072356213 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074358405 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081903484 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082699591 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069293511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0719227 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073408278 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069545235 seconds)
  done (took 2.365677387 seconds)
done (took 29.266922448 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07966046 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06971679 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072950095 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088627471 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076469436 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080212704 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067349143 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076396146 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074005532 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073759263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077590962 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069058107 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072402428 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067224012 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07374484 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068610281 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081980166 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072540404 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081012475 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081889853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071472948 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074565263 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077765774 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081292948 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081345905 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081829455 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077974633 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074550238 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070014993 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072537992 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071499028 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078982234 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082268767 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082916087 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069377482 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069080098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073486787 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070579953 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082728902 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07794078 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070943363 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07817736 seconds)
  done (took 4.912897176 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084849933 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089510364 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083045337 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081706909 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098254593 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083601861 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087079124 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078495868 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078971206 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086862889 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075298452 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082501013 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080418196 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073994697 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078375868 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076089386 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0807817 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075453765 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079088977 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078488995 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087888006 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074299417 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088550285 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081030566 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076404786 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082136054 seconds)
  done (took 3.908392013 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0749635 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086712188 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093873392 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144441725 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112260171 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08733888 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0829288 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093804977 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098592132 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06993782 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074378399 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094112973 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094670557 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07610391 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112031615 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085409421 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085724679 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07196195 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077340232 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098741642 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090342445 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08662114 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095381362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086487708 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069969833 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072316141 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074438668 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085033616 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072469914 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080858671 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07276274 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073092324 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07075764 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.0803343 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072451765 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069217348 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092803987 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081051413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082313574 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10671202 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078517401 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070565832 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094912166 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128956233 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069058638 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073062256 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073149001 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080584084 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069090908 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097243996 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08150863 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069325679 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070482648 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069016166 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069190048 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072440516 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071206984 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071604497 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079885502 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075893952 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091202578 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074520318 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088701882 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069209466 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079847723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069186451 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070831244 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069120508 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097908219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071397579 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113111872 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070851597 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068594343 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080646019 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079793446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075652281 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070123707 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088750136 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080397955 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073542083 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078043066 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072515139 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072953439 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099864573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070004915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069095792 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068571682 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07535517 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072791305 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07035929 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081731773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069266806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072627808 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089127054 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069721228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070531311 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072875024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071559178 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069005232 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080474234 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074228186 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071107979 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0799496 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070131761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072931312 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08263211 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076808151 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069013253 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071431763 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072802575 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071097381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071628564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073020042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072041666 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077096081 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076610189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07561885 seconds)
  done (took 11.12134432 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16685762 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15972096 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071455924 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15105264 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078831487 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081401505 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155206392 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09860934 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07027192 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071756508 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070689837 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113622144 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109542083 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11915889 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082085187 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070864589 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095279441 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11832562 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157699449 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150849458 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092741668 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078233125 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072956245 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071872699 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072494882 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080196763 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086787962 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079159987 seconds)
  done (took 4.640270022 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079194285 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105322108 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074443175 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092363102 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089523898 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071005747 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072106269 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072230327 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086316591 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079598987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07041296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075572062 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074236232 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07391915 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071231381 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076553864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077323587 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069757235 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074952252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076010623 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080336562 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094741037 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076120814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070384254 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073011967 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070547799 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078408716 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081796254 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070363569 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105917568 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068292531 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074698943 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084352645 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071080261 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070066344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070703357 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070806085 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070206287 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070734839 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06891089 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069089938 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0741319 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069267025 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078281733 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08323168 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077220852 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072327206 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072862907 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073003451 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067985219 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073797075 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073074011 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073503599 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077841521 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074319815 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073758809 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071921846 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096029905 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076440884 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069860988 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069532972 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069229727 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072641366 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080150646 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085619289 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072654372 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069253102 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071047257 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082476171 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082965024 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069665901 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074979736 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068388637 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07183595 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073220605 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072983373 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071333675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068928705 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070102457 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070741653 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070915948 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070624521 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06957366 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073137572 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068700125 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069681169 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070788816 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07444881 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078700766 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069691249 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074853396 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071528342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069461051 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073084458 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075899357 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073787679 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080951145 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081061417 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070968132 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068894053 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085749057 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072917348 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073103409 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075730477 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074807067 seconds)
  done (took 9.698313824 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091519341 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070379909 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086096135 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09317025 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079719558 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075050522 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080658481 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070521088 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086284351 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07489038 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07796786 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068637497 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081026931 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079674603 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070742585 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080854819 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073012451 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090412531 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084140184 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068887386 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078879629 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082269723 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082372978 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084475945 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08395051 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085435917 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081897477 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079298428 seconds)
  done (took 4.061024311 seconds)
done (took 40.105585079 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.875257329 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.100982147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.850142859 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.055096937 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.902781923 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.064747368 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.938921157 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.840943091 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.091870577 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.891384491 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.125239812 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.316964578 seconds)
done (took 66.962881405 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.869236444 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.994335961 seconds)
    (2/2) benchmarking "String"...
    done (took 2.0933921 seconds)
  done (took 5.866834295 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.075350203 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.503124194 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.107523017 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.841896829 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.849093203 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.27024046 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.624312612 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301033522 seconds)
  done (took 31.272286073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.027336337 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.061767127 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.562644025 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.593883303 seconds)
  done (took 16.071640175 seconds)
done (took 65.028201799 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.864664949 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.845878656 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.852408179 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.869084054 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.851627207 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.84656651 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.848910932 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.847691524 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.867176748 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.092957703 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.851233398 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.85722279 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.847376273 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.862974479 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.367758571 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.896963893 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.853160377 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.859543874 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.863008827 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.851896141 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.85155521 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.847855857 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.269951967 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.999407527 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.462082343 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.968793238 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.165680825 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21843985 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.846932481 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.842226203 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.047969903 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.077122429 seconds)
  done (took 207.27505458 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.841103411 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.697977343 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.808420404 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.890201639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.106539401 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.026443488 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.946270514 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.187350921 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.849783393 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.869681159 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.007880066 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.844844762 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.025731576 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.790711616 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.879375557 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.872904712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.00042212 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.039505697 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.887698885 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.006331898 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.853279308 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.91333655 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.870798163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.003639315 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.889537107 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.945572089 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.845670981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.873520126 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.03927203 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.953980966 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.88425168 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.859965746 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.049297645 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.715832136 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.8472048 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.853710874 seconds)
  done (took 171.756028908 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.035278032 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.852950269 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.847572932 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.89900426 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.966220939 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.852025747 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.518174286 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.854806205 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.256411281 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.85159002 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.844983285 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.844853753 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.844431363 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.84698596 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.858583857 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.953122497 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.848476391 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.860062807 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.848684129 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.872605385 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.846951188 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.846538039 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.844668951 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.846713283 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.847606236 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.847053665 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.847618031 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.102910811 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.863054099 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.097623073 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.845351486 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.845287043 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.857750773 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.054949246 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.845278423 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.849372782 seconds)
    (36/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.848143518 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.939688039 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.90396767 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.977646356 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.851845441 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.065336975 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.925406403 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.849100015 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.847869994 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911390964 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.856958227 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.848143406 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.850220865 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.853404828 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.912787202 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.125355977 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.852414727 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.969579889 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.344071043 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.85262442 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.848373884 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.84855033 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.463791949 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.850136466 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.848767187 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.853973703 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.854556671 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849535945 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.850402563 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.23470188 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.847965297 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.918926692 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.903264882 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.171348864 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.857529676 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.968993254 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.977916231 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.847916357 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.84748216 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.849476197 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.84965941 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.85008525 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.851395512 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.969482859 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.859743779 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.979581526 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.934145737 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.970462418 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.852769622 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.859109624 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.666097598 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.92317315 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.885851358 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.686583299 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.853731479 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.222148694 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.631231014 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.85419633 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.849421609 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.863466134 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.850768103 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849853743 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.848876314 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.929531857 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851716341 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.973053358 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572473345 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.215990377 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.857899954 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.852196273 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.858333891 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.93175238 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.972476926 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.854776702 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.91803571 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.857640759 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.852861149 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.938931929 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.852988149 seconds)
  done (took 409.142814815 seconds)
done (took 792.049707937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.541016742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.518828216 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.611653469 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.537670593 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.507307338 seconds)
  done (took 14.500828216 seconds)
done (took 16.286112603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92895467 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.937991978 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.875747995 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.934110825 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.873151092 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.930760191 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922399484 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.878210853 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903844541 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.874722652 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904145947 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.874180882 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.860578856 seconds)
  done (took 26.484327871 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.074891432 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.08069648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.917633779 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.080756198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.891943753 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.069650708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.007009267 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.996408437 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.994777366 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.863465191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.863043914 seconds)
  done (took 23.628758635 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.076700776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.08019368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.924260142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.076902649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.896299296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.084167482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.002787364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.000609875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.996611919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.862924243 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.860461436 seconds)
  done (took 23.64825273 seconds)
done (took 75.54994502 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.858282528 seconds)
  done (took 3.644862561 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.875525831 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.031805148 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.856279361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.857826503 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.856182348 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.857996662 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.8580168 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.856618611 seconds)
  done (took 16.840998994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.856212633 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.854277886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.855430356 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.85604887 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.855960651 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.858715232 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.857898358 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.857142977 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.855646035 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.854989023 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.855962699 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.857247543 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.855277976 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.85732372 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.856011817 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.856092433 seconds)
  done (took 31.487841389 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.856357259 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.855480989 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.853750546 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.856332197 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.855070495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.857200598 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.856663503 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.857522541 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.857454396 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.856235437 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.856785209 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.856353649 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.856767884 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.855841029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.855389892 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.856483192 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.855832197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.857052158 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.862717614 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.857029591 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.857927636 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.859089812 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.857517353 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.858145255 seconds)
  done (took 46.361667253 seconds)
done (took 100.124141198 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.625276492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.464658366 seconds)
  done (took 9.878683115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.859669048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.856674137 seconds)
  done (took 5.57582752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.856504639 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.857769786 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.857454429 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.860927929 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.858495223 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.859692209 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.856571013 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.857098744 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.859280124 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.859359826 seconds)
  done (took 20.373241241 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.85908237 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.859202731 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.857114376 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.859089048 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.858835099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.85852392 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.856683442 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.857846104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.861908184 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.857301902 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.858410249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.85974499 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.860121635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.859398486 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.861084276 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.860174108 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.85851575 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.858379337 seconds)
  done (took 35.253160077 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.8595266 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.859979153 seconds)
  done (took 5.508370624 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.857938008 seconds)
    (2/7) benchmarking "second"...
    done (took 1.858359172 seconds)
    (3/7) benchmarking "month"...
    done (took 1.863130671 seconds)
    (4/7) benchmarking "year"...
    done (took 1.859826835 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.858601504 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.860546976 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.859720778 seconds)
  done (took 14.809019049 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.860412926 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.030183924 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.095134449 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.505981043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.860623687 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.863064735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.785915867 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.863510407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.863477172 seconds)
  done (took 20.520239447 seconds)
done (took 113.709007817 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.684546323 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.862921497 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.155773073 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.921182842 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.885715564 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.200094282 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.864273391 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.124309342 seconds)
done (took 43.494676458 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.871105389 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.497107792 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.526450746 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.887377625 seconds)
  done (took 21.703751699 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.86356263 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.185327151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.885278169 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.67092796 seconds)
  done (took 22.445205658 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223577262 seconds)
    (2/2) benchmarking "read"...
    done (took 2.205990175 seconds)
  done (took 6.227227405 seconds)
done (took 59.044867129 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861321804 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.860033247 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.860970599 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.862441257 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.861402773 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.861381549 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.860988811 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.861284018 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.863196682 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.860986793 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.860906143 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.860863257 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.862828932 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862728466 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863548866 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860705719 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862669962 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.861870492 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862077082 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.863424363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862414812 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863263335 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.863263453 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.863468023 seconds)
  done (took 46.480581408 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.862994567 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.86329787 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.864301172 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.862527897 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.863202414 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.86487467 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.864330582 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.864920685 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.862787211 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.864764136 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863422646 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.8640031 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.863960425 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.863526098 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864612058 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.865082547 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.865001592 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864658737 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862943073 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.864460933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.863331783 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864332502 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.863371861 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865110994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.863863624 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86459078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.865168699 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.863730951 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864672185 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.862237921 seconds)
  done (took 57.717941664 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.865113549 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.865652606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.864183323 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.86296119 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.864414645 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.86472274 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.862945462 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.863787303 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.864407739 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.86456028 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.863737914 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.864343909 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.865657886 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.864125351 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.866423552 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.864445939 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.866214114 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.865672788 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.865020422 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.867101949 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.86502446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.866016871 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.864568073 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.866458547 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.866252997 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.866567235 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.867156045 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.865997894 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.866604605 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.865671881 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.86650081 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.865843228 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.867359119 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.865512155 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.865443054 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.866816571 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.867712789 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.865793944 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.867105259 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.865418472 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.865737765 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.866695068 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.866037095 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.865515881 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.866584711 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.866806657 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.865383436 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.867620532 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.868482198 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.866291097 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.86648285 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.867466491 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.867920221 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.867504637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.866352364 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.867460765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.86711494 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.867339398 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.867146808 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.867723115 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.867660727 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.87022791 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.866186836 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.868441622 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.868580921 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.870692519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.867927192 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.866991384 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.869662282 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.866348705 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.868359202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.868320419 seconds)
  done (took 136.174288819 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.867759757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.870284521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.869686318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.870407611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869272138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.868805258 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.869675748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868118284 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871607589 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.871439283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872371163 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869306657 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868669579 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871666116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.870572699 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.869498155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871188502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869502416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.871059403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871792508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871416852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.870137891 seconds)
  done (took 42.944702195 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.86987903 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.869823665 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.869834385 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.870092448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.86972167 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.870119567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.871304428 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.872408189 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869076587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.870624253 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87059651 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870155221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.869902866 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871051699 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.869588398 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.870082542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87005798 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.87104491 seconds)
  done (took 35.466869336 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.870523395 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.870083245 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.871702093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.871050157 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.871601422 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.872483958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870916658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.869861356 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.870190772 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.869265804 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.870839608 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871032745 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.871750106 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872615371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874574787 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.873355765 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.872732421 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872605928 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874471468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870508553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.871845409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.870702644 seconds)
  done (took 42.97811858 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.872657314 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.869956352 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.872745617 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.872797608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.872366286 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.871572724 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.871891408 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.87363519 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.873076045 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.872611896 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873738786 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.872273926 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.872675846 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.872683105 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.872634046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871921177 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.874421627 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.873021321 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872041998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873806811 seconds)
  done (took 39.255393646 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.875130656 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873196772 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.875003022 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874408164 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877103112 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.874275783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873497201 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.875740687 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.874851514 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.873464207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874650148 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87464326 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873796975 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.874459777 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876552302 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875157453 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876831628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87429089 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877301099 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875419444 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875118199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.874240111 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.874527152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.876088218 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.875969014 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.874253599 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874897202 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.874366517 seconds)
  done (took 54.306113833 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875777069 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.875572179 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.875532919 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.876367267 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.874221589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.874600734 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.8763666 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.876221445 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.873987721 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873793136 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.873112649 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.874547714 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.875160351 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.875209202 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.876042099 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.876368452 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875975827 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.87518202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.874870647 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875153257 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.875851123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877267913 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.876461663 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.875637902 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874112435 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.876420763 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.876038964 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.875336404 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.875268415 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.875715604 seconds)
  done (took 58.068100183 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.898388606 seconds)
    (2/2) benchmarking "in"...
    done (took 1.898537447 seconds)
  done (took 5.60659987 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.87561389 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877408107 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.876497818 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.876417133 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.879382158 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.877483209 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.877727925 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877913082 seconds)
  done (took 16.826513365 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.878892052 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.876106857 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.878624857 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.874967642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.878215103 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.877302313 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.886486793 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.877223058 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.881037206 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.881671801 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.887022645 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.887414036 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.882404996 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.878924601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.88114258 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880563538 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.8785097 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.879503974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.878575965 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.875670795 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877975869 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.884070991 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.883858633 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.8797386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.881671073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.891735036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.885501624 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.880766585 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.87876271 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.884568165 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.878974925 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.878356764 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.878097456 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.879178366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.879143946 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.878143765 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.888142286 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.882895217 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.887220854 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.879170254 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.878353023 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.880593276 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.883980296 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.886575005 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.883492941 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.878993838 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.879634199 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.878819204 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.881321994 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.884893604 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.888716034 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.882548254 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.880547767 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.886538696 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.884930142 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.88766302 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.878036249 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.885608157 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.888561019 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.896677338 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.891703136 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.890577233 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.885984181 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.881701982 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.892331707 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.905887477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.89034805 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.881217125 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.881707606 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.879285105 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.891926579 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896857156 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.894087418 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.882340664 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.883931651 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.882570609 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.884002922 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.882751214 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.892867641 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.887211312 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.880844038 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.880278042 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.891379623 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.907199917 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.882919208 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.882169905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.881107641 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.880861397 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.882254637 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.89320462 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.881050707 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.881822236 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.881799701 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.884870017 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.883268487 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.880757071 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.88221063 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.883293998 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.8805376 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.881532142 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882993547 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8876053 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.892960697 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.881779041 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.882606652 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.891000607 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.884649004 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.883741144 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.890499866 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.880737427 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.883135428 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.880944721 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.891498273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.881425564 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88758569 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.891375964 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.884972214 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.885617811 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.882228759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.881389141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.894099682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.912666059 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.883836679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.884093005 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.888386751 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.895166955 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882979513 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.891618382 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.882963104 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.883321243 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.884961343 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.887198501 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.884746472 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.885938926 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.883188224 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.886092242 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.886438052 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.88308986 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.885429444 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.887547378 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.886950164 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.886647489 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.885767699 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.887896922 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.886134645 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.886984078 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.891794236 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.883976729 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.887007338 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.886383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.886766557 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.883138931 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.888101545 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.884539676 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.887411895 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.883575173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.887254454 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.885103364 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.88501381 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.885166681 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.883515501 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.887282187 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888773946 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.884947145 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.891246682 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.887205652 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.882973111 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.886135694 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.884822732 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.886665662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.886481572 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.886874274 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.890637832 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.894528033 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.886165444 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.8860139 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.889710657 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885697444 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.885109245 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.887255583 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.892681467 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.897518778 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.887467324 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.896076517 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.888023244 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.886430347 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.888778014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.887853063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.887515473 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.885083233 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.892122243 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.894151729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.900623741 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.897837552 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.889221274 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.888951704 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.888980429 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.890916217 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.89210268 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.886987271 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.887226106 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.886632231 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891495891 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.888390101 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.88959689 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.886428284 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.886591011 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.887479624 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.886432805 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.886088448 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.886283414 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.889862771 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.890065942 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.886609034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.887296275 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.886356279 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.890391494 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.888150008 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.888864263 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.888924967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.888229476 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.88701171 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.896835039 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.888868909 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.89222866 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.892688988 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.888446043 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.888738347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.889667553 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.89262399 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.890527096 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.896184361 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.890579368 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.889250017 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.899618798 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.890190564 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.889535369 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.893467708 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.888116 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.888976576 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.89450823 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.897802173 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.888676566 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.888160316 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.889795532 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890162898 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.888350364 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.897218795 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.889808501 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.890449606 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.888776666 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.893085508 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.889653839 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.893016748 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.892867015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.890732887 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.89365031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.890841846 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.888635441 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.892885834 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.890607026 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.890654884 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.889643804 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.892496499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.89551998 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.895923697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.890145556 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.891651377 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.891276114 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.894859579 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.892307284 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.890091344 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.893403522 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.904031531 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.899050746 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.897044677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.892716834 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.891606642 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.896499501 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.893503938 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.895099097 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.896177339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.892944582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.893428129 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.895157326 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.891337723 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.892536932 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.891107464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894523626 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.893696582 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.895948907 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.891563359 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.891815914 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.891872859 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.892377263 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.889578436 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.894655174 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.892346722 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.896439068 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.894585071 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.891772271 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.894034046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.901162848 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.893505072 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.894769133 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.895244642 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.893282158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.892478594 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.894829848 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.890988026 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.895841683 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.901652004 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.897738148 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.905730939 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.894568487 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.90442765 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.894393123 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.897901791 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.900644449 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.892749125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.894671387 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.895511707 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.894212555 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.903891889 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.893799508 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.896739584 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.899089224 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.896207402 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.895544102 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.895195408 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.894100603 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.894375554 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.894032088 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.902679702 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.896529579 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.899554274 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.896681542 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.893932739 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.893134657 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.894821616 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.894975308 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.90042232 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.893641045 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.896678832 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.896911245 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.897466092 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.895150951 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.895375056 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.894647915 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.891938716 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.894579393 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.904077573 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.896313549 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.899692714 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.895404951 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.903889797 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.895011874 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.904323478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.896635242 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.894851046 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.89498419 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.893689594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.897037443 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.896279776 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.900370214 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.896332772 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.900555871 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.901906911 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.895457232 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.897856205 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.89797437 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.895334919 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.897309592 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.907939413 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.920031823 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.89979106 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.901789991 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.896757534 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.899092302 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.899835844 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.896684611 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.89444995 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.90360133 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.910946111 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.903071832 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.899752393 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.898471984 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.900208023 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.898649476 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.896284654 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.895554542 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.896817291 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.899615752 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.899819745 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.899042819 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.901789786 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.896673409 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.897939599 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90247029 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.900271119 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.910309779 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.90022587 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.899021588 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.898242663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.898160478 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.902373022 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.899232335 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.897983015 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.903838742 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.896078865 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.899959259 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.908812265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.907216339 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.903137335 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.900247199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.899544426 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.902334692 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.900884133 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.900894034 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.896293951 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900086424 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.901260368 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.899296685 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.902396027 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.900614351 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.896129833 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.899855786 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.89737124 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.90241889 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.908896971 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.899771524 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.899591986 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.897104856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.899295271 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.899868155 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.900879785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.909338164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.90622699 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.91335801 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.910836118 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.906266645 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.905748518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.903733971 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.911891567 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.901184884 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.903981323 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.900033547 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.902756245 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.901296636 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.907273877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.9009679 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.908522052 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.902823063 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.898399657 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.908752209 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.904843246 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.89981122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.903022915 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.905290924 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.901185743 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.897773355 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.90058684 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.901190669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.908946032 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.902941794 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89978415 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.90368177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.898972146 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.903839741 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.902857587 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.899640752 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.904759568 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.900801784 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.901273079 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.89990326 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.899925004 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.900505105 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.901905359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.901743879 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.904893722 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.909243946 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.901688222 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.904542528 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.902879291 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.902560677 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.904390771 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.900752838 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.902871841 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.900983441 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.902447584 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.901650379 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.902936068 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.905595189 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.904023513 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.903563976 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.906386083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.90272717 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.907613681 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.91366735 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.908477281 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.901928063 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.901787647 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.904421162 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.909773203 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.902726491 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.905110989 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.90267214 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.904773726 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.903094357 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.902302545 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.901278562 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.908061203 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.919191974 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.903452257 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.904705563 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.904794618 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.909794233 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.902862393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.903463835 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.905236514 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.906327108 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.910286468 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.909954964 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.904755106 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.910811802 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.904576365 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.906167737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.909959302 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.907512489 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.915024191 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.909797663 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.901958378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.904764636 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.910269108 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.926333882 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.908059707 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.915263995 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.937687293 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.90869881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.90593892 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.905700672 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.9084639 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.906859067 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.907144057 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.906958469 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.906270503 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.906455859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.904990251 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.910039187 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.915911137 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.913695929 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.906236226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.905159085 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.907338341 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.9097181 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.905772457 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.904872648 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.908603755 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.905722105 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.907195647 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.905681278 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.907985465 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.919336786 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.916166847 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.90744399 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.905959498 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.908044335 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.913339092 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.909487123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.919783918 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.918182425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.907626947 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.908781285 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.909514202 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.906400852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.909445793 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.911520889 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.911805362 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.910946853 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.908576062 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.922389047 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.917894299 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.921266585 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.911517952 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.908703242 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.908953564 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.911730558 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.909882959 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.908812824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.912961248 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.9106266 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.913353012 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.90147066 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.900798508 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.907820376 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.911652397 seconds)
  done (took 1131.400698163 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.905692633 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.904094497 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.90196705 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.90256927 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902927111 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.903382544 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903198295 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.901785888 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.903085163 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.902926753 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.905191785 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901639602 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900476438 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.902539404 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.901934776 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.904364441 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.90222545 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900792212 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901721598 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.90009662 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.90182901 seconds)
  done (took 41.786702727 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.902360794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.900708805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.901437824 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.899859066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.906517469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.903645276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.905055084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905310144 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.904973178 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902547817 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.901249706 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.898752716 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.897922321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.898702817 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899165352 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.898627524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.901634718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.900659711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.899646632 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.900113353 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.899126329 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.899776787 seconds)
  done (took 43.660194217 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.898683401 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.899233387 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.902346518 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.900198006 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.899287475 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.898744324 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.900122477 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.901126039 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.898236478 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.901387816 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.899079883 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.90206261 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.910151731 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.908022676 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.902733794 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.898616856 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.045950365 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.900907641 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.90139599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.901876519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.900451795 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.908247833 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.900165468 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.899985087 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.90010603 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.898361894 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.899098993 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.899697247 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.898517999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.895249417 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.898025371 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.89380252 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.896107548 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.899470741 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.894838972 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.894525563 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.896367957 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.891532029 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.891545769 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.89339642 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.903135141 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.914866671 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.891952073 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.899959205 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.89208812 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.891690706 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.895812573 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.900708635 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.891508886 seconds)
  done (took 95.030905408 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.894128307 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.892198916 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.890882881 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.892517906 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.893619853 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.892145954 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.892125442 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.892653864 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.891757228 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.892844391 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.893174001 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.89295073 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.892458997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.892480699 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.893218435 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.892165598 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.893560692 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893182179 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.893600095 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.894424432 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.892647021 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.893724679 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.895019138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.892519697 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.893537519 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893278036 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.893519908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.893133631 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.892869164 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89374394 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.893228429 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.89386723 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.893286735 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.893351327 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.892220458 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.893948881 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.894169818 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.893756113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.892501639 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.893649111 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.893003797 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.893497188 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.892935945 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.89398652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.893445062 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.892981656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.893824414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.894241007 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.8931185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.89398745 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.894074423 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.894399382 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.894731134 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.893935393 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.893144935 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.893369822 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.894404476 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.894507031 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.892995745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.894839173 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.893489759 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.893548841 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.894247256 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.895152757 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.894681093 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.89431288 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.893660119 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.893995666 seconds)
  done (took 130.577921164 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891622091 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.892056949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892668095 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89321135 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8928775 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.891492634 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892297809 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.892720245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.892424094 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.893310854 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.890732289 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.891471787 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.891275048 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.890336906 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891041403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.891664785 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.889026767 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888725206 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.887887806 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889709095 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.889754808 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.888391505 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.887918546 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.888543397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888568958 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.890263272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889212239 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889328056 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888062157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.887877113 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.889135951 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.890401416 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.88823274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.887221208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.886921212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.887964244 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.887962598 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.886398067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.88676263 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.885933861 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.88659238 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888308551 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.886241302 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.886144868 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.886643504 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887431768 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.88963441 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.885582733 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.88626207 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88659992 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.885726158 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.887385651 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.88787239 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.885710815 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.887176032 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.886082919 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885715623 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886002828 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886192242 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.885823979 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.885991416 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.885805803 seconds)
  done (took 118.922484444 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.884995949 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.884873903 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.885489951 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.884658821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.885216065 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.88557614 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.883409594 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.885050458 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.884438729 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.883793324 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885158833 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.883974721 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885257118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884327017 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.885000408 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886222386 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.883153664 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.884416202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884080032 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.88317922 seconds)
  done (took 39.507942736 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.884577424 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.8843113 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.883716888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.883799989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.884256603 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.884137422 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.884665008 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884179305 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884258678 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884978635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.885906415 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.884450122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883880307 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.884340948 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.884781588 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.884537713 seconds)
  done (took 31.965006228 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.884258625 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.884491727 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.884730029 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.884028518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.884431627 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.88440611 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.884226277 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.883216611 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.88408155 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.884598118 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.884210807 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.883332567 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.884074661 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.884479584 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.882765243 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.885266125 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.884510186 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.883180139 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.883353106 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.883439629 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.885657235 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.88326781 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.883905444 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.883114327 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.883651757 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.885278368 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.88502781 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.883091116 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.882803193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.883506427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.883167005 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.883298211 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.883183555 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.883624031 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.883403555 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.884495559 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.883952935 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.883722601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.882472854 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.884144571 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.884693675 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.884142808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.88259541 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.882509563 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.884883745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.883412291 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.884619189 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.883439577 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.883487365 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.882997657 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.883668189 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.884534729 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.884817403 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.884882327 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.88408671 seconds)
  done (took 105.432191436 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883759811 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.884788894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.883752902 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.884330748 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.884193639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.883806393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.88380633 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.883843035 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.883013147 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.884020364 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.885141979 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.883916632 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.885440924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.885536854 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.885342088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.882810491 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.884333862 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.884539388 seconds)
  done (took 35.7304985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.883765916 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.883432032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.884676217 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.885468663 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.88279904 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882729757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.882776341 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.882129035 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883832307 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.884521632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883264397 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.882662011 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880368387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.882300046 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.882987294 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.881560899 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.881380805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880526451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.880170895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.881883424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881331391 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.881171628 seconds)
  done (took 43.230721036 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.881652542 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.881478487 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.895816596 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.899440098 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.901254474 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.911191356 seconds)
  done (took 13.181866361 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88350168 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881746216 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880588544 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880459636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882110837 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883374974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880968558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881098789 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882271779 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882058568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880422238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882553208 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882441452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880440908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880866327 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880211203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882235749 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880802628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881013113 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88051712 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880847012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882302093 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88127194 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881597032 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881421995 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88016485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88072551 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884441729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882197116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881054894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880610944 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882747571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883595985 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881726775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881557594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881179137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882042008 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88243742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881645262 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881933233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881710231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881568096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883113446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884064987 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882987972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882678073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882710598 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882597151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883360105 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882434308 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881826811 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882769604 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883082673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883662103 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882034171 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882918984 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883093401 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883550297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883763112 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883922754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884722853 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88431892 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883213016 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884069682 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884613123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884066116 seconds)
  done (took 126.042564752 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884203493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883695006 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88459165 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883984011 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883404224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884366971 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883136661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884831577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884623234 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885450721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884871117 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883771431 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882993343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88504573 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883504502 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883399464 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885245049 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884048229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88452038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884010862 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884234345 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88418941 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885690942 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885409803 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883808343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887605934 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884966279 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884730133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883943597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885341972 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886193728 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884379015 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88432503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884952288 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886103078 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885523614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885399007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884774557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886040367 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885467032 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884995197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887754267 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884886195 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885971386 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886107289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885048693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885222343 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886881934 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886897463 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886556159 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888471187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886528989 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88644999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885696485 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886713464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886792809 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886883011 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88865704 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886707471 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8862101 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887936758 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885019653 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8872457 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887097251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886403166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88732008 seconds)
  done (took 126.254420666 seconds)
done (took 2620.349558313 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.946466642 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894144547 seconds)
  done (took 15.657658414 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.061286472 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.013189297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.899518036 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.948385621 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.899844844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.920644186 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.921957607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.900322533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.900067556 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.900256673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.899663898 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.086168201 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.958518091 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.899412868 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.900714378 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.991450878 seconds)
  done (took 53.09020576 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.904061897 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.905545409 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.912674614 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.905147072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.902897948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.920959195 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.935963331 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.907180197 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.960625846 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.915689334 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.025148044 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.918302985 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.90325339 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.959236814 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.920301883 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.918773764 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.998405059 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.97945786 seconds)
  done (took 36.622352103 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.980527895 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.91277267 seconds)
  done (took 10.730312438 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.901445464 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.930575697 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.970506907 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.934061238 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.911707402 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.913940076 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.934059898 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.929668668 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.901510678 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.934657429 seconds)
  done (took 71.095123035 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.908248661 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.906574613 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.903300481 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.901987368 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.899960352 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.90488775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.902659318 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.905349169 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.567744259 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.942789302 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.911013789 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.909112179 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.903113483 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.90488207 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.900776906 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.92482699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.016872418 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.901124048 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.899154007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.907670204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.902795754 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.953933081 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.918407101 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.904515463 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.935088002 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.569813539 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.912374641 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.912498547 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.011541792 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.900816575 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.904218708 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.089767996 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.907811228 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.364206202 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.170286315 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.909472703 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.917098757 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.911995646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.900974426 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.017114766 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.905303816 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.909791503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.830964377 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.150608133 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.008028335 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.947654277 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.205897495 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.923274682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.903948599 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.932881959 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.907065561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.905028753 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.919260042 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.417012361 seconds)
  done (took 134.63452606 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.902063369 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.247630001 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067816532 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.904000946 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.186674156 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108698809 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.904924316 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.949626013 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.905538147 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.131400486 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.157611719 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.006939514 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.905812688 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.902268285 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.90550734 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.901827851 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056655095 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.973562397 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.906759465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.902978095 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.930689865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143258053 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.025888289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907883569 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.930434298 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111820542 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.025404595 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.004793934 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.687898667 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.90326146 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967728511 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.906009763 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.902062082 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.903985537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.05846573 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.997414249 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985607041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.906584309 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903052743 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.90531049 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.646669419 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104341876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.998740657 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.033361551 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.153735135 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109247029 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.682909284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.903126138 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.637854773 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.06662668 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.131145109 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.131718823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.027659714 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.907083314 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.425091679 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.903546756 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.903700976 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.154793166 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126576845 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.001913208 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906399044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.905596418 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.90476118 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.192092083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.908363383 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.000203311 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.908317921 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.906621445 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999795342 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.003176702 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.136623604 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117235418 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.936501918 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.243643565 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.41333667 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.15204977 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.970707238 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154979665 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.908165698 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.905064362 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983009223 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.751617019 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.158600602 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.187899183 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.151459178 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941119086 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.620386469 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.904922564 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.132479152 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.127449708 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.16620668 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153676339 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.588788528 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.236376454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.907743555 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.905296656 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.155597246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029671641 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.911614511 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.24662732 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137165758 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.427850439 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.931714924 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209065375 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039206246 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.911348352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.544219739 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907194474 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.134549922 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.946519335 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.90918183 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907267014 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.126086521 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.895755186 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.907429634 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.552461932 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.967986642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.91277178 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138998872 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.915508465 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173716191 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.910877463 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138880916 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.315916821 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938626239 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.138210817 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153667326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.915158301 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147042503 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.149561108 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.022620823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126337108 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.532389936 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.911050279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.192572333 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.911479296 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.907241229 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.078314204 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.910152764 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.051526161 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.912016792 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.20300065 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931432325 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140447715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912398014 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.160047192 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.942506803 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959368984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.913206497 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038105911 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.911133108 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.746514304 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.06449166 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909663333 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.910036828 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.701514763 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.911120358 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.056941969 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.132769564 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.930915761 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.984229151 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.570221477 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.908945675 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988446409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931112281 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.298414391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.909603806 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.161429956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.911401303 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.909296185 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.910076431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.194707875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.090936993 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.914167608 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.908801984 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.811028989 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.909250387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.911855887 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.089632106 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.254150292 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.911942479 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111161925 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.914366815 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037929705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.913856401 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.989305765 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.247861846 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910271871 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.913675861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.910482078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.910734782 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.912406807 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.171680783 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.938273734 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.401263391 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.047002226 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.180509295 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.221179392 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.148972932 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.953256429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.91186704 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.162402144 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.912320293 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.973261527 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.913234359 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932062504 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137078434 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.91541048 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119893373 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.179683972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.750394174 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958697659 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.915529772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911991938 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.911745571 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054867854 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993531118 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.914373301 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.91087911 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.026420354 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033074715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.118636801 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.914135977 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.990609288 seconds)
  done (took 912.074560325 seconds)
done (took 1235.727088705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.914470612 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.91250777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.915368434 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.917291067 seconds)
  done (took 29.503275701 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.916626013 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.914688167 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.91496858 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.914701596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.916147643 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.913991 seconds)
  done (took 13.334568682 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.993942962 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.917456598 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.91620994 seconds)
  done (took 21.671938713 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.984123391 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.29760295 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.050883763 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330088587 seconds)
  done (took 10.506820178 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.914463771 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.913882753 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.914853119 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.916015102 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.915174525 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.915244052 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.915326531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.915196025 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.91633568 seconds)
  done (took 19.080808893 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.069442308 seconds)
done (took 100.011082647 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.06405238 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.464170978 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.056866407 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.980298834 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.012007417 seconds)
    (6/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.073237865 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.020830941 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.068721926 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.930812134 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.050502415 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.667446796 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.020044031 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.152385125 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.248830814 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.53574291 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.079789129 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.918001563 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.328732771 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.923504645 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.916900704 seconds)
    (21/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.272253969 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.943025261 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.916491937 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.171143649 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.224431114 seconds)
    (26/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.151592934 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.236552432 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.871855737 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.919487456 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.341149475 seconds)
    (31/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.235255552 seconds)
    (32/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.955260949 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.004133716 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.007910876 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.049135292 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.300024643 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.897306557 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.604753997 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 4.787011991 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.941994565 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.06540742 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.092100392 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.040046677 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.91792036 seconds)
    (45/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.525133252 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.028238422 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.267317538 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.589665949 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.002369929 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.310384171 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.138739212 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.58477572 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.993571604 seconds)
    (54/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.166669249 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.922901628 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.490706873 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.57597075 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.92520047 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.997684499 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.148536311 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.056611224 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.077572377 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.932201534 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.078405742 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.080718675 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.936600137 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.26159429 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.376787723 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.01712814 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.941674965 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.298531896 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.104904655 seconds)
    (73/309) benchmarking ("sort", Float32, false)...
    done (took 5.630300243 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.277917556 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.939816813 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.312078098 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.810498274 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.162107397 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.938630409 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.105149553 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.659259382 seconds)
    (82/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.923170559 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.919814134 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.745750516 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.241291275 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.229088529 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.81280852 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.002016258 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.53131682 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.216530286 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.926310112 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.278418173 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.006600861 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.049648319 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.9190696 seconds)
    (96/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.038899912 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.950948047 seconds)
    (98/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.87914737 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.949184209 seconds)
    (100/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.305605337 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.924379052 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.130670188 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.861429587 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.299801341 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.926633538 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.234330493 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.888211846 seconds)
    (108/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.190350572 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.989330444 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.094023475 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.017284275 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.944158565 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.225466356 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.927945058 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.262308187 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.015623815 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.07248785 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.169876067 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.102686043 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.921872091 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.511642771 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.274957391 seconds)
    (123/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.925632381 seconds)
    (124/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.047769359 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.103938313 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.982939582 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.216414221 seconds)
    (128/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.004990436 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.229921624 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.420557052 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.953170702 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.140183779 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.931472836 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.093220456 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.923763277 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.006562204 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.94935644 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.923251045 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.194007667 seconds)
    (140/309) benchmarking ("sort", Float64, false)...
    done (took 5.669546362 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.167786902 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.70164447 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.054677997 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.811678434 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.306372703 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.077492445 seconds)
    (147/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.00246019 seconds)
    (148/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.186858015 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.939922748 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.922852938 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.95714947 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.052455643 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.368780579 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.105621018 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.164459543 seconds)
    (156/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.926286287 seconds)
    (157/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.113101164 seconds)
    (158/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.934408693 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.214908978 seconds)
    (160/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.108407671 seconds)
    (161/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.173463908 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.92368546 seconds)
    (163/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.309871198 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.069761959 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.952405635 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.35430646 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.17546908 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.213085366 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.16332887 seconds)
    (170/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.928118042 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.424170161 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 6.927957085 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.928187479 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.080934929 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.035508966 seconds)
    (176/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.942685685 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.02193815 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.236305243 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.033782341 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.1400593 seconds)
    (181/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.026126452 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.036196668 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.951220785 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.307971137 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.03784069 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.377797519 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.171691298 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.931900327 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.928125367 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.118959496 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.930515442 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.339764115 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.0714147 seconds)
    (194/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.58756402 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.942234849 seconds)
    (196/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.987561478 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.06353298 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.024622551 seconds)
    (199/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.046514271 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.932783391 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.304999884 seconds)
    (202/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.956398116 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.227313701 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.545984354 seconds)
    (205/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.144096924 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.935440866 seconds)
    (207/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.079826787 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.080501217 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.238223502 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.44768512 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.030626703 seconds)
    (212/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.789531422 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.268028404 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.931589603 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.048312961 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166717617 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.013366261 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.929549127 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.089436401 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.264128797 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.761472926 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.36727822 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.950510091 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.059108549 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.159619328 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.039081752 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.251894957 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.250150951 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.184713079 seconds)
    (230/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.397614853 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.629306507 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.250716203 seconds)
    (233/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.416709207 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.938299188 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.06358 seconds)
    (236/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.019235841 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.96106503 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.250899613 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.969601258 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.126425069 seconds)
    (241/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.937469765 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.948383105 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.008455872 seconds)
    (244/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.234028411 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.053597649 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.933972934 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.906920837 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.932600894 seconds)
    (249/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.572544727 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.300535747 seconds)
    (251/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.166921471 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.936830748 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.071856778 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.927937102 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.010483969 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.019569854 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.09578135 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.321881338 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.93572244 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.821814812 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.995119386 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.92991324 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.165623148 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.013047898 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.065231172 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.602165378 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145049635 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.826157869 seconds)
    (269/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.249088195 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.036141309 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.206738179 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.374035395 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.934342262 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.038759998 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.734158875 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.345626709 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.858698991 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.952650098 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.139730313 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.931276771 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.251607129 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.133447162 seconds)
    (283/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.04241643 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.933597847 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.749600968 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.945088415 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.3109714 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.828842987 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.092755293 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.782942578 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.931112133 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.932974938 seconds)
    (293/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.049341794 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.092959591 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.668097027 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.97455018 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.692261051 seconds)
    (298/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.936297955 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.930798734 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.198754039 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.272086578 seconds)
    (302/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.93971857 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.931008931 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.022416555 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.237690946 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.934003831 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.043467745 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.691156859 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.959589845 seconds)
  done (took 1022.343666628 seconds)
done (took 1024.251154883 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.962288223 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.954509592 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.938391252 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.958496374 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.051734552 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.980735312 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.951979313 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.941649879 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.988699287 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.987890504 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.937274213 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.979296463 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.938147941 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.93998871 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.939010165 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954392968 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.233187798 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.967799138 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.956267397 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.949933022 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.955344729 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.9369292 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.988191025 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.976562136 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.942988211 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.944126914 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.942046688 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.956954825 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.051239686 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.944074034 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.943107107 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.951069889 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.232524486 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.967795746 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.937550974 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.959071642 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.950939479 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.950332115 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.943732188 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.973799664 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.321403993 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.972815292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.938894989 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.940315208 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.941297444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.946877291 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.939741995 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.94851153 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.953889351 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.953808738 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.316058523 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.990167056 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.945385886 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.94167994 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.954447141 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.940441048 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.945645492 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.956286099 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.959199068 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.958167038 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.219760571 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.975884978 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.94479302 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.958418656 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.950426023 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.351015058 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.974143073 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.94882561 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322260034 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.982277015 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.350319127 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.985047897 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.944845979 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.955238488 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.975785275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.235692244 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.96770359 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.93978622 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.949915032 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.940218784 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.954094443 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.955884828 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.947062237 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.941553631 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.960101002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.986857593 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.955953634 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.942042649 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.954681021 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.965980026 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.95144581 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.954488751 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.946236483 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.939469705 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.955922183 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.947687841 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.94727047 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.947662006 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.947778831 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.95690187 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.321887149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.994587128 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.940735432 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.939959052 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.944419411 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.958058489 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.32253999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.977532886 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.965779736 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.993934472 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.94478223 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.222776137 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.977808334 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.960716524 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.956147515 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.946092165 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.942183032 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.222129223 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350699981 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.995900696 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.944638942 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.941676492 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960140263 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.945970133 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.941898902 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.238253461 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.976932529 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.959283021 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.067030888 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.958280392 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.976340515 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.941546698 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.94888241 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.988886371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.962800479 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.975975485 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.947181204 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.959722143 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.961068806 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.942585407 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.95603427 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.957516798 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.944092238 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.952786381 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.941010173 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.990109375 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.958290459 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.959631119 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.967055839 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.068244201 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.940958341 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.224251036 seconds)
done (took 304.806476781 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.023391856 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.941873831 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.034673212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.941583205 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.037204347 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.016550323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.942351646 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.942714293 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.950975464 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.426761097 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.942119676 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.946251055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.941593057 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.941200209 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.018717898 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.943499053 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.941697503 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.376024867 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.943720404 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.023620989 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.942683165 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.942260205 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.942104661 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.427514711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.941761055 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.939102098 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.020876466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.942920246 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.378902743 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.940307559 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.941905232 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.377655461 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.022640737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.971434058 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.952564148 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.947431057 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.031517141 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.95264499 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.010533735 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.018265272 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.0362427 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.978521053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.938975093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.941264486 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.945731882 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.944548504 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.943668847 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.976742856 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.943281958 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.949675846 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.376889621 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.949541084 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.9474712 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.94466373 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.944354853 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.972083744 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.944793598 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.944676861 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.023608434 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.944718404 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.013015174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.428674051 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.429431672 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.94460651 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.944651601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.944707632 seconds)
  done (took 190.089720039 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.010420015 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.021273088 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.009193993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.948322095 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.992001246 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.015787277 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.947592675 seconds)
  done (took 15.815552317 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.953414418 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944782472 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.993661875 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.997059091 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.944094349 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.101735368 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945714865 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.957329656 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.950626757 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.973064958 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.944055026 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.944962846 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.950527756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.946979496 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.994506197 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.957686438 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.060611849 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.948666581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.944205028 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.094283948 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.951275033 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.952005582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.97050624 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.957811533 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.945842911 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.955449758 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.51812 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944157 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.944179479 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.94497123 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.944862287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.98874665 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.946012542 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.944308756 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.945153826 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.060143086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.946253345 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.947671273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.947930486 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.945326362 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.946582477 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.945226186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.945143551 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.947298305 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.946577738 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.972262081 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.948382429 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.946222246 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.943685131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.946353977 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.971865701 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.947019965 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.945818654 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.95318225 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.989653362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.952747449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.945460605 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.945243209 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.946151575 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.946739798 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.094548512 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.997583315 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.94773404 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.996770991 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.947438269 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.947445057 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.947749945 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.946970372 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.036663735 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.945456343 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.997773444 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.946090058 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.107474493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.970648754 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947867848 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.948254506 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.952019355 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946507525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.948633345 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.95889099 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.944959038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.95174175 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.954850846 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.952851446 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.949313664 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.061221391 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.089954404 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.946087869 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.948803719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.956424749 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.94743616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.993169276 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.947027949 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.948210814 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.008694361 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.063765918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.976557268 seconds)
  done (took 213.329488887 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.956547553 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.955790061 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.950519599 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.964965384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.950980702 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.950017387 seconds)
  done (took 13.605093938 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.953528124 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.952127193 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.94887329 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.948843265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.950590574 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.948801935 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.949871956 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.952936766 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.954752758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.950466419 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.950063765 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.950959909 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.949570538 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.951559382 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.950785975 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.950368843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.949737011 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.950318734 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.949730298 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.952268595 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.204732905 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.951318717 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.951502089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.954972793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.956318409 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.951839073 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.963686851 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.950643854 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.950677909 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.961436577 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.953829528 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.951646989 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.954750287 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.957911642 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.956518274 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.95559516 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.955911214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.955200453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.952103605 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.952816684 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.953047133 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.953194067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.952616405 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.953832848 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.955531806 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.959492045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.957514092 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.966863133 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.951888423 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.954635541 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.955869744 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.95185791 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.954140874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.953091276 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.95702172 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95985615 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.958880147 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.952078355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.952660917 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.956686696 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.957391785 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.952961884 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.953671992 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.956721594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.960642676 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.953616526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.956987159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.956609579 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.953229602 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.952011274 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.955727221 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.954505621 seconds)
  done (took 143.812637605 seconds)
done (took 578.538729626 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.290422594 seconds)
  done (took 9.170206266 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.14046167 seconds)
  done (took 9.073664869 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.155325143 seconds)
  done (took 10.036511877 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.966876995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.97254392 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.966227643 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.960687865 seconds)
  done (took 29.760188059 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.206082842 seconds)
  done (took 9.086322695 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.975062915 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.949914568 seconds)
  done (took 15.864832682 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.95794968 seconds)
  done (took 8.838624977 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.262147198 seconds)
  done (took 9.146477236 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.976287752 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.966925368 seconds)
  done (took 15.843041183 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.952737545 seconds)
  done (took 8.833411148 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.119719074 seconds)
  done (took 10.113042181 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.980542178 seconds)
  done (took 8.925769774 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.033052872 seconds)
  done (took 8.914153466 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.87095117 seconds)
  done (took 9.753426884 seconds)
done (took 165.244065485 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.967974051 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.953793254 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.953038536 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.956607044 seconds)
  done (took 29.71272473 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.987191258 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.987671336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.987580739 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.997902028 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.98858633 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.986695722 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.979510524 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.977847425 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.999057478 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.989604838 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.98998465 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.989620229 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.986965942 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.98064133 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.991969328 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.989039144 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.999870541 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.988882396 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.981278007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.991365805 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.954902059 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.000670964 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.989212876 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.95589946 seconds)
  done (took 49.554264841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.144649715 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.026332178 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.108313796 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.010089509 seconds)
  done (took 10.172483259 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.006605143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.008159048 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.020828176 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.056424714 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.082745144 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.016480081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.979326217 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.976718742 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.962906265 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.009778487 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.083910155 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.002042008 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.097356169 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.95405839 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.154654548 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.955198592 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.955720104 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.005794171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.059036609 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.072193043 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.957394809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.006928262 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.011780887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.003415541 seconds)
  done (took 50.322753037 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.956368783 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.965607197 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.965162237 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.958201366 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.958831777 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.959396671 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.965609715 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.95944608 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.979545251 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.959695864 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.956615528 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.957649425 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.964986922 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.960792064 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.957287047 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.971132297 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.972996925 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.958460522 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.96352543 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.966357083 seconds)
  done (took 41.14147005 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.956725603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.803529902 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.303621804 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.210352946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.95425187 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.955865352 seconds)
  done (took 32.069133998 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.97040911 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.962144693 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.957401136 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.014668562 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.096922654 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.967499488 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.959187477 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.969105243 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.001333505 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.020327094 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.978063916 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.984337407 seconds)
  done (took 25.764762987 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.961107541 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.965773339 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.963429198 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.972980964 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.969525092 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.968145814 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.968116131 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.961622135 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.974774728 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.978304618 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.966021367 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.972665405 seconds)
  done (took 45.509444222 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038573677 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.835925332 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413745215 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421080124 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486171729 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163695343 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.959770722 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044785639 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.960682052 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230418783 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.278847063 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48804669 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20491838 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963085869 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.057231081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.440272736 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248382262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17931445 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994101899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634235774 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061767259 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411280066 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.68626629 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06649306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164293365 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.084696952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.229192415 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911806533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011975313 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970954364 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971263275 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.965912086 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235280579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085634596 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034402261 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970351863 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38592526 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.669670931 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.975495047 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.582795326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.440562338 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.074896971 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967476019 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9643009 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.893839338 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421566296 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170056381 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.968206785 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.664536547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.965556933 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970176694 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038909861 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.968280966 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.774411484 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646040836 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233323147 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.966371241 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967678069 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.518994789 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.948241811 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519296948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.002750543 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.050638875 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593472191 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407089468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.115719978 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.965046029 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967189411 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891885688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.587739351 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073313155 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103923335 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.983191273 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606418666 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260963348 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.380141582 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.009938653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239640626 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.718477591 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.00484651 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184177467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916857667 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89289939 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.794560905 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.894050727 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176391621 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000097663 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.567725052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001038945 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049569071 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97275717 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983361425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968483983 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181994886 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.861528861 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96767531 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.26247018 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214646216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984341884 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.053691761 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894789946 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.970429007 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214801479 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.170711552 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.16121091 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.543777055 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052038961 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855794362 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.090554534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843167014 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082155929 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.232477085 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026799145 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963105307 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078653783 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925369085 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216700222 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893844075 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.175336981 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.319472282 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194028827 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.298231197 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212655907 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030744961 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978518977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.970219816 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652056187 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.57042612 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.184215127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.981139863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407912515 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083981794 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.971333465 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904505424 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.857488782 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.308603459 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.042735846 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182825273 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.879380906 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351968202 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896408646 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.10623123 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.961675808 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.184526922 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.607507479 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.047300985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220476558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.169249591 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263639488 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085964795 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984292326 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063272769 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987170234 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.356276868 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323685951 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.971178643 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.973556105 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.633372301 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.013899269 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975768571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.974052627 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.498545584 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237412449 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988329952 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980710177 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.845480887 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.984123202 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033394307 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974942173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974484609 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.515625862 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481257587 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.97705146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.641915764 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188582288 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974827565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.620227055 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143503321 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984496922 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234193928 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03197041 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.898226018 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.672180017 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.672643055 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973162324 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.898719878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973115843 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975291747 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978004549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.162571984 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.241787849 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01875717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.576775686 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.066792271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979833074 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.975810705 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973608342 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.491183204 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961319605 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.524839055 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086980314 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102775019 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.984835522 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.89968157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.974699256 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97524078 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.973838512 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.92083754 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022355491 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.57556314 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167192853 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222552802 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.384521364 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981967831 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.582702365 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.083352008 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.989575243 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.242069443 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.540959114 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.080898177 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042703581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.978846637 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.591512751 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.699538454 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.528666451 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261020477 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281908789 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318723584 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.417251401 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298766923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058770153 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201727143 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496530601 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030553115 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06403417 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911144459 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9900164 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.611485044 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.395499897 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985883728 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191218708 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255770599 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.300754937 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09077018 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178747217 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004826992 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.839151553 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.008313107 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.511918172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991090776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.332790393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162216405 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059480386 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.234494728 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039806521 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.977734548 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315390999 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014751531 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.679259687 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.33241849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438077649 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.422162899 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181607436 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.985461718 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414591337 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324123419 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.218271723 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.102118343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903451967 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982057723 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982426502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.990238631 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.9508302 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.849402588 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.22133246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98293838 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206766008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.172213737 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340151993 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.875847567 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.980977252 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97810038 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219061892 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706625167 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139362855 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.365850576 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.561424808 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987652286 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.905356199 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904621778 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.67931128 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.98945745 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944048739 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182522082 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.078580694 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65660815 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414137925 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293259812 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221973837 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.992930586 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.241145217 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245986424 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46975296 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000394765 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.076190021 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.251635655 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.698739475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.192199633 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.208087369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509812196 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.197531665 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430600312 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.947014328 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.981114545 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185696959 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194059702 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.306207688 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135876363 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.690432655 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.984496901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333830508 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035602714 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.312842859 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143528893 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.067054518 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989438684 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055279002 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983911347 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.986355871 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985323138 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990945512 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.297664336 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.064986831 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.993969182 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056714785 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.968695938 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.54486477 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.990031099 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244577779 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319498971 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304149751 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036743317 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.982045344 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98353363 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907373271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110171908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419982087 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254411257 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.098137044 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.116596818 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00201631 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232547133 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277531897 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297072701 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254291763 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.864710014 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749036419 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106568576 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.199094155 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987500508 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.185836301 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193491952 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276290777 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547846789 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.197401112 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178706591 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255808808 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.353038299 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9823824 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56009073 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.994919944 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381353988 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.011616515 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.298743564 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205955728 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986000056 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104908648 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986909169 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.186520955 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.434866323 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633394157 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315833439 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.836211787 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988944495 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248092518 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296438716 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281111091 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059498754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988916228 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.675566604 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116102924 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.858867262 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198887977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.985216506 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188189285 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.694490205 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991074488 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249355637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281869964 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.986239134 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.898182282 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987992867 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.989141647 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198766399 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194312572 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226512358 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988050682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.992783041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.791070867 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252274363 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038464548 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911380199 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.986542108 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030839399 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213850749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003345647 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.499213647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.685423236 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262351998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.887052192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001809096 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438152661 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355833028 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301493307 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.508819001 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204848497 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.536388461 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.897448666 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363070339 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.98808594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446368431 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.371106007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.987954069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.546662385 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101659241 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.246614221 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310545917 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.004932336 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704960807 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.002813038 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201656158 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342429635 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917145143 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986301466 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.034736503 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.987742093 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.969291213 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997204612 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.914676892 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496565011 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.833109549 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546305009 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.991207718 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.998277989 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.281730476 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.552371906 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100456929 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005486368 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003087393 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.682991938 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.278441351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234358295 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.567641734 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.086476198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.993401172 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991137447 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909391331 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.176916926 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.179381066 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265831584 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.404289809 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.099211839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992543669 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.198040213 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194582276 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.309251 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088291365 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.183686513 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109909062 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.930987135 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.697482943 seconds)
  done (took 1713.30749558 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.00608634 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.023214492 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.032021696 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.11724333 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.037283266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022197062 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.082751998 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.057266329 seconds)
  done (took 58.297038983 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.992659866 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.281849254 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.997016658 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.993349056 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.019295539 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.994236568 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.147761324 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.004788287 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.999058465 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.000026735 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.9995424 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.993487672 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.289647488 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.015397806 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.994232729 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.586208326 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.999277791 seconds)
  done (took 77.288553317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.048493412 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.379521648 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.028653789 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.994914614 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.900994735 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.014749891 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.108709914 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.04802716 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.998684306 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.045625938 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.297082235 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.003244276 seconds)
  done (took 91.792741337 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.009299443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.998154208 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.99728879 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.997381098 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.999154124 seconds)
  done (took 11.93308714 seconds)
done (took 2238.83015875 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.223322558 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.053967194 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.096022211 seconds)
  done (took 6.070754299 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.144972361 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.186405536 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.302315258 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.308214129 seconds)
  done (took 10.87098955 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.307807837 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.378754837 seconds)
  done (took 6.607678955 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315916196 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.026043948 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.409697856 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.997999734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.002280793 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.000660795 seconds)
  done (took 22.927143575 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.995646915 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.996222377 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.997688855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.996154544 seconds)
  done (took 9.907198231 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.9942698 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.701539762 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.996422201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.01282138 seconds)
  done (took 21.626990776 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.149370209 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.112251801 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.139712471 seconds)
  done (took 8.322205658 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.139136872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.855358648 seconds)
  done (took 6.915851371 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.137304079 seconds)
  done (took 4.059877541 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.025316845 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.26723743 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.488301738 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.513856746 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.575809673 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.818473311 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.324311307 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.22604924 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.463946605 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.473118257 seconds)
  done (took 26.099294199 seconds)
done (took 139.307472284 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.353312407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.028261973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.202861317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.379333018 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.24090624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.20383698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.214975858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.375711462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.050095717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.037346917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.366538467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.239215339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.164899425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.019156762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.174787358 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.018140142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.232406826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.368008353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.043281447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.282742705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.240803513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.002333402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.199293658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.019458137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.236803778 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.155065438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.54791475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025411043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.180949484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.561090449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.160323173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.422784721 seconds)
  done (took 172.67268934 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.001216916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000086367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.000844406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.002078394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.52321997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.003050538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.002810761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.001453321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.448843623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.443569303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003541646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.510669655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00525667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.002205934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.007005997 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.999669738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.618486425 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.00237285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.002630168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.001574999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.002092739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.351258748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.002245298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.363264741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.60811865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.002315334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.997969344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.998708415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996633374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.994701992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.996993679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.994354412 seconds)
  done (took 213.817345584 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896955606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.996831862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.994240734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.995982846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.997350021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.997785897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.995350344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.995143182 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.779652763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.77025832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.996263431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.997087588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.995914967 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.995788396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.996418205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.994577968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.996124606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.939800775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.995962863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.997897697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.996099347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.576814683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.995763976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.607394296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.995400206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.999108697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.996922046 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.996290137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996131725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.997882082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.996139533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.996153265 seconds)
  done (took 224.397730588 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.238310638 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.99649687 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.99694176 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.916668958 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.996862765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.996237643 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.985251861 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.241559637 seconds)
  done (took 20.291353783 seconds)
done (took 633.113296756 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349843443 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.200318274 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.179420104 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.022339074 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.282611317 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.071361082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.016281932 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.084107731 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.856485639 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.097257658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.683761663 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.042403624 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.776913706 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.047794849 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.139225783 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.078638801 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.564561177 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.6680272 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.158780513 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.094774246 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.199288801 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.931826351 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.100682603 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.888359875 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.696752727 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.981812794 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.059616943 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.571795146 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.029700486 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.172848078 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.714312801 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.331086438 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.034322895 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.018285725 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.074781312 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.05035107 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250350465 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.030549946 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.143296094 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.722308721 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.103478298 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.770424823 seconds)
  done (took 108.214499227 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.008668499 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.004935008 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.007786547 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.010018075 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.012738783 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.003883126 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.004416292 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.004243993 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.005251548 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.005775265 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.004092656 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.014247529 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.004081454 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.012260307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.003802618 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.003927465 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.004832974 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.01482549 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.004690932 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.005128221 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.005638435 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.004990063 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.00085032 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.005532179 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.006067581 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.004565441 seconds)
  done (took 54.107171172 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.999971441 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.171250006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.24770997 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.021956084 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.001832234 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.006268045 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.020887172 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.006127927 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.005375235 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.00385039 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.090124051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.008706996 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.021807888 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.24840304 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.021063066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.001852761 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.001420228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.00315034 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.181551588 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.019082539 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.025240631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.007234978 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.02114238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.016367206 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.004574944 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.004345962 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.006251944 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.504706512 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.010326111 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.092484608 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.054192672 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.031130602 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.452203456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.25903014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.062734828 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.013797106 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.00251189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.095606021 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.009896595 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.003956255 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.020661796 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.009192208 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.248002024 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.526832671 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.018897863 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.002278863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.513090212 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.106498437 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.04885257 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015119615 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.251412917 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.022761828 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.004635015 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.005924383 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.040799671 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012078522 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.004962185 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.362353099 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.016991411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.023448617 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.008306778 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.006284642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.188403768 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.01846285 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.176236795 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.014488083 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.011461615 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.004740298 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.252431434 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.022554498 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.540989662 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.021212957 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.003696387 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.094180644 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.180558069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.544572264 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.018733195 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.190187415 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.4685534 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.030076328 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.012537142 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.495254089 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.033426174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.013011868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.006128712 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.00664272 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.00537527 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.049058416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.022765602 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.448733217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.536429112 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.385567373 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.032163153 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.022882597 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.007089246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.367184097 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.014066356 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.007018339 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.245175164 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.551402334 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.021426248 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.01292686 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.51757285 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.023996044 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.025440519 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.017713121 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.260512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.023154184 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.049095208 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.006497376 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.013729866 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.010296905 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.024976252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.013933679 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.006603339 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.510953187 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.114764845 seconds)
  done (took 248.655816385 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.007706364 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.007923701 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.005922845 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.008400478 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.005551488 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.007190068 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.006396656 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.005970459 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.007210113 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.005177592 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.005309323 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.009214397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.010600773 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.007061226 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.023047891 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.015419201 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.623251897 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.0150154 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.02625837 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.014873986 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.654063007 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.018515963 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.018235046 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.015854633 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.015279677 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.016207279 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.017136654 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.021025925 seconds)
  done (took 171.528022009 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.015539347 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12920477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.035336914 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.045417114 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.024410571 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.015929161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.117218522 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.035953575 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.023104975 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.017971381 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.01570505 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.077970202 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.028358485 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.115009084 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.048161289 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.123471417 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.123201799 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.025201407 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.016678515 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.01685883 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.047730787 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.025332877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.077935508 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.143378239 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.037551246 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.130090591 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.0384581 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.018089321 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.017741132 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130453604 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.03720861 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.078799566 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.047192985 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.036718807 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.135240126 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.136695452 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.123927003 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.123240404 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.024838641 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.018555396 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.017358871 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.019789424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.132600197 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.03879278 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.020577767 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.134523651 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.036714528 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.019195338 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.018914464 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.021339173 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.032108754 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.038047856 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.085051577 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.149212205 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.056048969 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.043343586 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.118004119 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.147138246 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.019030864 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.117030882 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.027792185 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.131333179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.040908433 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.020740411 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.020872178 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.022411656 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.048665291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.126897646 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.125425659 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.02848852 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.118057562 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.056455595 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.027772417 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.020718681 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.020579398 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.133448262 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.139087507 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.056605882 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.05876567 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.04983172 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.029536465 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.02052103 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.022191593 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.036803569 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.025107047 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.133249435 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.13813836 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.02753524 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.021147623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.021187607 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.022848454 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.046111838 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.143170675 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.060283046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.126994174 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.086682452 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.094970099 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.035530098 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.034293197 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.026185063 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.082548153 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.036333062 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.032641231 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.327219564 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.082041093 seconds)
  done (took 218.675230904 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.39393082 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.068652162 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.078142728 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.332196409 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.384179876 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.930429296 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.069631329 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.06854268 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.096537863 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.250368037 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.133080286 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.090716254 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.05589788 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.044180402 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.069062121 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.089543937 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.083114164 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.41204157 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.274969265 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.226912539 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.065077797 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.334820196 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.3903286 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.638845349 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.120785428 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.463371431 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656959697 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.201675893 seconds)
  done (took 65.976413325 seconds)
done (took 869.082591999 seconds)
SAVING RESULT...
DONE!
