cset: moving following pidspec: 5558
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.197745093 seconds)
loading group "string"... done (took 0.647903589 seconds)
loading group "linalg"... done (took 7.599853468 seconds)
loading group "parallel"... done (took 0.155137309 seconds)
loading group "find"... done (took 1.195483593 seconds)
loading group "tuple"... done (took 1.775500641 seconds)
loading group "dates"... done (took 1.248035806 seconds)
loading group "micro"... done (took 0.216939292 seconds)
loading group "io"... done (took 0.895158751 seconds)
loading group "scalar"... done (took 37.231341175 seconds)
loading group "sparse"... done (took 11.682250509 seconds)
loading group "broadcast"... done (took 0.938397396 seconds)
loading group "union"... done (took 12.145996706 seconds)
loading group "simd"... done (took 4.462289838 seconds)
loading group "random"... done (took 8.918288942 seconds)
loading group "problem"... done (took 1.816216244 seconds)
loading group "array"... done (took 20.630798284 seconds)
loading group "misc"... done (took 1.696274829 seconds)
loading group "sort"... done (took 3.263089975 seconds)
loading group "collection"... done (took 17.13752266 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.514215864 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124129072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132143732 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118563903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14659738 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117766338 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125060006 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086662627 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.826048762 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146427165 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115125592 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.395008875 seconds)
done (took 5.318717115 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17408609 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083833709 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084200214 seconds)
  done (took 1.317627068 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068118903 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126654266 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069492994 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070573914 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06942325 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069583252 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069234394 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06905329 seconds)
  done (took 1.694938893 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0752192 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071770613 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068799799 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073119669 seconds)
  done (took 1.439508424 seconds)
done (took 5.85403496 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.7430624 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209238901 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186539124 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.379419314 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12687118 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.171727908 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649542006 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324886146 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189526148 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077984363 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107676503 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336379246 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120514769 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636346156 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07676549 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091314638 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146389588 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416916675 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070117956 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084806884 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092404546 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130940843 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086736844 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078588458 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147831449 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070358122 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132334067 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083491667 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069008077 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213973485 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17530061 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648897225 seconds)
  done (took 10.259733004 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099836065 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099761364 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070698279 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127353565 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103059197 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072126803 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077188568 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070390185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091547384 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130725772 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093771287 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106808356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068352483 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070998295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085928204 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209630423 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082645416 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083292543 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072724918 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080513057 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109919134 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080414593 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081909793 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082082809 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131562895 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184917026 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101301381 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100494786 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068859123 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084052705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117612027 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130159057 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070318952 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068775938 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127640826 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09867096 seconds)
  done (took 4.731822929 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.952007914 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140485235 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089239554 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131519079 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067707621 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107561905 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068136081 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111897117 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20324618 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081607365 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.342208015 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572125111 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111380999 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112442673 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1044312 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070219701 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071190297 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070010706 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.434186183 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100146192 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108755336 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083490001 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075935219 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071905869 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068169924 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069817618 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066742435 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070802649 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11532208 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076625984 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066812473 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.303405482 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119205553 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070229783 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.896087549 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.162301221 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.203582639 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103483254 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165849602 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093310528 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13664906 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071594643 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068429495 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154910422 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067970813 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067823272 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072357453 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06886358 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086120673 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105257717 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119429809 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068287541 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068184404 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164670713 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067229874 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066838375 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080784134 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.104006796 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157425518 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069487262 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.258854089 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091503738 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072113387 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068171258 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176728376 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122629605 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070306295 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06980372 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071074266 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070985522 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375056876 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070980945 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.176585814 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072945262 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079042904 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072241529 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071937881 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075247221 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074407457 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090446804 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069080808 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076535612 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068333923 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069050669 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06935903 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084261104 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.475285515 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069349913 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070773871 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06890005 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091756913 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09821439 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068981456 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068876778 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101529738 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069978826 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068498914 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069857935 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086973805 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071894901 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114929434 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068828311 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.081909835 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099795348 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071076205 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100575212 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079961165 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070917354 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401936214 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071828418 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069910224 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068252453 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070321253 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068756391 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079581324 seconds)
  done (took 21.834652086 seconds)
done (took 38.927872007 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24331557 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074679497 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075005764 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075434787 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075747724 seconds)
  done (took 1.789717539 seconds)
done (took 3.024134135 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119239852 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098100678 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067319541 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096970756 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069995682 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100542428 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099711098 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078092884 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099491459 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066983511 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096423492 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067017204 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067732205 seconds)
  done (took 2.373268899 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08827065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086354623 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072200885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084769332 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066278388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084254219 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083558381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090680763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084093363 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075317711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066950337 seconds)
  done (took 2.109079113 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084619462 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08576044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071955063 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084432898 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065936521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084593689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083732043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087354707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084455407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076085564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066198602 seconds)
  done (took 2.096339504 seconds)
done (took 7.799022811 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079022994 seconds)
  done (took 1.289642024 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.520117413 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.618639197 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081928087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.105543228 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184102634 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112216128 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243889402 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086756696 seconds)
  done (took 8.334616657 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089839652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083143199 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071497269 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074130926 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072418635 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071370876 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070697283 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07318312 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073002966 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072202922 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073540139 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072815794 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075279642 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074681952 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070270511 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070463887 seconds)
  done (took 2.476004107 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09272885 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092144055 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07510876 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076762209 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074134959 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073374014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075232245 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075026653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072393303 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074059117 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076597831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075345361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073741784 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066340695 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075566961 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077588573 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072936524 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075440959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076137026 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077462847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077218126 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066407922 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073542947 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075595937 seconds)
  done (took 3.133695204 seconds)
done (took 16.45453889 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105474761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069953496 seconds)
  done (took 1.392508092 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081237688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0825763 seconds)
  done (took 1.389752557 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081847366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06771724 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089499416 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078645869 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068053232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067699701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087331678 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068612881 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067573726 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067955199 seconds)
  done (took 1.971186059 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069612115 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076954052 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071307564 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081010378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074592813 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066655927 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073814408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069403953 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077496159 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064827626 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073132972 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083781435 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072889055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085567979 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073239569 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070271137 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072309038 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069210003 seconds)
  done (took 2.555771365 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067178143 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068290406 seconds)
  done (took 1.367336969 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068561918 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066309651 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068894835 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068635527 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06553492 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065222461 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065519028 seconds)
  done (took 1.696102057 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357733627 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117732982 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300064435 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074548207 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083591484 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252497451 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068480992 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073624448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073229074 seconds)
  done (took 2.669678098 seconds)
done (took 14.277334029 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081352469 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087485616 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096716354 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367007691 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093656512 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068844341 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115569108 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176828326 seconds)
done (took 2.331970054 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207565198 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.63798099 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405648287 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20271209 seconds)
  done (took 2.484616168 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3274003 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089678361 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062587495 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069663639 seconds)
  done (took 1.794073136 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068891312 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071313435 seconds)
  done (took 1.384561924 seconds)
done (took 7.112877231 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06946614 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085153997 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068178683 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066491942 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068457111 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066333992 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066618684 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068992046 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068510622 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068348009 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068473357 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068297322 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068845821 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066174252 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066166118 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066542251 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068221405 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066379751 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179445009 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068892552 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06566901 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068596441 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066094153 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06577215 seconds)
  done (took 3.021867973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085036047 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06808055 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07277356 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073083373 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070787067 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07338898 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073273429 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06796456 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073107081 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070388132 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07127939 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071091338 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070399033 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071798916 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070765813 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071561799 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073214381 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067958891 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070991468 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070864653 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073088872 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068484173 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070813131 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073362904 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071350411 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070819219 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070356908 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067938687 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07284764 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070600633 seconds)
  done (took 3.40129048 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071825741 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065224735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065845414 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072146072 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065342499 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067481761 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06509162 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06606088 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066504401 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06617952 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066772493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066037563 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066222563 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066484016 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066344916 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069258385 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080362302 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066088241 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065244277 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066467336 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069548024 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068069285 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065959868 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066038693 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066226908 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065311754 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065875653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066066158 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066477924 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065710792 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06903938 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069457337 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065915555 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072563566 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0697362 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065748945 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069866354 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065473804 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066334309 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065510107 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065453603 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066006707 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065800668 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073221517 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065922982 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067115937 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066756139 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066848812 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066164975 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06777934 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065607547 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066449867 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067545619 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067466603 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070751035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066008066 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066864317 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065780198 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066423508 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065968589 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065424071 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065522001 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0686582 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066735911 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080932747 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07374007 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065764227 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067937667 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066720317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069606477 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067639047 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080437683 seconds)
  done (took 6.125483948 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088359137 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086481177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067742651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067827279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063757594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066265037 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071698962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066431109 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067933957 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08351548 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066603358 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067587984 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067421939 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06979541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06641755 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068567217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074072366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064465858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066296216 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070202439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066736468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071342329 seconds)
  done (took 2.814837128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147253738 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071816781 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105691843 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076839699 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072094118 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076635226 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072154851 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072511881 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071933264 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069704652 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069665604 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072461079 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071749777 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069333453 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069429955 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069569981 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071826601 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070443809 seconds)
  done (took 2.658426958 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078035563 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068286016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087972131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067785246 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067765969 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070368343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072100045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076454189 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070612685 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068104134 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075482849 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070138681 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070716218 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067835603 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070419941 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069213262 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070670532 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068588143 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074970272 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072357223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072011107 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075825503 seconds)
  done (took 2.843406439 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080659626 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06993088 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081636674 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069630142 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063887887 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066929002 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07228127 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068082694 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072146711 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069806585 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068328535 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066499836 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070340803 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067856564 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070311442 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067944562 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070312917 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067903876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070123171 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064466491 seconds)
  done (took 2.660070399 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086169478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070381728 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06967807 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076092064 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069276316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069750122 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076598094 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069900441 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070292237 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090075608 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069641737 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07024709 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07666852 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073607801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072010411 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076733559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076325389 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076409769 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069910815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069517957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090094232 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070082535 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07657793 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069881821 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069729032 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070551957 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069722277 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073634922 seconds)
  done (took 3.331794626 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06859372 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06806174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065946805 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065859887 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066087087 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065636226 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066037749 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065848762 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068643394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066654078 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068783247 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068419392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068738913 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068579276 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06874707 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068384779 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068142538 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066054989 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065872191 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066714097 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069392652 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06839444 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069183252 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066171237 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0663247 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068307461 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0661533 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065813652 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068456167 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066315469 seconds)
  done (took 3.287252133 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075887459 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074706037 seconds)
  done (took 1.417275846 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065031758 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081423041 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066072463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072666145 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071114675 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068985242 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076049726 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071361783 seconds)
  done (took 1.835429323 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082926081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077897916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068976357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077813433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077349398 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084418794 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134081031 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068954056 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074650137 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06767605 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081496283 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068844701 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074820332 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068985945 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074677159 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075205641 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06670725 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072923502 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069457995 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066969695 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069408508 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076296478 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0713617 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064573585 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070070264 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089945679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079283655 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06850281 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071369837 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076254356 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073771616 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062533928 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068335176 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068576373 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066037833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078208095 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082312725 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071524866 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076241764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068589115 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076001781 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063365924 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073427851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074599797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07815319 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068078402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068656594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063581453 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066881036 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070925772 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063765695 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068733475 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063684794 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075110833 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072208984 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078822173 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067631952 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070217797 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071323719 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071621296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074931581 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070340663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072672188 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068235549 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078953772 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073415916 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076099987 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063718671 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062964967 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066272793 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077609712 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091160112 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074857248 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068803324 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069835776 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066468755 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07198592 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069764923 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073901656 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075161174 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068235288 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072788057 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075609632 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069331605 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070977284 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075216136 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066565121 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069907227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067101434 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0835468 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0670025 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066238706 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066161656 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081351668 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071661578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067094112 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066282558 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074623157 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062584189 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067250864 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067384136 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068201061 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076753412 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071305272 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070712022 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075320292 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074652891 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068212456 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070021145 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.191950263 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069775059 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068887226 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076173278 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064160241 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072338249 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070301526 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068773741 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077644438 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066829992 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068301936 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076502763 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074126189 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067022195 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066181744 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071729817 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068106075 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070400523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076474137 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067263572 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063844486 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063699157 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072107992 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068323466 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072426535 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071895946 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071477823 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063844421 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066828055 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072701955 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077688709 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06974499 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069426221 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07456819 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070135157 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067447251 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074653127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071317867 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067654527 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073858822 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069507536 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063452834 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070424969 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071199156 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067047861 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073949439 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070978788 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070954592 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068636929 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067247716 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074036887 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069199348 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068087132 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069050521 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067454408 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079079474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070481585 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063791075 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066551282 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075173705 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067236356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06764372 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068375026 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0709011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069065416 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067017621 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068254414 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070980458 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076031948 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071599048 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068798404 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073872992 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080221598 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067710719 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070871167 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067857233 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068939564 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068442599 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07812292 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073992002 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071923069 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071146296 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066070769 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074292573 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076094335 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068505225 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066628876 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068515453 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07170993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074282047 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072748915 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06866183 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067190944 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069239897 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070185323 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070333054 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067094406 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06766772 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07260318 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066166804 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072598344 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068195563 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077450005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07082552 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062410103 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069163103 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06562917 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073791561 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062822259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066528791 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066888564 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067351765 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066644224 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.199672428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063887982 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076532645 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077365966 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070626055 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069099272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068474355 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076565734 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070879236 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072417943 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07247352 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074077169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078672826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068777635 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072779317 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078277674 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068136348 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063413787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076576587 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066917984 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067721459 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067584063 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06723656 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071549848 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074921062 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076283391 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062900823 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072107579 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067420337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067932465 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064463411 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073639268 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071442513 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06957597 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075472821 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068813918 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0683648 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071794973 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067518041 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068682652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068481095 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071419998 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068237962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070280196 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069551348 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071916379 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067690249 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066590454 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070945591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06814181 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069734944 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073739882 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067863452 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068673354 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070782933 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068676437 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069231616 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069691382 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067983378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072049943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07005103 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068978261 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071043351 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063885767 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075599187 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067972881 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075710921 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069047331 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066184917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074094702 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071978631 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072692126 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068747263 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068884818 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070438635 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068239595 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071402502 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076290821 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067329078 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079060898 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075397129 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069978302 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071939573 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069144851 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070976053 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06813109 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070051411 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069042333 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069360827 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068863401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072897101 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071157775 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069226694 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070853877 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069078514 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068282864 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068919003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062885623 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068113293 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06861368 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067922754 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077001854 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067970011 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069189311 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067318282 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068260371 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066776792 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064726901 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073378223 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073545876 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067073916 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073155514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06689146 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068879523 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07782876 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.194820472 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06845372 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066860544 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06784363 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076139753 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069152853 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078450636 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069249635 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068904358 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066227964 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068546126 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067127946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063818601 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066958919 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071683476 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068132477 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067457998 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068496582 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071049857 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068705124 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07707296 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067885698 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070306682 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068069702 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065724711 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068793072 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068000352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071583747 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068391282 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066725323 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066403635 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067943907 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070286547 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070584346 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06787189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069970046 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075632136 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068316736 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071232298 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070467613 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063345425 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071449339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068155197 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068243411 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068331883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072314202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071797564 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068503948 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077904537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067751763 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072483332 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06875881 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066640361 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067639997 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068464471 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068300848 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069036299 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069338087 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076730392 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066846866 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072038505 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068654999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069439652 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074800136 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068916093 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071792451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073605235 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069251598 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070406854 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076337421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071832564 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072000793 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06876298 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070544077 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074546176 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069132023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075848755 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06919135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068689497 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070540388 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067570482 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068826862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068208128 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067810735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075050552 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068908935 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068564414 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068328785 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067251181 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070488598 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071155206 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076384115 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071540666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07201756 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06406663 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065979649 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068468935 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06726692 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070196216 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071097145 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073623427 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07075429 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069539249 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067762234 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077179485 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073843549 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071547097 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066111601 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070912252 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067674546 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069995645 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06886737 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067455681 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067807665 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07105477 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069003216 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067205341 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.207900595 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073498695 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069784972 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070667289 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07034523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069538024 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065073092 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069050489 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070460939 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088904685 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070772675 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067979045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079854262 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067017749 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068851233 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070823001 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067599092 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073207597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063989036 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070965567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069075434 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068733029 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064303868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068378306 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067376575 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071159865 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068622853 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064434879 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078479744 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077435619 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07106639 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067548409 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067039386 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063698763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063408958 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067833868 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068905019 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070031879 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078190089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067770795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068336081 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06382161 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067859915 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071157699 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071307483 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065711082 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064264459 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068124949 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071577084 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073917744 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06754659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067767415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071928591 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070734873 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066852436 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070539766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0654009 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072177426 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080722346 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069376237 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069886614 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075194261 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075965453 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068312672 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064558852 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068723259 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072027689 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069267752 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069039051 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069490343 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083742972 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071268689 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068577077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067260192 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071004987 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068401314 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076825098 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069170067 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068665338 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075729263 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070578714 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075123405 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072451922 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075254648 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071642002 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072011147 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067594607 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069333991 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066939277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067895081 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069221866 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069114673 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072499083 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074765495 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068291076 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078166159 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076527166 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070133334 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065340505 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067711603 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068203992 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063537612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068144029 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066936791 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067134811 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066638488 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067660964 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069198944 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072096694 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069032825 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067914262 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066800775 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061886248 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0704636 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069431458 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.206843246 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06654292 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06961903 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069055654 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074021541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070860673 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067206239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070359706 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070430128 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070204471 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064588953 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075341971 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067554896 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071022415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067989095 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068502028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068816686 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072119505 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071968971 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069212767 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070596408 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072050879 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070390554 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06586315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066159275 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073930603 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066526234 seconds)
  done (took 43.937367884 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099749798 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064634258 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064069637 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063771528 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073761494 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065865687 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064097425 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06522255 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065806262 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067474605 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064118963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064523322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071379791 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078504515 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074160032 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068202949 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063787236 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065696754 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064175381 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065458582 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071432733 seconds)
  done (took 2.818777875 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074807336 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078189232 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076203713 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083064281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072395767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07147418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075754418 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072124051 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079349768 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073784339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07923057 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071886061 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073294271 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073423176 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073441938 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072251387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079290214 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072186826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072220398 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076138401 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071658444 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075885252 seconds)
  done (took 3.008311884 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068304686 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067325727 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069730888 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063432009 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067154124 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063357407 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069898055 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066667829 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070283009 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067220831 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067397774 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068005006 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069566202 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063599428 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068656546 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06614432 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105492895 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070285226 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068438307 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068550559 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063581394 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069731855 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063700991 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063646791 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067334338 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070873054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068883245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066094634 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067775928 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067555757 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067501986 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066520844 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06922197 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068012042 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067110165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067654155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067479571 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067910332 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064341859 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06651914 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068771117 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06625582 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067805037 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069787536 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066734092 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06599105 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070900382 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067723388 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063885367 seconds)
  done (took 4.702706398 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078803532 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10815079 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069048005 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089246446 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080139697 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073678059 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071743177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089853127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065137953 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066258278 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081791206 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07934498 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068141608 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072415747 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074692343 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067215346 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068598378 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066421877 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070184574 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066838539 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070397066 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074060424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080215867 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078699015 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071442709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066160284 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067006799 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070893642 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078164019 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071061828 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071780561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071977281 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08165653 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069267289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066713768 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069431034 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08206296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067470531 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06971427 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065320156 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069601487 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071553415 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074741044 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082051505 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067163442 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07209007 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066978608 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064677425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078355224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069580094 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07399501 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079527502 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071104501 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067521637 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071597665 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080941161 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067082365 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065802267 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070435949 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077990132 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065469787 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07093257 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079398294 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069377514 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073391697 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079809982 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072291878 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071120379 seconds)
  done (took 6.47286675 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076510673 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096432809 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082561517 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082165269 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076463599 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077109051 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077219306 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076652019 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076606798 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080739856 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076914614 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11476026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072847116 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079206476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086164875 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078057727 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076680902 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076900965 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076959453 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077348506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077184127 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083784376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076767676 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083212048 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080064314 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073470724 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076667443 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076721874 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083385261 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076608454 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079929852 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076692812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077037683 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083038459 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080177 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076538391 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06738601 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077463352 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077011307 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077634045 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073188541 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082909542 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076641607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072735224 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07702145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076830638 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083702255 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07994261 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078663809 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080618462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076725099 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083312347 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076349983 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076920675 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083237418 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086100841 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083354146 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082846907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077013801 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083105142 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083417233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085600652 seconds)
  done (took 6.329637743 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082242823 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073952397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082170019 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063751732 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066020321 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073238762 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066180573 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066599525 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075630561 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0778587 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076985466 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073406127 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076124416 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077041175 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07341235 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07603625 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073769512 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073459948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075063929 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07388615 seconds)
  done (took 2.868395446 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076297333 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084230078 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068909412 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072563584 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071074703 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072643411 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070720979 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071507247 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069149699 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071788169 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077327537 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077056893 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069200106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073268975 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077324677 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072781322 seconds)
  done (took 2.554022207 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083498235 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073899815 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080875955 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068217052 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068288373 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065078813 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068919876 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063568846 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065003739 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080316863 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068748353 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078575307 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067989769 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066736562 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06510149 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073461617 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064636295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065423764 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06804677 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079573597 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071504423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066656796 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071650042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068058287 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070219821 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071984873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067238855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068213108 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065447478 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068324352 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070667104 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071001475 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065265131 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066156736 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067052854 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065494334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067729987 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068500785 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072827984 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067993638 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066324594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07007962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06805677 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069035471 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064273453 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068259513 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064593613 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070601518 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065660122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070245225 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067741774 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070212518 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068416466 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074595144 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070539636 seconds)
  done (took 5.194488614 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080841928 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071009526 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063473659 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066002405 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070578226 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068737126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071383115 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068538566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069695379 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06654411 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069653391 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071180587 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069630718 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071842627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070047426 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071516401 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064013474 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069113121 seconds)
  done (took 2.645874759 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07326472 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067755066 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075275373 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068178981 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067520754 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070420802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064204697 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067236799 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066513759 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068517114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068260229 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070294003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066696355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070361106 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068729978 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068506882 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070441614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067105449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068136689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064651276 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07027312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067229042 seconds)
  done (took 2.893044817 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093464547 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083760213 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138409946 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079705718 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086202333 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073320643 seconds)
  done (took 1.94011613 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09229296 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101342497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068480241 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070646719 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076904961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072615999 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071706252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072035643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078929923 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07685414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072100166 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079722667 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07884443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078653633 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076816966 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076854366 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072336302 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07443674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06891786 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084379286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07220103 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079465123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072427666 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071781867 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072001489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078177598 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079262062 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077248977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071684573 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07944251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077205723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072277941 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079153663 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077477436 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071683339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079937215 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072235299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083771614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077146288 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078860177 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07144631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0770513 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079159636 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076054409 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079328401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072374118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076151595 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071851624 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0719596 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085951577 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077524585 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078237253 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077339318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079578333 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079020111 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085540539 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076871242 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078674284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077337285 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077201221 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078805528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077204825 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077903331 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077018338 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077142741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078322055 seconds)
  done (took 6.476289621 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103492604 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068976982 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072448711 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077228784 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078578985 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071944256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072904217 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072506539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071990535 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068907253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10827345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072343533 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078785628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078584849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072031567 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071953585 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072473845 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078305637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069511722 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08569901 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072512815 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078460329 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078706672 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078446803 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077770421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077515767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071998539 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07192867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071816436 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07174882 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075766884 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071970193 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078281162 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069006758 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07917582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072096887 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071902345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07609885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072154512 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077493413 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078642749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083747199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072345754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071822055 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077400943 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072151044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071939755 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069819873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072058472 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069299694 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077127929 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077101883 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077074528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078249993 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072269464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072005293 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072305274 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07295771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072253053 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077014569 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078376054 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071927335 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085585443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072213108 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072326013 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078467989 seconds)
  done (took 6.402038658 seconds)
done (took 132.886085283 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196458752 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173718896 seconds)
  done (took 1.751741348 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070641039 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098090603 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078119783 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130795158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069567249 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10243562 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101023864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079840629 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068732536 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068826711 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068687629 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070895782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133687619 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069072216 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068359619 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070944755 seconds)
  done (took 2.748984877 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09798235 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155919847 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101891903 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06723475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099199491 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073927622 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068357547 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076890184 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072427076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067770075 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074322898 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072189528 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067691067 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072159121 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075403278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074103664 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06793396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074309521 seconds)
  done (took 2.863218264 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097291728 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091723252 seconds)
  done (took 1.591827105 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150886716 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135372846 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200314455 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.32812863 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155261929 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145232673 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14200212 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140218193 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114135019 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136756838 seconds)
  done (took 3.046212642 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099259086 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147318876 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2658039 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115955947 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074706996 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093813356 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11766 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080948833 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081802643 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081933201 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080698044 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078338022 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099682644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075368192 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075944778 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078207214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102735326 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074999479 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07694553 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076813045 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101327135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068538691 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075170918 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074917583 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078300373 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078179741 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068726306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068926883 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077124818 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076533417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077403967 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0915057 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078794274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103265791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073061324 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104444187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078331478 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074801162 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076604368 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074720685 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07878904 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079127599 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075470946 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078125387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069400939 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077927445 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068860534 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068427856 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078794924 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069427122 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078348566 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078487955 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103349417 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069354863 seconds)
  done (took 6.074890937 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107654673 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107592837 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072743246 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113602488 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105478812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071363713 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105720349 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098640805 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108405283 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072482953 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070503646 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072026046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081299165 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082284242 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116615299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108906554 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074984501 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072199985 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108567003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108426913 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071204117 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102228856 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097986269 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107047348 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070506955 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071623611 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070644495 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071711221 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077910176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079129446 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070263817 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080250524 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084934473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079269266 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069506553 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070268538 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070806989 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079938105 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080415014 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08019949 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078105121 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069397092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070323502 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071801334 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071562829 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070280584 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07902348 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080915997 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079573306 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0704982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071687705 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070459059 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072483516 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079848901 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077560872 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080565743 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07973885 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070978681 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070755602 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072924318 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080768429 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080534757 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07932635 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071301067 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080536468 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070571016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081161005 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085022583 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070741286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071766842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070373398 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071043887 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074202204 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078593529 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078334154 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072406438 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070204903 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07047199 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079734705 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078972106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070419382 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077168225 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069183677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069692926 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071289221 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071299699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077059495 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079290306 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071417097 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069997385 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069429362 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069336579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068225553 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075565241 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077785598 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07865816 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076759261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070341072 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07741177 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211520844 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072472701 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080034808 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070806275 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072356071 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072433925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079259364 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078503032 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079673034 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070926582 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070882121 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079616856 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081219521 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070767699 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07841603 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080127971 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078581534 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069386926 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081129178 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071766268 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080201924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070490532 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08063081 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070599442 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079261449 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070345463 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06951503 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07017203 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078854876 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071965168 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070589035 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072398578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070074701 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078179197 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082991601 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071630981 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078417146 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078660071 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0712847 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078821211 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070850594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079309927 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070445545 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071366419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069494653 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081404931 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071697155 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071072746 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070290979 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080522859 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070577561 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080880846 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078345784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069928308 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082591215 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080750722 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078133534 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081108292 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071819426 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070646967 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071364124 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070262003 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077882094 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079552856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072102395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070328887 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07800007 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080377633 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070011639 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078660417 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078476811 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079572063 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070412678 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070941617 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081113422 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08114658 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078575895 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078316991 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079200306 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070609799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078053208 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07912154 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071301266 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083914223 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070600958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081967132 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078351383 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07660085 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077820635 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079836745 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079055908 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080153814 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082110219 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068877298 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069487779 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077253838 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06910593 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069196972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076456604 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070853951 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070448538 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.218127603 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071567182 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081133684 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070389067 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07992627 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070466883 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071878322 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08463004 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070794597 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07190164 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079260306 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071627715 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078823077 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081469704 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079321947 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071545171 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072766806 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079739873 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079550655 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073090461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070676302 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071815054 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078242603 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077466615 seconds)
  done (took 18.975572278 seconds)
done (took 38.465271278 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.190586468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143480471 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.155694523 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110819068 seconds)
  done (took 2.096257106 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110598347 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097406142 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089890529 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067209872 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.095890982 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068263033 seconds)
  done (took 1.97294979 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266466834 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184854112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169202309 seconds)
  done (took 2.064303367 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.190846801 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177372864 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42087439 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255600391 seconds)
  done (took 2.587353805 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.135756162 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086628781 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068786301 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084550155 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126213984 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153151413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096622675 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12051026 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079875698 seconds)
  done (took 2.440220187 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14044243 seconds)
done (took 12.743690662 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.249084199 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093288243 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.228019527 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070282254 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.228238226 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07732844 seconds)
    (7/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170527526 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110797493 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079899564 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077468827 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076785739 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075890419 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076385705 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072097477 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.163056937 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078750262 seconds)
    (17/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170912741 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076141742 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089655011 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.120520954 seconds)
    (21/309) benchmarking ("sort", Float32, false)...
    done (took 0.129940815 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101139919 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076114964 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.155618335 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075159495 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212391139 seconds)
    (27/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091160262 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065930672 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075110863 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079746734 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.201095269 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092006633 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18468859 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.14761303 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.152424108 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098917955 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.314401004 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076420144 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.213232655 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088108089 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067326872 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.16988107 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.153290894 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150126144 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087563583 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092721025 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175235166 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079827914 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.100760878 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092048062 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.14413416 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067314032 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07118977 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.126078609 seconds)
    (55/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.176074321 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.069346415 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068209681 seconds)
    (58/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074604614 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074762328 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199343479 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078802936 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06794431 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076891093 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180170831 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055014176 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15425338 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066075276 seconds)
    (68/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.157010099 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118949057 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137709448 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.175645916 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056076421 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.136950052 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05467157 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080945904 seconds)
    (76/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09845838 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053980289 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053612042 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077283747 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183478218 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071474929 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054149192 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.319047559 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076231311 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089630193 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151211832 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070932737 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067713615 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077164106 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067200908 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099028664 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098822459 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089725131 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 0.143970876 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077866525 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064688758 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055664777 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132457457 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076211001 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123261161 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076685649 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164364712 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107900439 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07841744 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099420387 seconds)
    (106/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091716038 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173898783 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066302465 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092026679 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076431017 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074024857 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105292574 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071329362 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05365489 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056456807 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093025981 seconds)
    (117/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075946447 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088468266 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162348747 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070545971 seconds)
    (121/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08234857 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068770964 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070067149 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055197732 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077825922 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068165721 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119485444 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090458786 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084499615 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.169676348 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069627724 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076045591 seconds)
    (133/309) benchmarking ("sort", Float64, false)...
    done (took 0.12895779 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074642285 seconds)
    (135/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065803612 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177086907 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159541773 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054832559 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054776516 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054046691 seconds)
    (141/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076403327 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153124734 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088353195 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077069455 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.140980195 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075918765 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068427314 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068553669 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09184664 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074573594 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073657489 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068273883 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.141492705 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089740371 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141541804 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083617143 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0545899 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069692091 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079267023 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147826545 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075593911 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134031086 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09055703 seconds)
    (164/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067278102 seconds)
    (165/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074670669 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054032927 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.078313692 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054139604 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069774474 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067581433 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076272427 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155405188 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066462578 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074676749 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067873757 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07983463 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119380905 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099368212 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069742269 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068925699 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141032821 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06729996 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078942682 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089658706 seconds)
    (185/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099698708 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088499666 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.333814525 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069945425 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056402127 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056602145 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077727643 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055001346 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077920913 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104308053 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.173863891 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054786251 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136114872 seconds)
    (198/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080336749 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068311958 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05508684 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074302221 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058110958 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074212498 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082003796 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079125912 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089059923 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054868197 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075182942 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074682679 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068191684 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177318466 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191132355 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054337375 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074669578 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074776468 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066676591 seconds)
    (217/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099342708 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068793528 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055804675 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07887708 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110437862 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074861807 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076425697 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078099868 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076685114 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137504683 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078495982 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093644849 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074180529 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070351899 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054571722 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054282525 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08413129 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098307952 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076293965 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069475381 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074981071 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055311751 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056036059 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056971849 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097028533 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130136443 seconds)
    (243/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054696251 seconds)
    (244/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064598076 seconds)
    (245/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072593986 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056906653 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069078495 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07070789 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190520072 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065695597 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.073741979 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073993284 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055540683 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169673143 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067925033 seconds)
    (256/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06666298 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066602086 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055569688 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069572334 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06777708 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054668488 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068482118 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054265741 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069434869 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069156618 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054994194 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068504948 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06896021 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091171325 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054669791 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055584701 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075923103 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074075263 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055807125 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078276688 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06655951 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09383968 seconds)
    (278/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188135041 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054496914 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075176872 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102509431 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069330626 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05455747 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094151836 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166034314 seconds)
    (286/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090042637 seconds)
    (287/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08020788 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070245868 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143221839 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068371653 seconds)
    (291/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054032682 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07449174 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066311645 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067932915 seconds)
    (295/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055009013 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087388591 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074708184 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173865488 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073334933 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068198218 seconds)
    (301/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090552514 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065165077 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069424617 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134137487 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.114919419 seconds)
    (306/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075087147 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.230505478 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094263907 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055326358 seconds)
  done (took 31.350494124 seconds)
done (took 32.802049281 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084094472 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093061291 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077084952 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09368731 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082066538 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076983384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074960958 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080017897 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081908564 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083630003 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080932523 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058025385 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07712701 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077167235 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077188453 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092633319 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081355759 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075795185 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076109533 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067366678 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075921019 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068562617 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070231733 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057844114 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080739995 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074630922 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076799042 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077942756 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068398771 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06854178 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072129524 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076408054 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067938698 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082143641 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075922244 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075764345 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077706419 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079010964 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070119627 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068658917 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077377038 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068920882 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075362006 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075954263 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075179471 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073763521 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075879948 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079238129 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092249894 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070213349 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077008446 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078916017 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079276079 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075643312 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072172874 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075594664 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073347394 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09238223 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077058692 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070067682 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076933622 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076345421 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073440324 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075783669 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075593194 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077388896 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078721495 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073789925 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077566848 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074201384 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067948176 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076067691 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072351894 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068130734 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078280329 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079978205 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066960416 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074262146 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076274254 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075841513 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06781044 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070586712 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069402721 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074386324 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070357302 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060146707 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071945395 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074895161 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06700956 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075692513 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074823125 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075665786 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069740562 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079582565 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067814823 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073559942 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068668456 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068159927 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069707945 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072365768 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067714455 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06997478 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078130746 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068981505 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073877991 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079762663 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067421526 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074825428 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066788113 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066801099 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080997785 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076888847 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068095722 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069412786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066565714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074744886 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066289804 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066673675 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066751359 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067260031 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073412256 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067317382 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069433163 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.215302455 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083131315 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068410392 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072401758 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070919879 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068320084 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074510194 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068505779 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068414235 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070243241 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064980696 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071424421 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068062857 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075682373 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070173232 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075756396 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069605462 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076259031 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073393012 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074653003 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073303846 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066494859 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062322398 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070126291 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069688038 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069661927 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068672621 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068909527 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067288939 seconds)
done (took 12.87242588 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069543554 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131241691 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094277883 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09454107 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085215047 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069512429 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07718785 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096913189 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070336186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098922909 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088199839 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086906002 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110343071 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067629391 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068618672 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072593509 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070765154 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081980584 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097372602 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087820738 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111768471 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068251581 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092294206 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089245302 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087754649 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102641035 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070656762 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073000977 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072471876 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091766081 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089189215 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07283313 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069339209 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097282908 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09265894 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083889258 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070415801 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084126308 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069617695 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068951739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070397317 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096762642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08103548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081249726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073120404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078485961 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070140854 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083434247 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089793133 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079917011 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085561398 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098991176 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071610964 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08436 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067765857 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086174727 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077998321 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071386403 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06959864 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076315583 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069414111 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072395211 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082385015 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081236334 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073364152 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08426389 seconds)
  done (took 6.946907755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085940335 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092877665 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.0843905 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084985306 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068733144 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068851304 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068969805 seconds)
  done (took 2.116540951 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069552825 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088493633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08975766 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088996567 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08344467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088653697 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080882836 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069712318 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089721541 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070721129 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088753001 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098613707 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072274803 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075989359 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090864766 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069470863 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091378693 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069396196 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072325982 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091031439 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071433284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09829571 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072861645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070400427 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082479059 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069753637 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112722753 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073137074 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07165823 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072901871 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067794499 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106166609 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082291873 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076787266 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06981122 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083657266 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083771034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067682388 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085451146 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077598546 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082315005 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069722916 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070591385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067774851 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073483935 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079104111 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07039783 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070004313 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072499634 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087730357 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070346713 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081816147 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071486283 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074517169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07092349 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075735941 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07902932 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070362805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087600098 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070837371 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085109616 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083658278 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082165163 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0841481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071338712 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081937754 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082884859 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072311388 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071587699 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073122195 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084329936 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068548292 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07144342 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080219044 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071674273 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090312299 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090228659 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071332439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082073069 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070104707 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069524254 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06953722 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090046488 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074154494 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069475161 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073990436 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072697243 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067996253 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068942227 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074247283 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068069932 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07145417 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072533774 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072745785 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073028351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083944594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07213881 seconds)
  done (took 9.091445796 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072971183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070778651 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071987448 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070875506 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070560786 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070496199 seconds)
  done (took 2.01416005 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090987053 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070749451 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080925018 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073062764 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101860369 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087187837 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087852782 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078841167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085414804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080737616 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087395359 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088965749 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092905088 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074974805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088276062 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074139158 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088438924 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077121959 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079963865 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075406503 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086130234 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074316121 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07467237 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082941776 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077136099 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073672723 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080341015 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079921345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079818705 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079146027 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074642348 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077244732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073450658 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079523799 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087943494 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073223116 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073143574 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079216447 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073648754 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077946507 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088510291 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074899678 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075551954 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079291788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078665152 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072689785 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078757603 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08077194 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087916066 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079008186 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080944345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073056836 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076910264 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078819883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073126567 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079644853 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07874436 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087762569 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074453064 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072974538 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070981499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077329325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078505131 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078207402 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078979892 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078771157 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072722273 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073850554 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074479996 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074094039 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07898932 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070914625 seconds)
  done (took 7.259341903 seconds)
done (took 28.977799028 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534465039 seconds)
  done (took 2.068461804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.593290314 seconds)
  done (took 2.161074708 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.543576892 seconds)
  done (took 8.110596594 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.361718885 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464287345 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695892826 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135443844 seconds)
  done (took 3.252903584 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708510284 seconds)
  done (took 2.282372922 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229818999 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220162301 seconds)
  done (took 2.032857915 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373542173 seconds)
  done (took 1.942513071 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.083271564 seconds)
  done (took 2.653134429 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230983575 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175451337 seconds)
  done (took 1.978532156 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45096253 seconds)
  done (took 2.021277513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.815397623 seconds)
  done (took 6.388757136 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219926948 seconds)
  done (took 1.832277278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234030801 seconds)
  done (took 1.80962319 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747298283 seconds)
  done (took 3.320760459 seconds)
done (took 43.431489522 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084637323 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086270881 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086427806 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082636438 seconds)
  done (took 1.891684783 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078190627 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075103177 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077986401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07479949 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077805376 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074657897 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076210064 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077126668 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074238156 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075274559 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075032838 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074613993 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076775844 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076303493 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073432193 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07681259 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077627435 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074567946 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077868564 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074955158 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072687795 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077212716 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077952705 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073769632 seconds)
  done (took 3.395640521 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080118386 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075215368 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076629455 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073715079 seconds)
  done (took 1.887728041 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079404992 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090129054 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089250708 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079850139 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091152019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086845641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071287712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071746818 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072709339 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079876302 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070218815 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095084264 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088735042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080041125 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08211719 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068867765 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070054082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088946336 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081019298 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080774392 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072793639 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079780802 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070980133 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089998429 seconds)
  done (took 3.509642456 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086285605 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100542253 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081022643 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090492226 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092299361 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068456701 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087465276 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09290685 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124244966 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067683877 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075580845 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06829637 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076006444 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067864165 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081968597 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108205448 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111138313 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071737214 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098894942 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068633058 seconds)
  done (took 3.31205674 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074083525 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071096435 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072909134 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067933046 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078784693 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074298671 seconds)
  done (took 2.036654449 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070151964 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072261662 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069818431 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069172958 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073209422 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069326082 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068487811 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069516468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069889779 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069147499 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069984557 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068296981 seconds)
  done (took 2.430155143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182718307 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070927059 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070730029 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068193923 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073329395 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068538645 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083049887 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070509946 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092684726 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068674967 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069206803 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070843771 seconds)
  done (took 2.582538769 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190782492 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07736965 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220764958 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147688982 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107222826 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110714367 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110208859 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109645749 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134444218 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097673785 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15743711 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158436368 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105294082 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13281828 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089209704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099545326 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146857455 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15808688 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105098346 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157869727 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138917945 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123324082 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141146799 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099981882 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104633619 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117328223 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073181878 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081492965 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161286816 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127713885 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138528377 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109978406 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0958528 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167618297 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160302424 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134244225 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143385889 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085639132 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10232575 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128881699 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185983883 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087810311 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298869657 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109228594 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081980225 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129116627 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114613429 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116344323 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102233302 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090340606 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139471008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172249744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129350365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086710305 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120305337 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109528206 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108908948 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109909541 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167798706 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151916935 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124367201 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073863008 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109336471 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144705403 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128423742 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10550302 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119873291 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090931636 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128241763 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147990324 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119106634 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137605381 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113243249 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088997499 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117798634 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135498273 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12304395 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153297298 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121181539 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07458137 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118743356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09901695 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081736392 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142553484 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07622444 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16624981 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098837038 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105055976 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119993571 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105428154 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105562183 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147084074 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284239175 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103837749 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069044058 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103870224 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116136099 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137887708 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087961724 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104728725 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11338405 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078423216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129504256 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077906545 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119733786 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078617925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119486741 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125023457 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078617755 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119242341 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101801382 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099554333 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126736905 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150746511 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088893081 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081867384 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158464177 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118787402 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101812552 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13739683 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149130045 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099941859 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098341704 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141712713 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162999818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089455026 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155786228 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10367748 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083876502 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086779594 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119673078 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108543017 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121383455 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08242338 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115688216 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156820713 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07561957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094847709 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129144877 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079681445 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081387567 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103359977 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102223728 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09537577 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097385928 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099752291 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129292231 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270725657 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104104456 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121132499 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097797416 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157207797 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088546179 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100996209 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10233477 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071962337 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129884352 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147453617 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080718821 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152145201 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117802362 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112813995 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115921655 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084302921 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132830229 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079628236 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072344494 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136372143 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108024428 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106985628 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143674189 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113449203 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119519888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115295385 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126992537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126351485 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125513031 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105495378 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08854432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110190095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123597994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075467645 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09041313 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080933903 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103812635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094909495 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084627561 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135814723 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119866143 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111290737 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109937655 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095831312 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139294988 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077346269 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122494767 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115472605 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095029879 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144133003 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143929495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126480096 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096717116 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12834596 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070796492 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074061183 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08486935 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115209814 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082145852 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082226911 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108673737 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136681945 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120278733 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125113431 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113558963 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108464215 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1400273 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069554815 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114390491 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128859996 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111271292 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.09726373 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086695668 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093469732 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128286691 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097960182 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155890237 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105390823 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113203912 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138550093 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096672256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076705688 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095174427 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118955689 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095560064 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127030589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092489092 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084419297 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099769267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073811078 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090429335 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115028049 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106901465 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121252063 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.105983953 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120405531 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076210763 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104043207 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114806424 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109991389 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063770302 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107940095 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140944461 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089890108 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106791654 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402713379 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08243169 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134835888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166299795 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139068222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086971212 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106373466 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118531326 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124685412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117036808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133669666 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104555816 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133190438 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108807565 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087261168 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089510935 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096549156 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103325127 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094735344 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103197569 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111630979 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098013903 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127164496 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103731571 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108346772 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115824155 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100070661 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09276241 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097269775 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166865373 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116294205 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161112902 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099713319 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137061467 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154587113 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076860727 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081750573 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079913957 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133338037 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085879824 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126786323 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109473472 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114151355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120218739 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134282872 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094952548 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070171776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106313587 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128577491 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11990838 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097683532 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100147083 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152615699 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097342738 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232676581 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109313731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113861818 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101472224 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160040088 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064356179 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104296056 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078513478 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080886598 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123506753 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142355489 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08065384 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100029629 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115962846 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109644112 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121347821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097498133 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109531972 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1212389 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141970184 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123460235 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090214024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10904335 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123536822 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148451358 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101381445 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097700288 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163355518 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144693269 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151224807 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086691247 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111693653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11164401 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109728452 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134213647 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084575754 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154736721 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083098432 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132047747 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101674185 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088845703 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124735769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109573065 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087809113 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138942337 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113560359 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083053454 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078297516 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113067735 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115504027 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102532418 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076735843 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285457064 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075884796 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128397394 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152198668 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081446023 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10311919 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094623423 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080798089 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103255041 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10056421 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086864028 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099297573 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161003083 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085810592 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141372579 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128302023 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109451326 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129808547 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101551952 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639066792 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078812492 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144997153 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112678155 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162694696 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099690247 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115272747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107954758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117616743 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137858546 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100916585 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17772602 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127239055 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113016965 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08024116 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101333653 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10288902 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087070095 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105787728 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111308255 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113161258 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09274065 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114257313 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121063134 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083272277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096257797 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147604823 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111648035 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137427253 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132679142 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084632479 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114074277 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283912648 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081658703 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114941714 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142056302 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103677291 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09841842 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081421019 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097906026 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150166421 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074791787 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149753771 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117399474 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106848242 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110202295 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107987138 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12791404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103375327 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119181965 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091650497 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105582684 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11121826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082071338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07848136 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103456951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108340493 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097587322 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096169827 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099589616 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144342493 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074820426 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098298917 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112750729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137946121 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163338248 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087582001 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083712839 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116917267 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112852809 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110222281 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118470592 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080208042 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083016493 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081156587 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082002979 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105956457 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111433533 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112009622 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10850365 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153707475 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083767756 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222296011 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09475989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102560343 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071510084 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078563459 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095922449 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249066483 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103986679 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11151454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151553682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094976694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09000825 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090426969 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076397756 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083945541 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12231759 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106220206 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114866744 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099796898 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065157906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105021163 seconds)
  done (took 57.32870236 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109463406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084666546 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098907316 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145273575 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12248076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199931812 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158011848 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190114157 seconds)
  done (took 2.86083228 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072637051 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096195711 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104761549 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085328104 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070039896 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071177573 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22058118 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083570373 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069906809 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095316045 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081454122 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072443869 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41202292 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069082067 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070925495 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066141082 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070760651 seconds)
  done (took 3.540262767 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384279311 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625802404 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.335311626 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079742902 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.009964473 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092643983 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.21626914 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136780294 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081089048 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546741798 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410686265 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13204998 seconds)
  done (took 18.787088902 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085077419 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077885381 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091193727 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091070544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081028077 seconds)
  done (took 2.163038834 seconds)
done (took 107.326842962 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085190974 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.587857508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057587761 seconds)
  done (took 2.407138354 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088693479 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086962393 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087497621 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08537579 seconds)
  done (took 2.087975138 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077346636 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078617885 seconds)
  done (took 1.892219563 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223592597 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168178322 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098101425 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084615677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081514564 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081831356 seconds)
  done (took 1.992913769 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074715941 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077096755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074685854 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078582328 seconds)
  done (took 2.044507551 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080087195 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05575734 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058448914 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060529792 seconds)
  done (took 1.995829048 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088201228 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083878652 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081514892 seconds)
  done (took 1.99526457 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100317588 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089152335 seconds)
  done (took 1.930230638 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084035828 seconds)
  done (took 1.8270522 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09445941 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099631692 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127378941 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110126239 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13592768 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107013988 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085404555 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086755978 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078486825 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087211993 seconds)
  done (took 2.754821272 seconds)
done (took 23.238263228 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080425543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365518368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362146479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091265357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671738231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359048428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970164455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09474013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140240866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070820164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087060343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650867604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961163347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324949462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949119735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325548525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655335761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072072015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070840777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071401327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958190898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070921488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07117253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071751901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653253682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374389092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071598191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324366008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071388067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073050242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358299581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071890551 seconds)
  done (took 16.261872966 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090399366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119969625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075383148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086502372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07361772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073570433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073994456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071929774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121650288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070762749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087902051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070655029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074467123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071662235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090021689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071166852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072280365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072043898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071590791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07104451 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090092245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071399019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071736473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072262924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071265708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082939102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07256398 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071937992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071912429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073350891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075182227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072409954 seconds)
  done (took 4.262564742 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118793256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12475412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075928685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10580709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11288505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072872032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14281052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095767034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129324414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071447827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088160105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071354631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103445626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071906114 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090953798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072422784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072661373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071796181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071733012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071888048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091163605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071748722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071807566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072101211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072382607 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084239263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072084498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072367534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071873172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073557156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075921185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072366659 seconds)
  done (took 4.494127236 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075768668 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077912067 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085621491 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086499348 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072175828 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074248067 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075603063 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072629656 seconds)
  done (took 2.379129188 seconds)
done (took 29.145282885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08083182 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072226036 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075129289 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090499712 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075742134 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080513627 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069379805 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077744062 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075297886 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076364841 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077258833 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070601985 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074890931 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070094592 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07674154 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070953816 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081432267 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075214246 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081747387 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081687662 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073421613 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075754021 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078062337 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081591293 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081697849 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081222786 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080032482 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076129803 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071547742 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0739159 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07986926 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086029069 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071333752 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081800225 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071146429 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07105367 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074858506 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071099853 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082469095 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079082228 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072617629 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079689288 seconds)
  done (took 4.955253284 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089369106 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093297511 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086709801 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064152978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068781053 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068180155 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089990043 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062961468 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062794661 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089587527 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059470604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062303167 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06603981 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057776936 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063034598 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060963979 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06502108 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059037687 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063285715 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062386781 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090510773 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057309214 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0801211 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065865219 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059739097 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065122773 seconds)
  done (took 3.584709921 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076481729 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085936198 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091613766 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143830172 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113145867 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080049904 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081681555 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094604827 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096323137 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070437919 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073560349 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095179321 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089509773 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07699555 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07113985 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086755781 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087259779 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072072208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075740716 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093200422 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08780763 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087491726 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093664071 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083708246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06985799 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072850927 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074889682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083522554 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073145796 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078635659 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073335034 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073443272 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072098768 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081799521 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073118654 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072301825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095602792 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082087966 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080728164 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070816844 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078251402 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07145856 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093540007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125001802 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070040269 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075805478 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074339691 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080158036 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070267942 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09553173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081583435 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070000487 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07320394 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069741653 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06985407 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072965183 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071732025 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072161068 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078365524 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07585455 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093732367 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075747918 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086355013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070437012 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078060926 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069748041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071275414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069905953 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095170112 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072137685 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110092308 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07120404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071720316 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078922214 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078096971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076305986 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070196031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086122728 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080380662 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075139182 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07887476 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073927565 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072941078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098062111 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072936011 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072402499 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07150825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07538633 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072869964 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071520166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082728097 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06998163 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072858979 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086340546 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069862137 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07234982 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075575022 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074432585 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069952032 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080882852 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074273302 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071491439 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078967689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0703781 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073263255 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081258897 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076567095 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068900285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073891068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075329946 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07096605 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071638866 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072516259 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071955771 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0782713 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076508685 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074344575 seconds)
  done (took 11.036426011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161728347 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151010656 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07405636 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143667804 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07909186 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.0812742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145753915 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094627457 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0712009 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072233412 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071685041 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109748245 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105469376 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116564571 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08117623 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070890343 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092587375 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113521452 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14661538 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142385344 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093123383 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078838155 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073318055 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07223934 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073700247 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080544018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087552138 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07960291 seconds)
  done (took 4.575771963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082368002 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103043208 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076952282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092176292 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091610737 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070781711 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072658713 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072526967 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086504754 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080343941 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071052533 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07553027 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07711411 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07351939 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071635615 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077903442 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077558386 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072130839 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074118425 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075487302 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08157431 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093773729 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074260533 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070234754 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075545222 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070108339 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066180101 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086131536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071364105 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094024897 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068383416 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074968883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084173484 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072650636 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070695836 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071294563 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071370696 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070705304 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07297025 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07254238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069232529 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060548798 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069938969 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080688369 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083344297 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059718084 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075174355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075651162 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075737929 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068289945 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073993368 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074111486 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073348879 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077353639 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074855318 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075467494 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071892639 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076162021 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078642942 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070682463 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068113828 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069408947 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075578343 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067910735 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085396491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075367582 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069519116 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070502681 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072238535 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083824961 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070604827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075247504 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068831837 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072887455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075146101 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072325368 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072035455 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069421705 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070887534 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071397975 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058893178 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071068863 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056896985 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073268919 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06898544 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069392624 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07075576 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075153543 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081422544 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072259274 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076067064 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071808984 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06968769 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073169896 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063311987 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072940615 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080621192 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084381505 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070732185 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068706943 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082963025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075788843 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070471967 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059801713 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074461861 seconds)
  done (took 9.597747801 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093714289 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072583369 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083954539 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090284916 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088627271 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077254993 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080278556 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071527743 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086057351 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07653027 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07946112 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070878651 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08067857 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080431808 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072820087 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081330405 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075036207 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08589361 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084812146 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071533256 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079682556 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08259439 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092301565 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082981146 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081954861 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083434953 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09231434 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080283106 seconds)
  done (took 4.092711797 seconds)
done (took 39.594047322 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.857947481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.014743611 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.838664631 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.160399552 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.155987758 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.856062487 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.920884537 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.832085361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.054892095 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.86641009 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.189382723 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.923507282 seconds)
done (took 66.567290018 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.872649025 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.981077087 seconds)
    (2/2) benchmarking "String"...
    done (took 2.08478647 seconds)
  done (took 5.831138631 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.085437408 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.484017075 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.078419388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.834104924 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.84135822 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.136229996 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.633300783 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.348376017 seconds)
  done (took 31.120808877 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.974547181 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.06071345 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.525026864 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.552385151 seconds)
  done (took 15.927762926 seconds)
done (took 64.801730533 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.862292463 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.838603825 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.859331497 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.818994345 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.895598717 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.849062601 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.357839937 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.937414359 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.836758859 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.82250801 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.836891521 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.261857795 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.849852047 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.266617049 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.835782723 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.846230804 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.867181356 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.292686445 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.992365486 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.852391282 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.858166054 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.883779588 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.836300242 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.84390321 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.83451432 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.833555037 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.234516773 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.836258912 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.457762323 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.838384315 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.863668774 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.838036055 seconds)
  done (took 205.902008442 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.834709695 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905810743 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.972597093 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.854166569 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.324803311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.034175942 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.948007213 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.359246366 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.839461793 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.858261373 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.165931367 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.834794482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.173563397 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.831435948 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.864266155 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.894485343 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.089611294 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.139112756 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.869089853 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.00473123 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.846995896 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.052433599 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.990779332 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.100172418 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.858377648 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.887978096 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.84922147 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.019826109 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.043045177 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.057000325 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.849358106 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.865993153 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.058582095 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.71536802 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.850349571 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.857146699 seconds)
  done (took 173.468531645 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.042227423 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.838235085 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.836533386 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.83593018 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.850235332 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.837613685 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.962740333 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.83613018 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.474373776 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.964493582 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.132542908 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.890866145 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.840314783 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63341534 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.837146511 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.904982203 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.850803765 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.839011223 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.855183657 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.864725613 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.839135211 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.841035359 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.964390659 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.84906444 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.837845202 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.845815942 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.838394252 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843733891 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.21268268 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.837716552 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.839002474 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.938157593 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.837631847 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844928082 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.096482751 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.839939804 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.838586037 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.696986299 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.498631167 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.921140106 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.8393135 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844544102 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.838862192 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.057313086 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.837212486 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.838587795 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.840957678 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.839752181 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.841808716 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97915522 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.840011419 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.962397558 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.8406075 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.327685868 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.839035222 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.83867094 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.840388461 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.632315845 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.453775798 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.843216101 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.843643804 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.839138981 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.83993057 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.845761413 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.511058485 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.913231267 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.843463238 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.843166564 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845463583 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.84088937 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844286095 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.839275257 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.300603485 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.897191082 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.959196602 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.963445989 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.840419628 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.908728275 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.934891441 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.842294557 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.840411308 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.841824045 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.839918968 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.922452003 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.841963478 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.967838611 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.850209173 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.84388813 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.892476869 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.912504741 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.842112134 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.702773527 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.842930029 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.84191206 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.113842503 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.908007001 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.841487429 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.842076805 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.973433887 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965360922 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.556175913 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.843977606 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.507793945 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.989371193 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.843636908 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.99867386 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.845898763 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.925075594 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.848045214 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.845600113 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.876177735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.845313001 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.902647356 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.844165543 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.219264689 seconds)
  done (took 409.325730438 seconds)
done (took 792.558723102 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.454699688 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.427170313 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.526242432 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.44167971 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.420410695 seconds)
  done (took 14.04190424 seconds)
done (took 15.815283128 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.931732541 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.939659055 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869215862 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.936309021 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.866755237 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935786719 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919745459 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.870767452 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90283389 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.869853549 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905941841 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.872845926 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856115033 seconds)
  done (took 26.450418104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.074679124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.0776215 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.915262539 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.081996921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.890213993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.085107415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.008028534 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.99826312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.997000636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.863829542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856729115 seconds)
  done (took 23.624634258 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.077696782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.082591774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.922189078 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.081355654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.894221808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.080090588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.011223433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.005601952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.000250892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.862207735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856321331 seconds)
  done (took 23.64771191 seconds)
done (took 75.49799168 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.854201823 seconds)
  done (took 3.628486659 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.881400199 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.048408186 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.860676705 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.858100706 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.853903983 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.853992892 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.856890173 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.855591385 seconds)
  done (took 16.845413835 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.850716913 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.852515016 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.849833947 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.852627008 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.850062355 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.850728241 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.851279932 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.852746488 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.853736837 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.85160919 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.852815308 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.85309924 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.854763221 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.854586814 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.850563085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.851263028 seconds)
  done (took 31.410301053 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.853803001 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.851501388 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.849686776 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.851432605 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.852589774 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.85323739 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.853645906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.851341932 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.852219614 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.850863161 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.85219897 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.851703622 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.852156338 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.851676812 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.852746795 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.851493721 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.851274117 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.852549568 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.85724023 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.851535128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.853019432 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.852876621 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.849931854 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.854474256 seconds)
  done (took 46.235408508 seconds)
done (took 99.895397642 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.557066122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.463385887 seconds)
  done (took 9.797625869 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.863777178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.859083134 seconds)
  done (took 5.562629028 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.858052284 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.85938211 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.858160979 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.859520655 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.858090623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.858741371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.858595903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.858264924 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.857679301 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.858423006 seconds)
  done (took 20.366563488 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.857849779 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.859853436 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.855542775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.85793071 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.858923347 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.856873899 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.859026044 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.858939137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.858484432 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.856038816 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.859535408 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.856225658 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.859970416 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.857995101 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.860725898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.857194089 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.858446455 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.857546596 seconds)
  done (took 35.228213501 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.860955233 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.861102697 seconds)
  done (took 5.505640094 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.858493838 seconds)
    (2/7) benchmarking "second"...
    done (took 1.857565379 seconds)
    (3/7) benchmarking "month"...
    done (took 1.857123693 seconds)
    (4/7) benchmarking "year"...
    done (took 1.858730528 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.857057542 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.859165453 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.858723335 seconds)
  done (took 14.788980364 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.861966098 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.005413123 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.072134697 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.498284849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.864433469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.864384251 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.800622569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.86715608 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.866888423 seconds)
  done (took 20.484433025 seconds)
done (took 113.513546826 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.719163671 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.856882435 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.095963859 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.904281607 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.912593594 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.198258409 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.908495939 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.174360355 seconds)
done (took 43.553638949 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.896530453 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.609414308 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.640472878 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.971673004 seconds)
  done (took 16.006198401 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.842155685 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.383133189 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.897580249 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.437249619 seconds)
  done (took 20.348826621 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.224371508 seconds)
    (2/2) benchmarking "read"...
    done (took 2.199734538 seconds)
  done (took 6.213273607 seconds)
done (took 51.251789059 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862874736 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.857864529 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.861501597 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.861446551 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.86314353 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.860435947 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.859834062 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.862750026 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.860986408 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.861551613 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.862886148 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.862183492 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862944868 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861301647 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860613814 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.860828045 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863022156 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.860429523 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859587348 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.863563033 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861120095 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863130091 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.859636571 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.860603998 seconds)
  done (took 46.459036454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.863854413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.862484763 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.863790953 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.86334016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.862403967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.866467084 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.864626174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.862818676 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.863648408 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.864944865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860897736 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.862586211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.864943607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.862009535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865974004 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.864474753 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.864846452 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862593052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864290781 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.863881003 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.865001585 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862050669 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.861922434 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864834474 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.863818726 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.862299532 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.865854855 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.863596347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865826785 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.861849673 seconds)
  done (took 57.699886675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.869066943 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.874791724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.866184045 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.865209581 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.867768104 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.864739175 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.86550998 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.865988811 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.866808402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.86460594 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.86601206 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.866485177 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.866222787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.867375698 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.86532604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.866889596 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.865597565 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.866458462 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.867071175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.867257112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.866917335 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.868018493 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.86670823 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.866344698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.867331902 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.86715971 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.867655916 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.866788796 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.86676816 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.866284415 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.867063366 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.867276978 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.86747496 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.866474603 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.86611509 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.867064308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.871544448 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.875713589 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.867467 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.869823382 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.867961358 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.866071844 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.868513874 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.868729432 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.866839412 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.867525205 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.867778341 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.869733324 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.870525309 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.867097546 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.868532491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.867933838 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.867643667 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.868852334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.868533163 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.868666871 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.869759811 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.868052509 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.869503578 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.869801214 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.869827813 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.867889073 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.869333751 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.869065143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.869856097 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.868627634 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.870445634 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.869127379 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.868709972 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.869105259 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.868991699 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.869606508 seconds)
  done (took 136.279239108 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.869567409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.867373884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.866646765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.866940185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.868063721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.869021806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.867204988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871425528 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867344976 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.871134073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871476537 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869079812 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868040231 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87114751 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.870054806 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.868186656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871500385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.868353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.870321491 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.870269496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873083814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.867346577 seconds)
  done (took 42.916928957 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868759661 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.869586445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.867968062 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8698718 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.869031939 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.871031552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.872215645 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.870717579 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870089911 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.867523884 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86834318 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872257473 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.868387888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86777672 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86842152 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.86900863 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871040722 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867683997 seconds)
  done (took 35.443953795 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.869480055 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.869062689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.872579384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.869664593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.870643262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.870905563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871090157 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.872418157 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.871922382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.869991971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.87159301 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872675093 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.874055633 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870321683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872913096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.87093781 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.872069378 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869791521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873373591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871219623 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.870582833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873328465 seconds)
  done (took 42.965883924 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.873484502 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.873434058 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.869046821 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870855033 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.869362643 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.872193607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.872701042 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.871088173 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.873185856 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.873764587 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869740994 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.873063461 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.870701511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.872202595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.871849975 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870502728 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.873912547 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.87141186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871786254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.87123948 seconds)
  done (took 39.23228476 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877357504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875479319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.87570283 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.876057254 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875545468 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.874458963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877458774 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.877115938 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876977858 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877491252 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.876831865 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.877811899 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878558757 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878093206 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87847555 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.879196168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.878260056 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876705221 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87959147 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879277999 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.878652193 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878437044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878513684 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878222751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.878155349 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.878842927 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878515675 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.878964654 seconds)
  done (took 54.371979095 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.877977224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87656379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.87270045 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.87440727 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.875160783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.874561908 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.875796477 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.87521669 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.877924792 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.874289243 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.87752185 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.877125144 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.878439726 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.878352079 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.877147869 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.876695914 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876263219 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.874828464 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.876911867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875306875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.878145382 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877778925 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.877834266 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.876842288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874468791 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.879438152 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.876097016 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877386004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.878882736 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.876644863 seconds)
  done (took 58.096749864 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.896538001 seconds)
    (2/2) benchmarking "in"...
    done (took 1.896373274 seconds)
  done (took 5.594965695 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.875613324 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880002794 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.878025035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.876699148 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.876067542 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.877615545 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.879116488 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876304013 seconds)
  done (took 16.820357925 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.877161431 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.879684304 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.878894584 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.878838224 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.880264389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.878942829 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.88671995 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.878505025 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.882023359 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.880876424 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.887717687 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.889847856 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.882816605 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879955234 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.879712153 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880599502 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.881056116 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.879942781 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.882303117 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.881076797 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.882419643 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.880200704 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881685159 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.876387366 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.882282336 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.891857793 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.884788596 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.881175106 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880746532 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.883784531 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.879115255 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.878612257 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.883304196 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.88322226 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.88165793 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.882324104 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.886939989 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.882878648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.886439234 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.882587582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.881009003 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.877268411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.881784183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.882706391 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.88360888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.883870801 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.880783523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.879154132 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.881090644 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.884136453 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.887487757 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.882182745 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.87993573 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.885732117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.8847356 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.887537067 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.885763349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.885283434 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.893078853 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.893918706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.897533002 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.892482611 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.884811691 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.884596428 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.892735449 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.909239879 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887927118 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.880633173 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.87958152 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.882564469 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.88914665 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896341149 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.893480825 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.88472343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.885538642 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.884157129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.884565112 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.883909012 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.890927543 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.886321134 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.88485934 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.8851151 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.893802011 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.910948075 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.882944412 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.885757402 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.887327036 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.884961861 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.885185155 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.895347935 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.892398713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.883544845 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.883768803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.886157275 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.88739159 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.886400064 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.883760403 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.887559451 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.881120319 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.885294001 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.885308229 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888533979 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.893714914 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.887118881 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.88572928 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.890025696 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.885363789 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884351941 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.892210194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.884951445 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.885637283 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.885818556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.892157865 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.883276066 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.887172204 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.896001722 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.887924321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.887734182 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.8878119 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.884862965 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.897430033 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.915700361 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.885459476 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.886956011 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.89061619 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.902202211 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.887948477 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.890046398 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.886033168 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.8835967 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.883310265 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.888694387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.88786506 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.885928409 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.88894414 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.888916093 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.884298297 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.885083977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.88896832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.890027733 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.88889248 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.887433695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.888455862 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.890053953 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.88879508 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.888313218 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.892681216 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.887153858 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.888036523 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.887688395 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.885531329 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.886795743 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.890231241 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.889059072 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.889094652 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.889473405 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.88801294 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.889061007 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.888485162 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.888299391 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.888601109 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.888770931 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.893721655 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.889705482 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.892233659 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.889094912 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.884467036 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.887147488 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.888636292 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.887821356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.888146809 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.888674388 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.891032245 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.898635549 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.888855916 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.890078845 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.893789464 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.890389484 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889375919 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.894209198 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.893286911 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.900179867 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.890169952 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.897955465 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.891261522 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.891654066 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.891165441 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.888546359 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.888239685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.892260389 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.893356157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.899760564 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.90299994 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.899080228 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.892171588 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.894310358 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.893112277 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.897119962 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.894065976 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.891990153 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.889086455 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.894302083 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.890772012 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.892481684 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.892274542 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.892224911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.889494914 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.891269557 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.887726746 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.893999451 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.891539395 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.892083739 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.892770484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.889451349 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.891202343 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.893253549 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.892785342 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.889166983 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.890417751 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.891841739 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.893513263 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.894689493 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.901781081 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.889225954 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896245689 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893616413 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.89429313 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.893152098 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.893580692 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.897234201 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.893451126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.90203581 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.892113634 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.896776476 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.899355707 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.895940633 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.893144698 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.896609333 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.891689578 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.890152608 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.896666302 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.903018146 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.890730237 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.895748161 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.89593567 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.894114717 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.893617815 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.898058551 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.890425104 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.892404342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.895519706 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.896458027 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.891299407 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.895073117 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.893914381 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.894007506 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.896830754 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.893649661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.894940153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.894679422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.89954234 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.895271173 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.89570762 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.897532428 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.903951018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.899448256 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.896031699 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.898843117 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.894589169 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.899433079 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.894929949 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.897487057 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.896592298 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.911020283 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.906858489 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902913518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.897348992 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.897463909 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.902085483 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.896399435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.899332175 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.898254548 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.898041907 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.896345297 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.896586542 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.894936105 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.895703787 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.89512344 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.898430934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.899271685 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.90277353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.89621457 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.897941732 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.896436135 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.899420203 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.89579797 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.896830224 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.894746781 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.900193128 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.90094437 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.896766191 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.896359492 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.903307079 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.89742578 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.898650841 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.896825269 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.899292781 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.895171108 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.896795014 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.900067351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.90051494 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.908157284 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.899534386 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.908494951 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.899706571 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.908748187 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.89927815 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.903915684 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.910169959 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.895137924 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.895975131 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.897085753 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.900193372 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.906616407 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.901208677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.900122922 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.90623284 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.899180799 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.902011295 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.898689654 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.901623253 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.899245372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.900135406 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.906316941 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.900399579 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.902846573 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.898319011 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.895060267 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.901601591 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.900532951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.90012834 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.902260202 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.902039906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.901437702 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.899167626 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.898339648 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.899846002 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.900801736 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.899660481 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.897836163 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.900242238 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.907515536 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.899799281 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.907705543 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.900605356 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.908867073 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.903695815 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.905165515 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.903815212 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.901663844 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.902482227 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.899820323 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.901141792 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.901263335 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.902157067 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.902175541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.900510194 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.90493652 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.902697155 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.905028007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.903955121 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.902363006 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.900569699 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.91093779 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.92980809 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.903663138 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.906831959 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.898794166 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.902701251 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.908324392 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.904372155 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.902537413 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.904424288 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.917778406 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.912864006 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.901950254 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.907241156 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.904302573 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.90513479 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.9027736 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.903206181 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.903922768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.903233956 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.905420453 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.904827011 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.906613736 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.902946001 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.905197807 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.901850994 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.905110638 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.915407718 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.904430457 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.903345444 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.905112573 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.903879368 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.907346814 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.902590843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.903593477 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.902631382 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.904290645 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.908212245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.912784747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.91364636 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.906774594 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.901189578 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.906247362 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.906704458 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.903178333 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.905130275 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.905697056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.905963561 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.903860138 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.905785634 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.906161822 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.901941101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.906319208 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.907004227 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.90488711 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910162804 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.915356192 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.906064702 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.904938376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.907033764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.905122127 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.907533522 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.909166359 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.91238029 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.911104894 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.917773332 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.91487024 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.913612191 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.90568902 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.911223384 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.916559839 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.907087706 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.908021747 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.907612784 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.912513237 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.909819581 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.91251502 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.910058211 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.913887089 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.906742078 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.909133852 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.914128292 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.909283941 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.908096506 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.907801149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.915868984 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.907326596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.905585892 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.907547124 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.906782723 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.913622083 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.908814281 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.909159715 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.909215799 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.906651831 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.907318583 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.912658287 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.908171494 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.909964173 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.904832362 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.911366445 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.911082414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.907170698 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.904106866 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.909615362 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.908166459 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.911630787 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.915735648 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.906127354 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.909011722 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.90773584 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.909883306 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.907517601 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.908378532 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.905888676 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.90487757 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.906403134 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.911085368 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.90986592 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.913423864 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.909648764 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.911470674 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.910313844 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.909777738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.910812248 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.922440381 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.918157282 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.908253971 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.909515186 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.908480721 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.91197461 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.911044947 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.912866308 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.909307189 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.91240391 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.907843372 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.909482034 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.909183546 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.912855346 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.926116689 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.911193291 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.912388208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.910167523 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.914823077 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.909550517 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.909730363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.91088367 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.912755594 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.915647369 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.922627055 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.908993262 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.916633016 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.914277172 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.914348961 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.917415997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.915507001 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.920148224 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.916944378 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.912359564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.915460585 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.919048139 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.932335395 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.911479482 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.920603683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.945881789 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.910776807 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.91209673 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.912100722 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.911937998 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.913696719 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.912800957 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.911627046 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.910211672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.913512619 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.91335268 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.913936316 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.920567037 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.9130971 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.91120852 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.913731692 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.911549045 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.912558003 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.906763432 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.913623748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.91161302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.914485856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.913342013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.915948886 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.913074296 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.927953899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.923656317 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.911553414 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.91443137 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.907787681 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.915310736 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.916567415 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.925228069 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.922218331 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.916945353 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.914931837 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.914315179 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.916243497 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.911250452 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.913406712 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.913293841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.913893788 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.910546497 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.927241192 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.923410101 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.918083839 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.912901057 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.913860593 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.91353086 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.91369088 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.914844337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.911877935 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.91340176 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.911785672 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.91590652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.914077096 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.911168064 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.915619813 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.920907908 seconds)
  done (took 1133.828823621 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.910081189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909427013 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.908795218 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.910607996 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909354514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.909758344 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911265253 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.912427758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.90876097 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.911745685 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.910462266 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908821501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.910237231 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.90928085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911780687 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.909735337 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.91243228 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.908249297 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.909232037 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.911229771 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.909584082 seconds)
  done (took 41.944803099 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.912211218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.907478614 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.911579014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.910874202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.909916502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.909498962 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.904815127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905268227 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.906538342 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904975627 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.907992359 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905951191 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.903132353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.904848494 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.906001559 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909957544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.904607964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.90097905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.905493539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.899186547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.903306699 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.902802855 seconds)
  done (took 43.77525716 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.907020416 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.908388515 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.905356808 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.904121281 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.905285809 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.902807034 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.907580963 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.905509384 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.907152118 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.905682401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.903609653 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.906233063 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.913973993 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.911406423 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.911167697 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.904426921 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.050005379 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.907689983 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.910000932 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.908789443 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.90263743 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.911398672 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.904431649 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.904650158 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.904616423 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.908969211 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.906738136 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.908819065 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.907383063 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.907073887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.912863176 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.905036943 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.904737307 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.908507726 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.907289436 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.908725405 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.910926696 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.908720883 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.904005718 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.906947782 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.917259603 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.929476457 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.907564453 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.915952433 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.909956017 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.905762578 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.909556894 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.918355769 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.903835564 seconds)
  done (took 95.478220134 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.910764679 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.907926534 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.90556219 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.909548238 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.909284314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.910836945 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.907153338 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906986561 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.902688821 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.903077218 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.908778244 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.903080946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.904209377 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.907518894 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.906785145 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.906288493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906653042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.90649112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.906125047 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.907732882 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.904865782 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.910139527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.910541061 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.906655737 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.91028855 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.905725008 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903034046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.904825056 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.901997895 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.900562463 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.903487595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.904064742 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.902279893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.89876706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.89834166 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.903014254 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.900707859 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.898691424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.900557279 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.900930058 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.903274952 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905229932 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.902259847 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.903484078 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.901437576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.901182905 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899919423 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.902428121 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.900195086 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.901022276 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.900334364 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.899565056 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.902170005 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.897936844 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.90203406 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.902604039 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.899777758 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.89795929 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.900116423 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.900406854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.899633572 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.902215397 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.901169801 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.90208175 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.902257548 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.900155468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.898430329 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.903746173 seconds)
  done (took 131.269426368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902804343 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.905306412 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.904336009 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.904499828 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.906018849 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.903358533 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.904357716 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.902272968 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.905048153 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.905262695 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903054436 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.902563146 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.90425736 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.902200154 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.904045943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.905124355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.905400335 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.904982289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.904238318 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.904105248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.906008884 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.905332662 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.90524262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902732317 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.906104761 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.906701357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.90379684 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.90337935 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.9038152 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.905503933 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.903905617 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.902784961 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.904533398 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.903567486 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.903959437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.904567588 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.905328208 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903459196 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.904860847 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.901496839 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.904386239 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.906430795 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.90048437 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.898492092 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.900342659 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.898732715 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.902009249 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.900917077 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.898990672 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.901751397 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.902700447 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.902461647 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899194129 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.89716404 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.899978249 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.896730062 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899828752 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.900757248 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896973077 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.897132427 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.895994423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.895895425 seconds)
  done (took 119.793625265 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891157813 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.895309296 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.892313126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.889577686 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.896636165 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.890497032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.894172327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.893535707 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.893627006 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.89347961 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895959053 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893154387 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892632755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89358093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.891863702 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896146502 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.892296732 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.890893159 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894578174 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.890671638 seconds)
  done (took 39.679847198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.888142265 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.892153191 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.889664282 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.890575922 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.891739441 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889512143 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.894943918 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890724519 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888060796 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892235641 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.893883145 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.888437362 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887022091 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.890110977 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.890867012 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.890782116 seconds)
  done (took 32.062990901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.890213992 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.892407179 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.892997838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.894477311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.889832798 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.890303405 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.891520507 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.892438369 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.890406565 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.893472168 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.892549047 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.892229978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.891239738 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.892899035 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.894285852 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.893322624 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.887338969 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.890960739 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.891185835 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.896071923 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.888622841 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.88898583 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.890974515 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.891074602 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.888834727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.891093673 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.888460093 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.888749045 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.887641034 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.89152861 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.892252556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.891265542 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.889733146 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.889065345 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.893134373 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.892590956 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.891270884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.889548133 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.891919282 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.890328128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.889695276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.888076742 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.888849401 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.89219739 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.88695821 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.887453062 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.888744968 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.890450999 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.888116112 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.891114993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.890931522 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.892737328 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.889862388 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.888746487 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.890434731 seconds)
  done (took 105.806216059 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891801577 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888072761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.886875922 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.889307622 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.887852615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.888108702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.891125791 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889329566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.886910706 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.890072335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.888164559 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.891525202 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.886895291 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.889886067 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.888442265 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889170734 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.887021833 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.884302765 seconds)
  done (took 35.806238305 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.889538515 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887401306 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.890906917 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.886602231 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.886222676 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.890777105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88809725 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.889205111 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890650414 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.888372942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.887238705 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.891297988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88994081 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.892645078 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.888940759 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887364843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.890449452 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.891993287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.88835162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890335874 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.890406788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.891409377 seconds)
  done (took 43.379942174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.890525315 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.886823777 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.905827003 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.907977861 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.911907763 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.923219163 seconds)
  done (took 13.238178808 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88741031 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888565836 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88977557 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891924712 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88887707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884818528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886858185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888814968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890799583 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888551147 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891966895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890388159 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891617782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8868368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891321465 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89130763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886057157 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887190142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886517305 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888700118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887508903 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89026473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886870089 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889449799 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888520291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887885834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891451883 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888101806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888651229 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891127161 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88855371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888508159 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891804187 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890040743 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892207206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890630819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888203709 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891929171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891503679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886897312 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.88897056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890815826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8911296 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889178075 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891426368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887410812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889398376 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888273448 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88744364 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889738709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890820289 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887637582 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889174498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890143293 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892057838 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893303414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889014334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888771084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889433728 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888036621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888443398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89198269 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890016588 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890247018 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889037754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888215462 seconds)
  done (took 126.511979816 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888303274 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889885806 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886460756 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88880828 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888019583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888872779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890607968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886497308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888367266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886761294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892027092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88824506 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891348292 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890302744 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887283996 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890622338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889106249 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889730918 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889375751 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892302172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888611011 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889562085 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890699864 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888966713 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889193801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893766123 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889791111 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89260426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88757262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8884482 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889884335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888586814 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891304826 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894761839 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891458617 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890129472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889261244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890951996 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89230298 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892790237 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890176618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893681436 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891967644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890507441 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891295358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890732568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889172651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891536031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890313773 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891900182 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889897762 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892098897 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892639104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891267162 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891363073 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890839772 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890442133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889197112 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890833172 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893903538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891541348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888981244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895061085 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893155424 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893018409 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891362371 seconds)
  done (took 126.583433785 seconds)
done (took 2626.829143656 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.931101724 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.102515884 seconds)
  done (took 15.846759813 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.06503193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.016210928 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.902903204 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.91511067 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.899894303 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.922963094 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.921821348 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.900811284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.90432375 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.903962412 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.904303436 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.09096534 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.900118904 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.902979084 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.905742761 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.996803218 seconds)
  done (took 52.886165815 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.906029096 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.908337217 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.918445362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.909031081 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.906882848 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.922315144 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.940408062 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.907141694 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.967924814 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.920470727 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.024823067 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.920687929 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.905690014 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.97951726 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.921618901 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.922202559 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.004869661 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.985772745 seconds)
  done (took 36.69914243 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.985351023 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.907423003 seconds)
  done (took 10.724944225 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.908975409 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.944198521 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.957759175 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.935467984 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.906123282 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.899960404 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.924527986 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.937410034 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.941160524 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.927408541 seconds)
  done (took 71.111541406 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.910405284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.909249202 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.908619716 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.908239884 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.902439357 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.905116358 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.907900246 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.899014857 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.572431186 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.944303745 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.914631494 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.915063917 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.905927458 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.908302497 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.90633993 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.931345916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.004675741 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.902119417 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.905004077 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.912988184 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.906951109 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.960502124 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.919675724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.908533947 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.935777465 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.572316935 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.914257808 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.91359464 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.997331042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.905309969 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.906502719 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.908903023 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.911696974 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.275820728 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.171215296 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.908606075 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.922519149 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.91558806 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.902415127 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.004669935 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.908234635 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.910238771 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.555248816 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.153282771 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.99524888 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.950934713 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.213648108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.925890023 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.913900852 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.936402439 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.911278527 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.911239985 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.923478454 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.389116554 seconds)
  done (took 134.16805692 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.906165065 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.253673947 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.07622742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.910022851 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.193453965 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11959722 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.906365945 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954733511 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.906513408 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.143106608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.163096573 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011708268 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.90388089 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.907233726 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.905987171 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.901712088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065279855 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.977253154 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.905928272 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.904074231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936433276 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154632227 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.029005669 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907107929 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.932490509 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.117758078 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.028294278 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.011349763 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.699338715 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.903782871 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972716535 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.90448497 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.907343358 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.903019547 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064477896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.001428848 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99164553 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.907100204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903625848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.903501127 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.669725387 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10789735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.001610251 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.049699171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06080616 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113251737 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.68957224 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.906987647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.651028128 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.071185903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.136689284 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.145818276 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.03035328 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.907490503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.245672178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.906279989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.905305256 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.156015957 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050266244 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.007071296 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91128058 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.907223117 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.906960814 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202395665 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.908543068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.004545034 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912704448 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907556804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.006002761 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.005681599 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.043557686 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123140681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.941371866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.644926627 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.112459211 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.158681137 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.97294223 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159962907 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.906327031 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.905731114 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990308599 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.750179732 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.163763108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.199597533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.163362788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.942602271 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.638013251 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.907004682 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.137255579 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.129954423 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.170698569 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056994302 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.145650065 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.243519741 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.905357908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.905080607 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.120861106 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045445656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.910600475 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260873914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139244357 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.459765451 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.928420362 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.219440811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040491076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.909946079 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.557585461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.910059276 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.146041764 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.951576713 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.908273605 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.911487161 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.1293756 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.901968122 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908772815 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.803043007 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.972663205 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.912130072 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145958968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.911119675 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180937882 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.912080709 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151788542 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.352019846 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943618866 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.086091243 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055631594 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.911145253 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15750967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.156626161 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028085795 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180101641 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.796295311 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.91045845 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.201722349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.912653909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.910952106 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.085769756 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.912405551 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058004067 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.913329014 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.204963749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936726444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.147518284 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912503926 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.171924771 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.944744794 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963524095 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.912956275 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031501025 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.910573171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.736643288 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.07310735 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911089198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.911404697 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.467301197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.909248331 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063310697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.146955395 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.940242642 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.985726309 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.587067667 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.911794546 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.994127884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938044245 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.302810534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.91531278 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.166985121 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.91520257 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.9105178 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.910987065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.212175956 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.151185827 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.913351475 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.911895466 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.825500157 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.916900597 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.911156001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.097060584 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.267703956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.912723505 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119080745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.913465014 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04332628 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.91675559 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.992386906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.253181207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.912486069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.911813279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.914076983 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.914873195 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.912230634 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126177772 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.941363953 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.431323277 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.055325495 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190776134 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.228811684 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.165760253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.964287133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.916842382 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.172444405 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.916585162 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.98011817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.914515093 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937550803 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149715452 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.919842391 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126093411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.197407242 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.765468069 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963034949 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.919403565 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916932031 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.91242291 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.065686977 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999664859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.91526361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.918404169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.030652261 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036406206 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.128234617 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.914162115 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.949968184 seconds)
  done (took 911.39338557 seconds)
done (took 1234.644617032 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.914902138 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.914478303 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.906023602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.921018751 seconds)
  done (took 29.49718093 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.926091834 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.923733916 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.924000254 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.922453383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.925930683 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.923996274 seconds)
  done (took 13.390197496 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.942508238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.360333905 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.917738559 seconds)
  done (took 22.063934035 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.993232472 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.304575245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.04382696 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.347977942 seconds)
  done (took 10.531086902 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.928217725 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.926111996 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.93035312 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.926461752 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.92707963 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.927104369 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.928138449 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.92758319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.930401287 seconds)
  done (took 19.198300983 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.968597559 seconds)
done (took 100.48755759 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.307994373 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.98123416 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.200125262 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.023937787 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.362966306 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.070444403 seconds)
    (7/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.016547562 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.924016755 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.007233723 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.013812129 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.012797037 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.176991526 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.031341837 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.981951732 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.835033214 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.026933309 seconds)
    (17/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.007359671 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.950006888 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.288185261 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.854902968 seconds)
    (21/309) benchmarking ("sort", Float32, false)...
    done (took 5.646592623 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.60780945 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.051982518 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.908831491 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.524638276 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.34731486 seconds)
    (27/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.938013123 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.482897429 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.015552282 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.058172297 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.908722576 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.709352578 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.256920723 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.212160925 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.911273881 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.388786509 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.837783834 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.097564677 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.421391874 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.221803201 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.032119477 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.923250653 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98913735 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.940641441 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.892744466 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.737046679 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.026824408 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.925180122 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.080077912 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.137399209 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.215411427 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.903509109 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.98870575 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.13640845 seconds)
    (55/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.455123809 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.658290073 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.21896085 seconds)
    (58/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.940788204 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.170384535 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.909702217 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.00821723 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.176672201 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.942064928 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.12320525 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.909871195 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.109831132 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.01728391 seconds)
    (68/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.993686454 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.928885692 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.925735506 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.271509691 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.168175333 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.387573704 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.002971015 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.749579158 seconds)
    (76/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.002330315 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.02380624 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060206899 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.949262738 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.086030393 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.010266745 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.217182971 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.085908435 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.314746342 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.826633994 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.031091423 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.06792719 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.007567605 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.098848267 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.012580668 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.990131065 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.200307268 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07319862 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 4.815460072 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.013598855 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373731797 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.213035559 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.019883665 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.008697414 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.999655168 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.019265962 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.103981386 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.055901006 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.042437345 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.008187201 seconds)
    (106/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.096844451 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.872585242 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.104638151 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.58621219 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.962501833 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.946535764 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.91233286 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.051769484 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.785519634 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.916569827 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.677992107 seconds)
    (117/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.05630502 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.950002014 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.125862138 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.996274557 seconds)
    (121/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.829071666 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.93175049 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.35743321 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.936702831 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.029365205 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.032001072 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.098017745 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.993048013 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.146907007 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.271722547 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.93781735 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.035889991 seconds)
    (133/309) benchmarking ("sort", Float64, false)...
    done (took 5.702651236 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.201407995 seconds)
    (135/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.088979937 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.93318371 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.133074603 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.551386387 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.271926548 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.230595349 seconds)
    (141/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.964553985 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.027238806 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.873109059 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.968315293 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.21539147 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.957472525 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.933999222 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.367859 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.938818067 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.180888453 seconds)
    (151/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.378467064 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.173287911 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.225934749 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.085320206 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.212743928 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.187759177 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.266852837 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.943265904 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.202456961 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.990572387 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.95987146 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.018690647 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.608413079 seconds)
    (164/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.095995103 seconds)
    (165/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.027603714 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.019895577 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.184214298 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.172700489 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.02357268 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.313875125 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.961710742 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.108773577 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.961154148 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.957191558 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.601874354 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.446119573 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.925101593 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.128184189 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.286901717 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.178991806 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.796996581 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.084416291 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.624753582 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.953771573 seconds)
    (185/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.046178702 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.300883915 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.105395734 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.26498845 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.233255704 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.428531676 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.038353328 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.840686251 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.953710573 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.004820583 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.892726124 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.165235971 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.936203423 seconds)
    (198/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.942344074 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.255351003 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.067711946 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.080888304 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.924574984 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.557656123 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.787761334 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.956246907 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.978896736 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.187330363 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.962909491 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.992070279 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.231268458 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.937440932 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.358590219 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.841294508 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.257890847 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.156876171 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.153196519 seconds)
    (217/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.035926679 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.264981611 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.258230729 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.946330724 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.023097342 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.132946742 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.765879036 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.088270879 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.94524763 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.799923515 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.102608361 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.053366671 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.955279258 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.0652751 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.003740336 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.503608592 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.792395494 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.176566391 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.891563893 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.961733248 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.177797661 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.998374066 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.886870364 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.340047282 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.019624624 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.127501376 seconds)
    (243/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.965142215 seconds)
    (244/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.38422222 seconds)
    (245/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.041999136 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.920231001 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.006756537 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.307892747 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.924308994 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.194157451 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.361279465 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.043830116 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.371943195 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.940903515 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.098128884 seconds)
    (256/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.17346032 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.039808075 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.340628401 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.036097876 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.189338671 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.922935068 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.438209421 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.081768812 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.027173618 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.322469557 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.172876645 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.279340925 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.944229691 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.841807954 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.23082845 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.370640861 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.28824071 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.953806515 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403390869 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.170347875 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.199685772 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.949730682 seconds)
    (278/309) benchmarking ("sort", BigInt, false)...
    done (took 6.937733225 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.123860429 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.964177458 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.005556059 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.936826357 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.104095082 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.984703627 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.936479492 seconds)
    (286/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.940106927 seconds)
    (287/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.632948081 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.94613062 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.120687348 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.161928969 seconds)
    (291/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.230285157 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.700127194 seconds)
    (293/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.180908312 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.555582205 seconds)
    (295/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.332598085 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.916621591 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.973114855 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.936388609 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.97173268 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.937792791 seconds)
    (301/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.052959739 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.054273002 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.079691211 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.937480753 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.968845248 seconds)
    (306/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.944762921 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.154326495 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.656841736 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.184122725 seconds)
  done (took 1025.174262699 seconds)
done (took 1027.081247924 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.969147145 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971996891 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.946132242 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.967501709 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.067750716 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.982876114 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.956623461 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.947640258 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.995189767 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.996251743 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.954798343 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.97883586 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.958381638 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.957093806 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.945633539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.97251261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263629062 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.985854979 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.974225817 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.955849744 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.973007487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.954043089 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.996652021 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.980622355 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.951173233 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.948540748 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.95998225 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.976852547 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.069273794 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.959639549 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.951833088 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.968557164 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.266053856 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.974451634 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.942126268 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.977184023 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.969619917 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.957187677 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.952063593 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.989561618 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.350415436 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.9917748 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.959990301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.948604296 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.948613579 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.953002482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.959905112 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.956327275 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972910907 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.967254842 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34111993 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.003026686 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.958055761 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.945953487 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.952741254 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.953548172 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.950264487 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.969177579 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.972319591 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.970215423 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.244257599 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.976530698 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.947849363 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.971824739 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.962462311 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.376206432 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.976325003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.949546044 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.345710029 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.986227783 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.375022607 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.998773898 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.946375934 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.968068857 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.987475817 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.265139127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.967080928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.943707978 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.963639877 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.953083488 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.956309424 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.969348314 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.950929564 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.946305106 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969877255 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.982198162 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.958321257 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.957794942 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.954395663 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.976144368 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.9619012 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.967830229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.950887785 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.942525103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.957322826 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.95006958 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.958487614 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.960467179 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.952757329 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.956241673 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.346543085 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.008453435 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.946186325 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.945910376 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.945362755 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.972329951 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347552722 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.992948896 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.968038362 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.99757169 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.949659442 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.246184958 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.987557773 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.97398296 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.957516652 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.950597902 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.945068302 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.248113926 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.369643207 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.009692097 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.950374632 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.953795907 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.975052413 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.949722262 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.945897807 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.265251333 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.976453333 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971859349 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.079838477 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.961050085 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.989810978 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.958687354 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.953986389 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.986371715 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.976286819 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.993269809 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.955602414 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.976423219 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.976173747 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.948607448 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.972234428 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.962200067 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.951573723 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.958119119 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.945849159 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.98851983 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.974651339 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.974456975 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.971379268 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.083253952 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.948621366 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.252393256 seconds)
done (took 306.48740693 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.021664402 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.941156722 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.044203815 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.94927289 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.027941278 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.032370553 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.946318828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.947781143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.947268217 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.327385169 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.946204525 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.949016919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.948478086 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.947705263 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.028437211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.948138654 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.947383221 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.304887188 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.949797027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.02135333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.949537542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.946053239 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.950529363 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.340870375 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.948967957 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.942949368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.021855761 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.948689205 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.290761842 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.94678758 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.950326494 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.305187587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.039811939 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.969135083 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.963253524 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.95752053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.028748366 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.955016664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.028783473 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.030360143 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.047468564 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.993457 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.950949029 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.949700725 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.954696016 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.954180175 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.948233357 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.980999189 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.944534915 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.950312347 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.292881369 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.959446617 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.961656942 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.950277526 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.948894525 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.972636804 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.948377465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.953696708 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.041426532 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.950484442 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.01202605 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.329376414 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.34927126 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.951651324 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.95133504 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.94857757 seconds)
  done (took 189.757950187 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.017779421 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.027034983 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.014981015 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.955475027 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.001837053 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.017607485 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.955077288 seconds)
  done (took 15.860919308 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.960843997 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.950787586 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.004547698 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.002200811 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.953808844 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.103838586 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.952488654 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.962504712 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.950662416 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.003708484 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.954659473 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.952544963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.961409142 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.951740202 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.001173607 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.963836978 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.069299804 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.954331285 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953954882 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.103866841 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.949390205 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.959578257 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.007296841 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.963871897 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.95326336 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.960513292 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.5360066 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955975996 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.952019703 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.953220703 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.949594858 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.99442063 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.95465508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.950029315 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.952809127 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.067985787 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.956386239 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.950386387 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.95599247 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.950190337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.952079869 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.951223638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.955113958 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.953203188 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.955902265 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.978086532 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.952443277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.9529359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.954842983 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.95462127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.006960427 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.953899465 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.950890867 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.951141426 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.010580259 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.962514972 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.95693686 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.953351329 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.957672725 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.953013613 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.104796037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.005860715 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.955673234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.005906074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955472285 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.957059399 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.957148223 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.957191268 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.052323246 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.956235614 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.004364752 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.954479936 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.114842103 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.978549498 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.956255347 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.959644465 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.9584418 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958460923 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.958735848 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.963741353 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.953165911 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.959549556 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.9626107 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.954516573 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.952773929 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.068102496 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.065779624 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.955245345 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.971475634 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.966769649 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.957503906 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.010179112 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.958319225 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.954634813 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.027121373 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.082434017 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.023721471 seconds)
  done (took 214.218014537 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.972923339 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.974102283 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.970033627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.986980803 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.970351437 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.968799054 seconds)
  done (took 13.732559013 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.970608878 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.969463655 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.968710506 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.969117713 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.970179079 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.970859135 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.968731911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.971972279 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.974774664 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.969095688 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.970797431 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.966518128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.971494973 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.968712164 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.972553122 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.969724406 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.974555245 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.966016885 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.969548339 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970286969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.116905581 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.969465063 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.973243766 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.968596191 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.977373471 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.970911395 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.977381345 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.969660858 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.96981928 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.979419635 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.974884278 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.970414692 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.970459352 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.979593669 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.976493565 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.971871521 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.975522063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.971775573 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.969809303 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.971952442 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.970896745 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97167245 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.971117549 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.974399565 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.973066409 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.977885877 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.978069475 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.980029343 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.972472691 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.972183999 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.972456367 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.971645329 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.973112769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.972396243 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.976689463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.977656878 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.978736033 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.975895557 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.975103735 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.974537239 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.974381495 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.96896787 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.97404604 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.980179698 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.981126371 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.97324043 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.975350979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.97934053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974743626 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.973181863 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.973795953 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.969425656 seconds)
  done (took 145.088013211 seconds)
done (took 580.540671617 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.152133907 seconds)
  done (took 9.043375319 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.16054246 seconds)
  done (took 9.096931864 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.266657498 seconds)
  done (took 10.163781224 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.011199727 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.002298114 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.978048474 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.975384849 seconds)
  done (took 29.880395173 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.054987231 seconds)
  done (took 8.947469931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.990922034 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.968424358 seconds)
  done (took 15.887417551 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.110711044 seconds)
  done (took 9.003543457 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.05899735 seconds)
  done (took 8.969975635 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.972921902 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.998121332 seconds)
  done (took 15.874269173 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.948343598 seconds)
  done (took 8.836945888 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.620151899 seconds)
  done (took 11.605535424 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.974418693 seconds)
  done (took 8.965830334 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.041637669 seconds)
  done (took 8.931351543 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.086134002 seconds)
  done (took 9.974360247 seconds)
done (took 167.073638403 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.979184815 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.966129784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.967028317 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.965702258 seconds)
  done (took 29.764491933 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.005091857 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.001052291 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.002976569 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.013492103 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.00455461 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.003106726 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.995356234 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.999445646 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.015128793 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.008391433 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.00463114 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.003077919 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.003597532 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.994186995 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.002647963 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.004829411 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.012497911 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.005032309 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.99575303 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.004845802 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.971104326 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.012696758 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.005247533 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.971697188 seconds)
  done (took 49.931399473 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.162387604 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.04182812 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.125966403 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.024027415 seconds)
  done (took 10.243587825 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.021909902 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.022560177 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.03289934 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.073948407 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.096990434 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.031536355 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.998377685 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.991054415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.975451914 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.022703921 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.09860434 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.018478276 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.119772192 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.970125472 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.159786552 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.968894864 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.97027038 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.024385301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.075665571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.086200144 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.971412912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.022473078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.025988417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.018477536 seconds)
  done (took 50.687631707 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.968808333 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.97827896 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.972496531 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.968342113 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.967130472 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.971903927 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.975896301 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.970320721 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.991972516 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.971666954 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.977744845 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.975865963 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.97543749 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.977579776 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.97277579 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.988732594 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.989127162 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.975690911 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.980952938 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.983878211 seconds)
  done (took 41.424852408 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.969157571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.82513653 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.318295368 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.224666214 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.970534149 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.96834579 seconds)
  done (took 32.170385736 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.988696388 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.979082717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.975842485 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.03222035 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.112783633 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.981441551 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.97636917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.989859785 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021419658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.040692507 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.996136144 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.006786286 seconds)
  done (took 25.995982706 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.974575931 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.984123566 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.974507379 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.000688055 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.9896368 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.982669518 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.983003349 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.971615429 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.991099204 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.994698272 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.986183352 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.988960364 seconds)
  done (took 45.721899506 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060063863 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.862415632 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.657726718 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694457295 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.51095956 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182004852 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.489577372 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145983385 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.978504623 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2474913 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622367699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221787677 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227807952 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97437939 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.046045717 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.444425749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275127951 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234225493 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004224485 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691312324 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094630558 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441178848 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.757526035 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104245031 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185225811 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.103788659 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.236709807 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.930088436 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114700724 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014780791 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985527221 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976535513 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250704103 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194125025 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107731669 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984920772 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628279794 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.695069674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.961857146 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.712272805 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.71941815 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.112760462 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98352498 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977812699 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.910233032 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439616768 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156106651 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.980135961 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.681093386 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.979565827 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987770369 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068230248 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.979601371 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.789880649 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928627894 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251982935 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.976116733 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985086148 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.551424319 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096718064 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.527779855 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.914757612 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.068388156 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.70344446 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461930664 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.134531279 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.9801217 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978588689 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908609572 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.689519769 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105557148 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122479775 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.994305195 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626680275 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28378729 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.696295545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.061510198 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281139947 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.760781652 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.915871451 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206194081 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926729847 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91305531 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.836306854 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.91032551 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252832681 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015679338 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.644727617 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019761517 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14858535 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99159017 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000049283 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986246732 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201479227 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.861551962 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983020644 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.572319286 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265696294 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000333936 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15781822 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915223326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.986560696 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233128398 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.191329887 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.150571554 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.459418797 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141149799 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984771732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.06590556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.815455608 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990091663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.283582795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047135306 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.107031278 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110299502 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93685709 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29485738 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01054504 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.152664626 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.641255077 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24602935 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.313787967 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232649367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067669861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.983515917 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.983603105 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.775371086 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.605647606 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.203955502 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.984819406 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299388638 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101017115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.984675179 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915230843 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.645683735 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650823118 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.102746604 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207093856 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.759610471 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349836648 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915487733 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130101307 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.095716815 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.206565404 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.641437948 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.070623818 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241566733 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346743532 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.125155881 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087606387 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002225063 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102641105 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005256123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.218874622 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3342656 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.985255753 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.990649838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.751120614 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.060975521 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986798542 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.991112061 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785643401 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279674016 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018864606 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.985922869 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.918016177 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.999833282 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066177741 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990248585 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994307437 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.507958047 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733540885 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.997692359 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.652565576 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217830839 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995344777 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.7402003 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174479232 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.068824056 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267883992 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052689983 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.918139419 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.686497423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.68830258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985652823 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919122136 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.987496107 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993321385 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998374289 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.20481119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29237688 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.042855965 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.756620225 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.10145554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996927366 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.990099022 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984847359 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.508751468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112263822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428975841 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090470853 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122330273 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.997917216 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.921811541 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.986945736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988739148 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.988268944 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.945674598 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040254163 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.702450021 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325426991 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249425775 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.633723672 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006242194 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.721593471 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.11799817 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.018267852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.584311399 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90203803 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.08111888 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052661562 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.997740198 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.755880998 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757651844 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.559464382 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302264929 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.326073895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454119721 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.29202441 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303555448 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167180361 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222306185 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.516005282 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045875968 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164464851 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933039405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073498146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.648209132 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352119536 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000409007 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213644298 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392303808 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.662562032 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150072346 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198005447 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024502755 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.74261756 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007957741 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.511011118 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143028147 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.631895552 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218728586 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160163312 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.602318233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098509108 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.991293667 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.475366968 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072513228 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.699152481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349690374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.454867423 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.647980863 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363872764 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.991627924 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431863679 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360140362 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256506295 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.078153843 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926714824 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00264973 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.002264617 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.991139136 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.968560994 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.89377493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.269465931 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001776503 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223849269 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.178232871 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294630935 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.906489862 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.997163341 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992304914 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297931539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.612833602 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224734832 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.253229127 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.557730152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002014323 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.926383736 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926158537 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.693898358 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.989913266 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964956619 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223703714 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.099716605 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.942939638 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31040397 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29497007 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244757403 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.004646465 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275362851 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276897243 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.757970781 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022836291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.092748367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598757391 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.703628988 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21542431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226896718 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818014343 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224195103 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.669159748 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.969731021 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.991597882 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204954379 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.214810637 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.647957098 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24826973 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.716920618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.001562147 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360288299 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060151522 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.652950181 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211090254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.083379144 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001933431 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075767667 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001205653 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.008582494 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003437798 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038938482 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664724952 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.132509598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.008620535 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082856905 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.12852212 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.582551006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.001926347 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28234231 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361254818 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346713579 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06092588 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.99714271 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996010504 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926269835 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131216519 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438579876 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267332561 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.124543778 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.132743162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016545303 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591952817 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.205206836 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29525667 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269135953 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.890026308 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995274488 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08141735 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.219039536 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006140323 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.207168199 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231234793 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324324217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467452241 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.054249439 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261527681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270916878 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363266694 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.995934041 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583943561 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.010637546 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.528876601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.041423396 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.680171234 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285279566 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008183955 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218606835 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019913714 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.190213972 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.448015181 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710888873 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360363581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.994167184 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06121747 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286695468 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414352083 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316762869 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078066697 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008967441 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.694596778 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134115216 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.943663588 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259602648 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996074381 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20572256 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.709731484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004437029 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307777334 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314937784 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.996225558 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.970747656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057606051 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.005658304 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.220792101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274739247 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250454458 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006976262 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.997495318 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.812131438 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305836489 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066318606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931205185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.001272879 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098870631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245846663 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018260692 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.514348809 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.699605583 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333013049 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.916472584 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020688383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35794421 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461511465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363200536 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.528631027 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247511609 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.556995521 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775684911 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361148917 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.000974202 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.334660432 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363662331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.999703872 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43032165 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095642954 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.28029854 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324851205 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.003018121 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836126846 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.044250593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222042766 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589921349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.941299191 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.003847558 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.058006986 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.001621961 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.127723764 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009400918 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.996653293 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802926176 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.827991539 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486870663 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.000133784 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.01922018 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.58287855 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.33115845 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119682996 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154931472 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.010093154 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.70671302 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.292435279 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252893875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.59632423 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.080193658 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.003209933 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000927044 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92675791 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.192002633 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.194190938 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297849894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.425457859 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.118353707 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00245407 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.212510796 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208755978 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.58463071 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159473211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468431228 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129786276 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.929388125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.716796022 seconds)
  done (took 1735.903151567 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.003750651 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.01989663 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.004757217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.023737285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.018443152 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020570462 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.06756534 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.097193988 seconds)
  done (took 58.183682962 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.001449935 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.193449943 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.011274048 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.002052499 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.022732792 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.002348927 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.196891906 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.016115221 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.022929025 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.013475821 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.002580695 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.005336424 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.276195038 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.029982622 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.002824758 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.008125041 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.012805952 seconds)
  done (took 76.75613494 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.005416108 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.34126698 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.034152239 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.024847354 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.920395647 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.008863654 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.05014549 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.057344514 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.008585766 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.915286496 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.343730857 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.044047158 seconds)
  done (took 92.682855545 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.020923484 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.011317871 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.010518491 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.011295457 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.009973212 seconds)
  done (took 12.00053135 seconds)
done (took 2263.446321816 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.242208586 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.266539735 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.231852663 seconds)
  done (took 6.427737872 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.153644164 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.201442288 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.319335184 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.326248545 seconds)
  done (took 10.932208386 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.301988029 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.377581843 seconds)
  done (took 6.608209495 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.552073722 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.038059284 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.435897463 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.007757832 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.006804631 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.007270426 seconds)
  done (took 22.956305864 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.008152153 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.010982659 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.009497809 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.012777165 seconds)
  done (took 9.971581869 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.99262789 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.736633315 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.99387998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.010132058 seconds)
  done (took 21.662352121 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.759334468 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.131472994 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.753682754 seconds)
  done (took 9.576508106 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.589847433 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.247078849 seconds)
  done (took 9.766576031 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.175617793 seconds)
  done (took 4.109701813 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.043551148 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.285133135 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.542602799 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.547230793 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.635767377 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.897421273 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.350122145 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.248067129 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.464134995 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.473649155 seconds)
  done (took 26.422662923 seconds)
done (took 144.628861888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.392417904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.045569478 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.216484368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.396746178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.25282746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.218196321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.231037989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.38941908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.077145651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.062666492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.390873149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.249335166 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.154211583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.039042276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.171259564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.03995616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.240039819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.415148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.148726762 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.422457952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.22492261 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.026137863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.217034218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.046555696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.242206754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.168321893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.569917281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.043025099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.207658334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.586320944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.17253863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.41841605 seconds)
  done (took 173.411031122 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.014914842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.013296602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.012891966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.010196975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.518303201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014182206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008482984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.007498247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.431392604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.436798158 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.010348875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.504367677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00900097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.008929632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.006418483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.004980799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.609651769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.009139125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.004110833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.005456825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.001870774 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.322750448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.004115717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.332575298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.597450528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.002854178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.002526552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.00358716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.003611315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.002454645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.004919285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.004281245 seconds)
  done (took 213.861160133 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.982623694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.004654864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.006086604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.004800014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.033546117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.002783941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.005063323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.021084799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.642734541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.63620871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.005199265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.006017557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.005018807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.006218071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.007116642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.005239145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.005918527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.005177042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.006816539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.006042959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.006824443 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.67242874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.005265807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.673532747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.003737193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006232546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.006130289 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.006832917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.00163303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.004166517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.00399615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.001163137 seconds)
  done (took 224.717725294 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.189909373 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.009422112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.009917428 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.928474647 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.012769744 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.009155647 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.003451473 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.1894344 seconds)
  done (took 20.280270338 seconds)
done (took 634.21484239 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.497184969 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.346068536 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.188940542 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.033921177 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.294036763 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.065510465 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.029774667 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.097797636 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.659999481 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.100845243 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.675565504 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.053526432 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.765637477 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.062319061 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.152983719 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.090138462 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.571725248 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.668158104 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.205379237 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.101950636 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.198257506 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.957416367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.114259556 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.694085554 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.780987058 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.009429827 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.110295181 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.5773914 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.037424286 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.189044439 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.822246756 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.340751708 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.043979224 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.030817797 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.088652518 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.066538868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307413781 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.041308039 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.1511133 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.757731486 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.112672653 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.568468495 seconds)
  done (took 108.591564663 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.001863223 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.000317673 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.999604401 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.999582351 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.997797382 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.999305275 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.000987934 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.996866873 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.998840952 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.002147329 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.999735441 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.997724521 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.000246308 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.998273292 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.996693903 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.998617419 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.99751474 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.002625616 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.997448225 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.998375763 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.998377402 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.002150544 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.019821545 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.000823351 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.002818227 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.998557665 seconds)
  done (took 53.945524316 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.0141145 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.159411459 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.253114731 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034606541 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.012251776 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.014820867 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.029867655 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.020424931 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.016416681 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.016176957 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.102344186 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.019994921 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029384568 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.252169524 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.034212324 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.012495699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.01524888 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.014403887 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.172652001 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.033060114 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.034861469 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.01825261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.033847662 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.027655675 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.015402881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.010179281 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.017430421 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.472926158 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.020717656 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.104788823 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.065251082 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.042662808 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.449796515 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.263030801 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.073930398 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.024228911 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.012326228 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.107752468 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.020778298 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.013904335 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.033252245 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.021745096 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.249240511 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.513226196 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.031774605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.013738149 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.484254391 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.118958889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.057359755 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.02576811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.25720812 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.035704682 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.01899703 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.017443052 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.050212988 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022557363 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.012622918 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.364773316 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.027414816 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.030485785 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.022648288 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.016592956 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.172219275 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.02763328 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.168695252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.026992027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.023340573 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.020428278 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.248721655 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.036432521 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.510363333 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.033109402 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.019302912 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.110724074 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.174090213 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.513838573 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.030428135 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179419685 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.465889346 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.045390284 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.025607596 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.464385142 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.04705623 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.026008993 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.020478714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.018147206 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.016622581 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.061808451 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.033126733 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.445143991 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.522004355 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.384481978 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.047506089 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.033434194 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.019256781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.364447521 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.030435794 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.022478428 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249779162 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.522558784 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.036949231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.022158786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.499205929 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.036479223 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.036282971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.029605624 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.2562359 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.036296734 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.060636533 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.020395286 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.022701272 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.019723793 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.036008612 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.024837455 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.019352575 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.495282727 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.131714408 seconds)
  done (took 249.390758842 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.016043715 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.017810382 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.015868768 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.020260342 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.015874772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.020336201 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.012564043 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.014756992 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.023122911 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.012807126 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.014664056 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.019613397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.016337056 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.056462479 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.022788671 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.020140081 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.618602774 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.014027499 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.015303223 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.046038954 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.670290089 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.022949238 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.016381274 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.014345342 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.017027241 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.014749053 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.023835715 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.020559004 seconds)
  done (took 171.751773072 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.023111267 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139897293 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.042182246 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.049397599 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.03143754 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.018866059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.046392103 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.033846132 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.027013026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.020566563 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.018100991 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.081069109 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.031590434 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.119009144 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.05185527 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.048192311 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.12204777 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.029909973 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.022107641 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.018564971 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.046766878 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.017301774 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.084120973 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.148997251 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.045117795 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.138280901 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.029198056 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.020892728 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.023857678 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.140330157 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.04171605 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.081559265 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.052979089 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.042189694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.147367134 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.139853473 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.126584535 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.053173457 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.02953827 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.019311392 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.02379864 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.008324564 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.139808931 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.040024252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.021287194 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.125637294 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.04835135 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.022420068 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.033435366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.020891515 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.033302145 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.042116159 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.088858495 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.159275274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.05846099 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.045085351 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.045545066 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.305954393 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.034605083 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.121720932 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.015561081 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.138807005 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.048305221 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.010676823 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.021049041 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.027495565 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.048379636 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.052838482 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.121398848 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.026195383 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.11872497 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.056896721 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.02866006 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.019954471 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.023552423 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.138843146 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.141385813 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.053824724 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.061073229 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.052708436 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.018556367 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.024169795 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.007951398 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.036444761 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.025425306 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.136899627 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.142299046 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.026283121 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.019898898 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.024454794 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.023881904 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.047254637 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.147865307 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.058827728 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.112785405 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.090561829 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.100797929 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.035924398 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.032956682 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.020510506 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.087807215 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.040446779 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.032453904 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.355939368 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.096294063 seconds)
  done (took 218.716874132 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.48409243 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.072141907 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.080715946 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.337181215 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.390223873 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.980389097 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.068552192 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.072340034 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.096350651 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.260185883 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.138646287 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.093173755 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.060362363 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.049216165 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.075674985 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.096456029 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.086363462 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.382375343 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.178805869 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.221962717 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.055185163 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.381528288 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.352295759 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.464181644 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.110456477 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.449511116 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.75114298 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.21699554 seconds)
  done (took 65.951088637 seconds)
done (took 870.269472611 seconds)
SAVING RESULT...
DONE!
